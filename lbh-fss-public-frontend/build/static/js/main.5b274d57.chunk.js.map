{"version":3,"sources":["assets/arrow-right.svg","fonts/open-sans-v17-latin/open-sans-v17-latin-700.ttf","fonts/open-sans-v17-latin/open-sans-v17-latin-700.woff","fonts/open-sans-v17-latin/open-sans-v17-latin-700.woff2","fonts/open-sans-v17-latin/open-sans-v17-latin-regular.ttf","fonts/open-sans-v17-latin/open-sans-v17-latin-regular.woff","fonts/open-sans-v17-latin/open-sans-v17-latin-regular.woff2","services/BaseApiUrl/BaseApiUrl.js","services/GetServices/GetServices.js","services/GetTaxonomies/GetTaxonomies.js","settings/colors.js","settings/themes.js","settings/typography.js","util/styled-components/CardContainer.js","util/styled-components/Card.js","components/Service/ServiceCard.js","context/UrlParamsContext/UrlParamsContext.js","components/Category/CategoryCard.js","context/UrlContext/UrlContext.js","context/PrevUrlContext/PrevUrlContext.js","context/PrevUrlParamsContext/PrevUrlParamsContext.js","history.js","components/Back/Back.js","components/Postcode/PostcodeButton.js","components/Header/Header.js","components/Button/Button.js","context/MapToggleContext/MapToggleContext.js","components/ToggleView/ToggleView.js","components/ServiceFilter/ServiceFilter.js","util/styled-components/MapContainer.js","helpers/Mapbox/ReactLeafletMarkerClusterStyles.js","helpers/Mapbox/getAllAddresses.js","helpers/Mapbox/getHomeLocation.js","helpers/GlobalVariables/GlobalVariables.js","components/HackneyMap/HackneyMap.js","components/MapPlaceholder/MapPlaceholder.js","components/Category/CategoryExplorer.js","components/FormError/FormError.js","util/styled-components/StyledInput.js","util/styled-components/StyledLabel.js","components/FormInputSubmit/FormInputSubmit.js","components/ServiceSearch/ServiceSearch.js","components/Service/ListServices.js","AppLoading.js","util/styled-components/InnerContainer.js","components/Address/Address.js","components/Share/Share.js","components/Service/ServiceDetail.js","components/FormInput/FormInput.js","components/Postcode/SetPostcode.js","util/styled-components/FilterContainer.js","util/styled-components/CheckboxContainer.js","components/FormCheckbox/FormCheckbox.js","components/SelectCategories/SelectCategories.js","components/SelectDemographics/SelectDemographics.js","components/ServiceSearch/ServiceSearchProcess.js","components/Category/ListCategories.js","components/Home/Home.js","components/RouteContainer/RouteContainer.js","helpers/GlobalStyle/GlobalStyle.js","util/styled-components/SidebarContainer.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","BASE_API_URL","GetServices","retrieveServices","search","offset","taxonomyids","limit","postcode","length","Array","isArray","split","join","concat","axios","get","params","paramsSerializer","qs","stringify","response","data","console","error","getService","id","GetTaxonomies","retrieveTaxonomies","sort","direction","vocabulary","taxonomies","getTaxonomy","green","blue","pink","red","yellow","dark","light","category","defaultTheme","CardContainer","styled","div","breakpoint","CARD_MODIFIERS","categoryCard","arrowRight","serviceCard","Card","applyStyleModifiers","ServiceCard","service","onClick","storedPostcode","localStorage","getItem","serviceArray","hero","images","medium","modifiers","className","e","src","alt","name","description","map","index","locationSorted","locations","a","b","parseFloat","distance","key","href","address1","address2","city","stateProvince","postalCode","target","UrlParamsContext","createContext","CategoryCard","urlParams","useContext","urlParamsArray","Object","entries","categoryIconName","replaceAll","toLowerCase","undefined","preventDefault","data-category-icon","UrlContext","PrevUrlContext","PrevUrlParamsContext","history","createBrowserHistory","BackButton","button","Back","setUrl","url","prevUrl","setPrevUrl","setUrlParams","prevUrlParams","setPrevUrlParams","window","location","prevUrlArrayLast","prevUrlParamsArrayLast","push","value","prevUrlArray","prevUrlParamsArray","categoryExplorerObj","find","category_explorer","listServicesSearchObj","service_search","listServicesPostcodeObj","URLSearchParams","toString","splice","PostcodeButtonContainer","PostcodeButton","path","buttonModifier","replace","postcodeValidator","setItem","HeaderContainer","Header","showPostcodeButton","StyledButton","darken","Button","type","label","disabled","MapToggleContext","ToggleViewContainer","mapButton","ToggleView","mapToggle","setMapToggle","useState","style","setStyle","toggleView","v","useEffect","ServiceFilterContainer","lighten","BUTTON_MODIFIERS","active","filter","FilterButton","ClearButton","ServiceFilter","showCategoriesButton","showDemographicsButton","showClearAllButton","checks","document","querySelectorAll","i","check","checked","MapContainer","ReactLeafletMarkerClusterStyles","createGlobalStyle","getAllAddresses","services","constructor","duplicateService","locationsArray","slice","thisService","getHomeLocation","metadata","postCodeLatitude","postCodeLongitude","CENTER_DESKTOP_LEGEND_FULLSCREEN","MAP_BOUNDS","MAPBOX_TILES_URL","ATTRIBUTION","HackneyMap","isServiceDetail","setIsServiceDetail","setPage","useQueryParams","NumberParam","removeQuery","LeafletMap","addInitHook","GestureHandling","ServiceCardEvent","urlArray","substring","includes","urlParamsString","newServiceUrl","val","updatedUrl","newServiceObj","support_service","Map","bounds","maxBounds","center","zoom","minZoom","maxZoom","zoomControl","dragging","tap","scrollWheelZoom","bounceAtZoomLimits","gestureHandling","ZoomControl","position","TileLayer","attribution","weight","iconMarkup","renderToStaticMarkup","icon","size","customMarkerIcon","divIcon","html","point","Marker","Popup","MapPlaceholder","Desktop","children","useMediaQuery","minWidth","CategoryCardContainer","CategoryExplorer","setData","categoryData","setCategoryData","isLoading","setIsLoading","paramsArray","currentSearch","paramObj","showMap","setShowMap","fetchOnce","setfetchOnce","Mobile","maxWidth","taxonomyId","categoryId","parseInt","getServices","getCategories","fetchData","queryParts","arrayLength","queryKeyValue","createParamObj","select","keys","StyledError","span","FormError","role","StyledInput","input","StyledLabel","StyledInputContainer","StyledHelp","p","FormInputSubmit","placeholder","register","defaultValue","required","maxLength","minLength","inputRef","validate","help","message","htmlFor","aria-label","ref","current","aria-invalid","ServiceSearchContainer","ServiceSearch","useForm","handleSubmit","errors","reset","searchTerm","setSearchTerm","searchValue","forms","onSubmit","data-testid","ListServices","AppLoading","InnerContainer","AddressList","li","Address","props","address","uprn","rel","ShareContainer","Share","currentUrl","FacebookShareButton","quote","FacebookIcon","round","TwitterShareButton","title","TwitterIcon","LinkedinShareButton","LinkedinIcon","WhatsappShareButton","WhatsappIcon","EmailShareButton","subject","body","EmailIcon","DetailContainer","InnerMapContainer","GreyInnerContainer","AccordionContainer","ActionSheetContainer","ServiceDetail","demographicData","setDemographicData","serviceId","getDemographics","useRef","componentRef","demographic","d","reduce","prev","curr","allowMultipleExpanded","preExpanded","categories","uuid","contact","website","telephone","email","referral","open","getElementById","childNodes","display","close","trigger","content","social","facebook","twitter","instagram","linkedin","FormInput","autoComplete","SetPostcodeContainer","SetPostcode","ListServicesSearchObj","ListServicesPostcodeObj","pattern","FilterContainer","CheckboxContainer","StyledDiv","StyledCheckbox","FormCheckbox","data-taxonomy-id","SelectCategories","defaultValues","selectedObj","indexOf","categoriesArray","checkboxes","categoryIdString","SelectDemographics","demographicsArray","demographicIdString","ServiceSearchProcess","ListCategoriesContainer","ListCategories","HomeHeader","Home","setQuery","postcodeRef","setPreviousUrls","postcodeValue","validPostcode","node","createElement","textNode","createTextNode","appendChild","pList","getElementsByTagName","parentNode","removeChild","top","firstChild","height","removeItem","storeQuery","FontAwesomeConfig","searchPseudoElements","RouteContainer","page","checkQuery","GlobalStyle","normalize","openSansV17LatinRegularWoff2","openSansV17LatinRegularWoff","openSansV17LatinRegularTtf","openSansV17Latin700Woff2","openSansV17Latin700Woff","openSansV17Latin700Ttf","SidebarContainer","App","urlValue","useMemo","prevUrlValue","urlParamValue","prevUrlParamsValue","mapToggleValue","theme","breakpoints","xs","sm","md","lg","xl","Provider","Boolean","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"6HAAAA,EAAOC,QAAU,IAA0B,yC,oBCA3CD,EAAOC,QAAU,IAA0B,qD,oBCA3CD,EAAOC,QAAU,IAA0B,sD,oBCA3CD,EAAOC,QAAU,IAA0B,uD,oBCA3CD,EAAOC,QAAU,IAA0B,yD,oBCA3CD,EAAOC,QAAU,IAA0B,0D,oBCA3CD,EAAOC,QAAU,IAA0B,2D,0KCE5BC,EADX,wE,kBC8EWC,EA3EK,CACZC,iBADY,YAOd,OAAD,yIALDC,cAKC,MALQ,GAKR,MAJDC,cAIC,MAJQ,EAIR,MAHDC,mBAGC,MAHa,GAGb,MAFDC,aAEC,MAFO,EAEP,MADDC,gBACC,MADU,GACV,EAE0B,IAAvBF,EAAYG,OAGZH,EADEI,MAAMC,QAAQL,EAAY,IACdA,EAAY,GAEZA,EAAY,GAAGM,MAAM,KAE5BN,EAAYG,OAAS,IAE1BC,MAAMC,QAAQL,EAAY,MAC5BA,EAAY,GAAKA,EAAY,GAAGO,KAAK,MAEnCH,MAAMC,QAAQL,EAAY,MAC5BA,EAAY,GAAKA,EAAY,GAAGO,KAAK,MAGvCP,EAAY,GAAKA,EAAY,GAAG,IAEhCA,GADAA,EAAcA,EAAY,GAAGQ,OAAOR,EAAY,KACtBM,MAAM,MApBjC,kBAwBwBG,IAAMC,IAAN,UAAaf,EAAb,aAAsC,CAC3DgB,OAAQ,CACNb,SACAC,SACAC,cACAC,QACAC,YAEFU,iBAAkB,SAAAD,GAChB,OAAOE,IAAGC,UAAUH,MAjCzB,cAwBOI,EAxBP,yBAqCQA,EAASC,MArCjB,uCAuCCC,QAAQC,MAAR,MAvCD,kBAyCQ,CACL,SAAY,KA1Cf,4DA8CGC,WArDY,YAwDd,OAAD,uHAFDC,EAEC,EAFDA,GAEC,IADDlB,gBACC,MADU,GACV,oBAEwBO,IAAMC,IAAN,UAAaf,EAAb,qBAAsCyB,GAAM,CACjET,OAAQ,CACNT,cAJL,cAEOa,EAFP,yBAQQA,EAASC,MARjB,uCAUCC,QAAQC,MAAR,MAVD,kBAYQ,CACL,QAAW,CAAC,YAAe,MAb9B,6DClBUG,EAvCO,CACdC,mBADc,YAKhB,OAAD,iIAHDC,YAGC,MAHM,SAGN,MAFDC,iBAEC,MAFW,MAEX,MADDC,kBACC,MADY,GACZ,oBAEwBhB,IAAMC,IAAN,UAAaf,EAAb,eAAwC,CAC7DgB,OAAQ,CACNY,OACAC,YACAC,gBANL,cAEOV,EAFP,yBAUQA,EAASC,KAAKU,YAVtB,uCAYCT,QAAQC,MAAR,MAZD,kBAcQ,CACL,WAAc,KAfjB,4DAmBGS,YAxBc,SAwBFP,GAAK,OAAD,mIAEKX,IAAMC,IAAN,UAAaf,EAAb,uBAAwCyB,GAAM,IAFnD,cAEZL,EAFY,yBAMXA,EAASC,MANE,uCAQlBC,QAAQC,MAAR,MARkB,kBAUX,IAVW,6D,eC3BXU,EACL,UADKA,EAEL,UAFKA,EAGJ,UAHIA,EAIH,UAJGA,EAKJ,UAGIC,EACL,UAGKC,EAEN,UAKMC,EACJ,UAGIC,EACD,UAGCC,EACJ,UADIA,EAED,UAFCA,EAGL,UAIKC,EACJ,UADIA,EAEL,UAFKA,EAGC,UAGDC,EACL,UADKA,EAEH,UAFGA,EAGC,UAHDA,EAIN,UAJMA,EAKD,UALCA,EAMJ,UANIA,EAOL,UAPKA,EAQJ,UARIA,EASH,UATGA,EAUA,UAVAA,EAWA,UChDAC,ECHc,yB,uWCIpB,IAAMC,EAAgBC,IAAOC,IAAV,IAEpBC,YAAW,KAAXA,CAFoB,IAQJN,I,kpBCLf,IAAMO,GAAiB,CAC1BC,aAAc,wEAEcZ,EAFd,8SAYOI,EAZP,4LAmBaS,IAnBb,2LA4BdC,YAAa,yQAUIX,EAVJ,4WA0BJY,GAAOP,IAAOC,IAAV,KACCL,EACMA,EAqBPD,EAGXa,8BAAoBL,KC5CXM,GAzCK,SAAC,GAA0B,IAAxBC,EAAuB,EAAvBA,QAASC,EAAc,EAAdA,QACtBC,EAAiBC,aAAaC,QAAQ,YACtCC,EAAe,CAACL,GAElBM,EAAO,GACPN,EAAQO,QAAUP,EAAQO,OAAOC,OAAOrD,SACxCmD,EAAON,EAAQO,OAAOC,QAO1B,OACI,kBAACX,GAAD,CAAMY,UAAU,cAAcrC,GAAI4B,EAAQ5B,GAAIsC,UAAU,aACpD,yBAAKT,QANE,SAAAU,GACXV,EAAQD,EAAQ5B,MAMPkC,EAAKnD,OACF,yBAAKuD,UAAU,mBACX,yBAAKE,IAAKN,EAAMO,IAAKb,EAAQc,QAEjC,GACJ,yBAAKJ,UAAU,wBACX,4BAAKV,EAAQc,MACb,uBAAGJ,UAAU,qBAAqBV,EAAQe,eAI9CV,EAAaW,KAAI,SAAChB,EAASiB,GACvB,IAAMC,EAAiBlB,EAAQmB,UAAU5C,MAAK,SAAU6C,EAAGC,GACvD,OAAOC,WAAWF,EAAEG,UAAYD,WAAWD,EAAEE,aAGjD,OACqC,OAAhCL,EAAe,GAAGK,SAAqB,uBAAGC,IAAKP,EAAOP,UAAU,qBAAzB,aAAuD,uBAAGA,UAAU,0BAA0Be,KAAI,0CAAqCvB,EAArC,YAAuDgB,EAAe,GAAGQ,SAAzE,cAAuFR,EAAe,GAAGS,SAAzG,cAAuHT,EAAe,GAAGU,KAAzI,cAAmJV,EAAe,GAAGW,cAArK,cAAwLX,EAAe,GAAGY,YAAcC,OAAO,UAAUb,EAAe,GAAGK,WAAoB,QChClaS,GAFUC,wBAAc,MC+BxBC,GA7BM,SAAC,GAA2B,IAAzB/C,EAAwB,EAAxBA,SAAUc,EAAc,EAAdA,QACvBkC,EAAaC,qBAAWJ,IAAxBG,UACDE,EAAiBC,OAAOC,QAAQJ,GAUhCK,EAAmBrD,EAAS2B,KAAK2B,WAAW,IAAK,KAAKC,cAE5D,OACI,kBAAC7C,GAAD,CAAMY,UAAU,eAAerC,GAAIe,EAASf,GAAIsC,UAAU,YAAYT,QAX3D,SAAAU,QACegC,IAAtBN,EAAe,IAA4C,qBAAxBA,EAAe,GAAG,IAAsD,KAAzBA,EAAe,GAAG,GACpG1B,EAAEiC,iBAEF3C,EAAQd,EAASf,MAQjB,yBAAKsC,UAAU,sCAAsCmC,qBAAoBL,GACrE,yBAAK9B,UAAU,uBACX,2BAAG,0BAAMA,UAAU,gBAAhB,mBAA4CvB,EAAS2B,KAArD,QAEP,yBAAKJ,UAAU,sBACX,4BAAKvB,EAAS2B,MACd,uBAAGJ,UAAU,qBAAqBvB,EAAS4B,iBCtBhD+B,GAFIb,wBAAc,MCElBc,GAFQd,wBAAc,ICEtBe,GAFcf,wBAAc,M,UCE5BgB,GAFCC,e,22BCOhB,IAAMC,GAAa7D,IAAO8D,OAAV,KAIHlE,GAmIEmE,GAlHF,WAAO,IAAD,EACOjB,qBAAWU,IAArBQ,GADG,EACRC,IADQ,EACHD,QADG,EAEelB,qBAAWW,IAAlCS,EAFQ,EAERA,QAASC,EAFD,EAECA,WAFD,EAGmBrB,qBAAWJ,IAAtCG,EAHQ,EAGRA,UAAWuB,EAHH,EAGGA,aAHH,EAI2BtB,qBAAWY,IAA9CW,EAJQ,EAIRA,cAAeC,EAJP,EAIOA,iBAChB1D,EAAiBC,aAAaC,QAAQ,YAEtByD,OAAOC,SAAShH,OActC,IAAMiH,EAAmBP,EAAQA,EAAQrG,OAAS,GAC5C6G,EAAyBL,EAAcA,EAAcxG,OAAS,GAuFpE,OACI,kBAACgG,GAAD,CAAYlD,QAtFD,SAAAU,GACX,IAAIsD,EAAO,KACPtG,EAAS,GAeb,GAAuB,IAAnB6F,EAAQrG,QAAkC,IAAlBwG,EACxB,cAA2BrB,OAAOC,QAAQJ,GAA1C,eAAsD,CAAC,IAAD,sBAA1CX,EAA0C,KAArC0C,EAAqC,KAElD,GAAW,mBAAP1C,GAAsC,KAAV0C,EAC5B,GAAuB,IAAnBV,EAAQrG,OAAc,CACtB,IAAIgH,EAAeX,EACfY,EAAqBT,EAEnBU,EAAsBV,EAAcW,MAAK,SAAAD,GAAmB,OAAIA,EAAoBE,qBACpFC,EAAwBb,EAAcW,MAAK,SAAAE,GAAqB,OAAIA,EAAsBC,kBAC1FC,EAA0Bf,EAAcW,MAAK,SAAAI,GAAuB,OAAIA,EAAwBxH,iBAC1EyF,IAAxB0B,GAEAJ,EAAO,IAAM,IAAIU,gBAAgBN,GAAqBO,WACtDjH,EAAS0G,QACwB1B,IAA1B6B,GAGHtE,IACAsE,EAAsBtH,SAAWgD,GAErC+D,EAAO,IAAM,IAAIU,gBAAgBH,GAAuBI,WACxDjH,EAAS6G,QAC0B7B,IAA5B+B,GAGHxE,IACAwE,EAAwBxH,SAAWgD,GAEvC+D,EAAO,IAAM,IAAIU,gBAAgBD,GAAyBE,WAC1DjH,EAAS+G,GAGLxE,IACA+D,EAAO,aAAa/D,EAAe,kBACnCvC,EAAS,CAAC,SAAYuC,EAAgB,oBAAkByC,GACxDa,EAAQqB,OAAO,EAAG,EAAGZ,GACrBN,EAAckB,OAAO,EAAG,EAAGlH,IAGnCsG,EAAOA,EAAKxB,WAAW,aAAc,IAGrC0B,EAAaF,KAAKA,GAClBR,EAAWU,GACXC,EAAmBH,KAAKtG,GACxBiG,EAAiBQ,QAEblE,IACA+D,EAAO,aAAa/D,EAAe,kBACnCvC,EAAS,CAAC,SAAYuC,EAAgB,oBAAkByC,QAIjD,gBAAPnB,GAAgC,qBAAPA,GAAqC,uBAAPA,GAA0C,QAAT0C,IAChGD,EAAOF,EACPpG,EAASqG,GAMrBf,GAAQgB,KAAKA,GACbX,EAAOW,GACPP,EAAa/F,KAKb,S,8/CClIR,IAAMmH,GAA0BxF,IAAO8D,OAAV,KACXxE,EACLM,EASSN,GAgEPmG,GAvCQ,WAgBnB,IAhB0B,IAAD,EACH3C,qBAAWU,IAArBQ,GADa,EAClBC,IADkB,EACbD,QADa,EAEKlB,qBAAWW,IAFhB,KAElBS,QAFkB,EAETC,WACkBrB,qBAAWJ,KAAtCG,EAHkB,EAGlBA,UAAWuB,EAHO,EAGPA,aAHO,EAIiBtB,qBAAWY,IACjD9F,GALqB,EAIlByG,cAJkB,EAIHC,iBACP,qBACToB,EAAO,qBACTC,EAAiB,GASrB,MAA2B3C,OAAOC,QAAQJ,GAA1C,eAAsD,CAAC,IAAD,sBAA1CX,EAA0C,KAArC0C,EAAqC,KAClD,GAAW,YAAP1C,QAA+BmB,IAAVuB,EAAqB,CAC1C,IAAMhH,EAAWgH,EAAMgB,QAAQ,MAAO,KAChBC,6BAAkBjI,EAAU,OAE9CiD,aAAaiF,QAAQ,WAAYlI,IAK7C,IAAMgD,EAAiBC,aAAaC,QAAQ,YAM5C,OALIF,IACAhD,EAAWgD,EACX+E,EAAiB,gBAIjB,kBAACH,GAAD,CAAyBpE,UAAWuE,EAAgBhF,QAxBpC,SAAAU,GAChBsC,GAAQgB,KAAKe,GACb1B,EAAO0B,GACPtB,EAAa,CAAC,aAAgB,WAsBzBxG,I,wPCtEb,IAAMmI,GAAkB/F,IAAOC,IAAV,KAEHX,EAGaA,GA0BhB0G,GArBA,WAOX,IAPkB,IAAD,EACKlD,qBAAWU,IADhB,KACVS,IADU,EACLD,OACkBlB,qBAAWW,KAFxB,KAEVS,QAFU,EAEDC,WACkBrB,qBAAWJ,KAAtCG,EAHU,EAGVA,UAHU,KAGCuB,aACwBtB,qBAAWY,KACjDuC,GALa,EAIV5B,cAJU,EAIKC,kBACG,GAEzB,MAA2BtB,OAAOC,QAAQJ,GAA1C,eAAsD,CAAC,IAAD,sBAA1CX,EAA0C,KAArC0C,EAAqC,KACtC,gBAAP1C,GAAgC,qBAAPA,GAAqC,uBAAPA,GAA0C,QAAT0C,IACzFqB,GAAqB,GAI7B,OACI,kBAACF,GAAD,CAAiB3E,UAAU,YACvB,kBAAC,GAAD,MACE6E,EAAsB,kBAAC,GAAD,MAAqB,K,sSC9BzD,IAAMC,GAAelG,IAAO8D,OAAV,KAGPlE,EACWN,EAOE6G,aAAO,GAAK7G,IA0BrB8G,GAtBA,SAAC,GAA8D,IAA5DC,EAA2D,EAA3DA,KAAMC,EAAqD,EAArDA,MAAOC,EAA8C,EAA9CA,SAA8C,IAApC5F,eAAoC,MAA1B,aAA0B,EAAhBS,EAAgB,EAAhBA,UAC3D,OACE,oCACE,kBAAC8E,GAAD,CACEG,KAAMA,EACNE,SAAUA,EACV5F,QAASA,EACTS,UAAWA,GAEX,8BAAOkF,MC1BAE,GAFU7D,wBAAc,I,s9ECSvC,IAAM8D,GAAsBzG,IAAOC,IAAV,KAgBOX,EAEXA,EAEe6G,aAAO,GAAK7G,GACvBM,EAEIA,EAKJN,EAaCM,EACMN,EAEXA,EAEe6G,aAAO,GAAK7G,GACvBM,EAEIA,EAIJN,GAcnB4G,GAAelG,YAAOoG,GAAPpG,CAAH,KACAV,EACMA,EAOXM,EAGeuG,aAAO,GAAK7G,GACvBM,EAYXY,8BAjC0B,CAC5BkG,UAAW,6FAyFAC,GAtDI,WASf,IATsB,IAAD,EACC7D,qBAAWU,IAA1BS,EADc,EACdA,IAAKD,EADS,EACTA,OADS,EAEalB,qBAAWJ,IAAtCG,EAFc,EAEdA,UAAWuB,EAFG,EAEHA,aAFG,EAGatB,qBAAW0D,IAAtCI,EAHc,EAGdA,UAAWC,EAHG,EAGHA,aAHG,EAIKC,mBAAS,gBAJd,mBAIdC,EAJc,KAIPC,EAJO,KAMjBrC,EAAOV,EACP5F,EAASwE,EAEb,MAA2BG,OAAOC,QAAQJ,GAA1C,eAAsD,CAAC,IAAD,sBAA1CX,EAA0C,KAArC0C,EAAqC,KACvC,cAAP1C,GAAiC,SAAV0C,IACvBvG,EAAM,WAAiB,OACvB+F,EAAa/F,GACbwI,EAAa,SAIrB,SAASI,EAAWC,GAChB7I,EAAM,WAAiB6I,EAEvBvC,GADAA,EAAO,IAAM,IAAIU,gBAAgBhH,GAAQiH,YAC7BnC,WAAW,aAAc,IACrCQ,GAAQgB,KAAKA,GACbX,EAAOW,GACPP,EAAa/F,GAGjB8I,qBAAU,WAEFH,EADc,SAAdJ,EACS,cAEA,kBAEd,CAACA,IAWJ,OACI,kBAACH,GAAD,CAAqBrF,UAAW2F,GAC5B,2CACA,6BACI,kBAAC,GAAD,CAAc3F,UAAU,uBAAuBiF,KAAK,SAASC,MAAM,OAAO3F,QAbpE,SAAAU,GACd4F,EAAW,SACXJ,EAAa,YAYL,kBAAC,GAAD,CAAc1F,UAAU,YAAYC,UAAU,sBAAsBiF,KAAK,SAASC,MAAM,MAAM3F,QAVzF,SAAAU,GACb4F,EAAW,QACXJ,EAAa,c,8rCCtId,IAAMO,GAAyBpH,IAAOC,IAAV,KACjBoH,aAAQ,IAAM/H,IASnBgI,GAAmB,CAC5BC,OAAQ,4CACK7H,EADL,YAGR8H,OAAQ,2FAONC,GAAezH,IAAO8D,OAAV,KACLlE,EAePY,8BAAoB8G,KAIpBI,GAAc1H,IAAO8D,OAAV,MAqFF6D,GA3EO,SAAC,GAAc,EAAbhH,QAyCpB,IAzCkC,IAAD,IACXmC,qBAAWU,IAArBQ,GADqB,EAC1BC,IAD0B,EACrBD,QADqB,EAEHlB,qBAAWW,IAFR,KAE1BS,QAF0B,EAEjBC,WACkBrB,qBAAWJ,KAAtCG,EAH0B,EAG1BA,UAAWuB,EAHe,EAGfA,aAHe,EAIStB,qBAAWY,IAGjDkE,GAP6B,EAI1BvD,cAJ0B,EAIXC,kBAGK,GACvBuD,GAAyB,EACzBC,GAAqB,EACrBf,EAAQ,GA+BZ,MAA2B/D,OAAOC,QAAQJ,GAA1C,eAAsD,CAAC,IAAD,sBAA1CX,EAA0C,KAArC0C,EAAqC,KACvC,qBAAP1C,GAAwC,KAAV0C,IAC9BgD,GAAuB,GAEhB,qBAAP1F,GAAwC,SAAV0C,IAC9BiD,GAAyB,EACzBC,GAAqB,EACrBf,EAAQ,UAED,uBAAP7E,GAA0C,SAAV0C,IAChCgD,GAAuB,EACvBE,GAAqB,EACrBf,EAAQ,UAIhB,OACI,kBAACK,GAAD,KACMQ,EACE,kBAACH,GAAD,CAActG,UAAW4F,EAAOpG,QAhDd,SAAAU,GAC1B,cAA2B2B,OAAOC,QAAQJ,GAA1C,eAAsD,CAAC,IAAD,sBAA1CX,EAA0C,KAArC0C,EAAqC,KACtC,sBAAR1C,GAAyC,SAAV0C,IAC/BjB,GAAQgB,KAVG,2BAWXX,EAXW,2BAYXI,EAAa,CAAC,kBAAqB,aA2CnC,cAEkB,GACpByD,EACE,kBAACJ,IAAD,GAActG,UAAW4F,GAAzB,2BAA0C,UAA1C,0BA3CoB,SAAA1F,GAC5B,cAA2B2B,OAAOC,QAAQJ,GAA1C,eAAsD,CAAC,IAAD,sBAA1CX,EAA0C,KAArC0C,EAAqC,KACtC,wBAAR1C,GAA2C,SAAV0C,IACjCjB,GAAQgB,KAlBK,6BAmBbX,EAnBa,6BAoBbI,EAAa,CAAC,oBAAuB,cAsCrC,cAEkB,GACpB0D,EACE,kBAACJ,GAAD,CAAa/G,QAtCI,SAAAU,GAEzB,IADA,IAAI0G,EAASC,SAASC,iBAAiB,0BAC9BC,EAAI,EAAGA,EAAIH,EAAOlK,OAAQqK,IAAK,CACpC,IAAIC,EAAQJ,EAAOG,GACdC,EAAM5B,WACP4B,EAAMC,SAAU,MAiChB,aAEiB,K,qZClI1B,IAAMC,GAAerI,IAAOC,IAAV,KAOnBC,YAAW,KAAXA,CAPmB,O,shFCDlB,IAAMoI,GAAkCC,YAAH,M,mBC+B7BC,GAjCS,SAAA9J,GAGpBA,OADyB2E,IAAvB3E,EAAKA,KAAK+J,UAA0B/J,EAAKA,KAAK+J,SAASC,cAAgB5K,MAClEY,EAAKA,KAAK+J,SAGV,CAAC/J,EAAKA,KAAKgC,SAKpB,IAHA,IAAIiI,EAAgB,aAAOjK,GAEvBwJ,EAAI,EACDA,EAAIxJ,EAAKb,QAAQ,CAEtB,GAAIa,EAAKwJ,GAAGrG,UAAUhE,OAAS,EAI7B,IAFA,IAAM+K,EAAiBlK,EAAKwJ,GAAGrG,UAE/B,MAA2BmB,OAAOC,QAAQ2F,EAAeC,MAAM,IAA/D,eAAoE,CAAC,IAAD,sBAAnDjE,GAAmD,WAE9DkE,EAAW,gBAAOpK,EAAKwJ,IAE3BY,EAAYjH,UAAY,GAExBiH,EAAYjH,UAAU8C,KAAKC,GAE3B+D,EAAiBhE,KAAKmE,GAG1BZ,IAEF,OAAOS,GCpBMI,GAVS,SAAArK,GACpB,QAA2B2E,IAAvB3E,EAAKA,KAAKsK,WACkC,OAAxCtK,EAAKA,KAAKsK,SAASC,kBAAsE,OAAzCvK,EAAKA,KAAKsK,SAASE,mBAEnE,MADmB,CAACxK,EAAKA,KAAKsK,UAItC,MAAO,I,SCHLG,I,OAAmC,CAAC,QAAS,OAQ7CC,GAAa,CACjB,CAAC,WAAY,IACb,CAAC,UAAW,MAORC,GAAmB,4MAInBC,GAAc,mNCgKLC,GA9II,SAAC7K,GAAU,IAAD,EACHoE,qBAAWU,IAA1BS,EADkB,EAClBA,IAAKD,EADa,EACbA,OADa,EAEKlB,qBAAWW,IAAlCS,EAFkB,EAElBA,QAASC,EAFS,EAETA,WAFS,EAGSrB,qBAAWJ,IAAtCG,EAHkB,EAGlBA,UAAWuB,EAHO,EAGPA,aAHO,EAIiBtB,qBAAWY,IAA9CW,EAJkB,EAIlBA,cAAeC,EAJG,EAIHA,iBAJG,EAKSwC,oBAAS,GALlB,gCAMqBA,oBAAS,IAN9B,mBAMlB0C,EANkB,KAMDC,EANC,OAOD3C,mBAAS,MAPR,mBAOZ4C,GAPY,aAQOC,aAAe,CAAEjJ,QAASkJ,OARjC,mBASnBC,GATmB,KAQhBnJ,QARgB,KASL,CAAC,oBAAqB,WAAY,iBAAkB,aAAc,gBACrE,UAAOmJ,EAAP,CAAoB,oBAErCC,OAAWC,YAAY,aAAc,kBAAmBC,oBAExD7C,qBAAU,WACN,cAA2BnE,OAAOC,QAAQJ,GAA1C,eAAsD,CAAC,IAAD,sBAA1CX,EAA0C,KAArC0C,EAAqC,KAE9C6E,EADO,mBAAPvH,GAAsC,KAAV0C,OAQxC,IAAMqF,EAAmB,SAAA5I,GAMrB,IALA,IAAMN,EAAe,GACfmJ,EAAWjG,EAAIkG,UAAU,GAAGnM,MAAM,SACpC6G,EAAeX,EACfY,EAAqBT,EAEzB,MAA2BrB,OAAOC,QAAQJ,GAA1C,eAAsD,CAAC,IAAD,sBAA1CX,EAA0C,KAArC0C,EAAqC,KAClD,GAAIiF,EAAYO,SAASlI,GACrB,GAAI0C,EAAO,CACP,IAAMyF,EAAkBnI,EAAM,IAAM0C,EACpC7D,EAAa4D,KAAK0F,OACf,CACH,IAAMA,EAAkBnI,EACxBnB,EAAa4D,KAAK0F,IAK9B,IAAIC,EAAgBJ,EAAS1C,QAAO,SAAA+C,GAAG,OAAKxJ,EAAaqJ,SAASG,MAAMtM,KAAK,KACvD,KAAlBqM,IAAsBA,EAAgB,IAAMA,GAChD,IAAME,EAAa,oBAAsBnJ,EACnCoJ,EAAgB,CAACC,gBAAiBrJ,EAAEiE,YAC1C3B,GAAQgB,KAAK6F,GAEbxG,EAAOwG,GACPd,EAAQ,iBACRtF,EAAaqG,GAEb5F,EAAaF,KAAK6F,GAClBrG,EAAWU,GAGXC,EAAmBH,KAAK8F,GACxBnG,EAAiBQ,IAGxB,OACG,kBAAC6F,GAAA,EAAD,CAAKvJ,UAAU,oBACXwJ,OAAQxB,GACRyB,UAAWzB,GACX0B,OAAQ3B,GACR4B,KDzGS,GC0GTC,QD1GS,GC2GTC,QD5GS,GC6GTC,aAAa,EACbC,UAAU,EACVC,KAAK,EACLC,iBAAiB,EACjBC,oBAAoB,EACpBC,iBAAe,GAEf,kBAACjD,GAAD,MACA,kBAACkD,GAAA,EAAD,CAAaC,SAAS,aACtB,kBAACC,GAAA,EAAD,CACIC,YAAarC,GACbrF,IAAKoF,KAET,kBAAC,KAAD,KAEQb,GAAgB9J,GAAMgD,KAAI,SAAChB,EAASiB,GAEhC,IAIMuB,EAJmBxC,EAAO,WAAezB,MAAK,SAAU6C,EAAGC,GAC7D,OAAOD,EAAE8J,OAAS7J,EAAE6J,UAGkB,GAAGpK,KAAK2B,WAAW,IAAK,KAAKC,cAEjEyI,EAAaC,gCACf,yBAAK1K,UAAU,qBAAqBmC,qBAAoBL,GACpD,kBAAC,KAAD,CAAiB6I,KAAM,CAAC,MAAO,kBAAmBC,KAAK,OACvD,kBAAC,KAAD,CAAiBD,KAAM,CAAC,MAAO,cAAeC,KAAK,SAGrDC,EAAmBC,mBAAQ,CAC7BC,KAAMN,IAGJO,EAAQ,CAACpK,WAAWtB,EAAO,UAAc,GAArB,UAAsCsB,WAAWtB,EAAO,UAAc,GAArB,YAE3E,OACI,kBAAC2L,GAAA,EAAD,CAAQZ,SAAUW,EAAOlK,IAAKP,EAAOoK,KAAME,GAEf,GAAnBzC,EACG,kBAAC8C,GAAA,EAAD,KACI,kBAAC,GAAD,CAAapK,IAAKP,EAAOjB,QAASA,EAASC,QAASsJ,KAC7C,QASnClB,GAAgBrK,GAAMgD,KAAI,SAAC8C,EAAU7C,GACjC,GAAkC,OAA9B6C,EAASyE,kBAA4D,OAA/BzE,EAAS0E,kBAA4B,CAC3E,IAAM2C,EAAaC,gCACf,yBAAK1K,UAAU,2BACX,kBAAC,KAAD,CAAiB2K,KAAM,CAAC,MAAO,cAAeC,KAAK,OACnD,kBAAC,KAAD,CAAiBD,KAAM,CAAC,MAAO,cAAeC,KAAK,KAAK5K,UAAU,2BAClE,kBAAC,KAAD,CAAiB2K,KAAM,CAAC,MAAO,QAASC,KAAK,SAG/CC,EAAmBC,mBAAQ,CAC7BC,KAAMN,IAEJO,EAAQ,CAACpK,WAAWwC,EAASyE,kBAAmBjH,WAAWwC,EAAS0E,oBAC1E,OACI,kBAACmD,GAAA,EAAD,CAAQZ,SAAUW,EAAOlK,IAAKP,EAAOoK,KAAME,U,SChJnEnC,OAAWC,YAAY,aAAc,kBAAmBC,oBAExD,IAmCeuC,GAnCQ,WAEnB,IAAMC,EAAU,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAEf,OADkBC,yBAAc,CAAEC,SAAU,MACzBF,EAAW,MAGlC,OACI,kBAACD,EAAD,KACI,kBAACnE,GAAD,KACI,kBAACsC,GAAA,EAAD,CAAKvJ,UAAU,oBACXwJ,OAAQxB,GACRyB,UAAWzB,GACX0B,OAAQ3B,GACR4B,KF5CH,GE6CGC,QF7CH,GE8CGC,QF/CH,GEgDGC,aAAa,EACbC,UAAU,EACVC,KAAK,EACLC,iBAAiB,EACjBC,oBAAoB,EACpBC,iBAAe,GAEf,kBAACC,GAAA,EAAD,CAAaC,SAAS,aACtB,kBAACC,GAAA,EAAD,CACIC,YAAarC,GACbrF,IAAKoF,S,uYCzCtB,IAAMuD,GAAwB5M,IAAOC,IAAV,MAkLnB4M,GA9JU,SAAC,GAA0B,EAAxBhN,SAAyB,IAAfc,EAAc,EAAdA,QAAc,EAC1BmG,mBAAS,IADiB,mBAC3CpI,EAD2C,KACrCoO,EADqC,OAEVhG,mBAAS,IAFC,mBAE3CiG,EAF2C,KAE7BC,EAF6B,OAGhBlG,oBAAS,GAHO,mBAG3CmG,EAH2C,KAGhCC,EAHgC,KAI3CrK,EAAaC,qBAAWJ,IAAxBG,UAJ2C,EAKpBC,qBAAWW,IAAlCS,EAL2C,EAK3CA,QAASC,EALkC,EAKlCA,WALkC,EAMRrB,qBAAWY,IAA9CW,EAN2C,EAM3CA,cAAeC,EAN4B,EAM5BA,iBAN4B,EAOhBxB,qBAAW0D,IAAtCI,EAP2C,EAO3CA,UACDuG,GAR4C,EAOhCtG,aACE,CAAC,oBAAqB,WAAY,iBAAkB,kBAAmB,aAAc,gBACnGuG,EAAgB7I,OAAOC,SAAShH,OAClC6P,EAAW,GAVmC,EAWpBvG,mBAAS,SAXW,mBAW3CwG,EAX2C,KAWlCC,EAXkC,OAYhBzG,oBAAS,GAZO,mBAY3C0G,EAZ2C,KAYhCC,EAZgC,KAc5CjB,EAAU,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAEjB,OADkBC,yBAAc,CAAEC,SAAU,MACzBF,EAAW,MAG1BiB,EAAS,SAAC,GAAkB,IAAhBjB,EAAe,EAAfA,SAEhB,OADiBC,yBAAc,CAAEiB,SAAU,MACzBlB,EAAW,MAiE/B,GAnDAtF,qBAAU,WAAM,4CACd,4CAAArF,EAAA,sDAOE,IANI8L,EAAa,GACbC,EAAa,GACb7K,OAAOC,QAAQJ,GAAW,IAAyC,qBAAnCG,OAAOC,QAAQJ,GAAW,GAAG,IAAiE,KAApCG,OAAOC,QAAQJ,GAAW,GAAG,KACzHgL,EAAaC,SAAS9K,OAAOC,QAAQJ,GAAW,GAAG,KAGrD,MAA2BG,OAAOC,QAAQJ,GAA1C,eAAuD,EAAD,oBAA1CX,EAA0C,KAArC0C,EAAqC,KACxC,qBAAP1C,GAAqC,eAAPA,GAAmC,KAAV0C,GAC1DgJ,EAAWjJ,KAAKC,GATtB,gBAc4BtH,EAAYC,iBAAiB,CAACG,YAAakQ,IAdvE,cAcQG,EAdR,OAeEjB,EAAQiB,GAAe,IAfzB,UAiB8BhP,EAAcM,YAAYwO,GAjBxD,QAiBQG,EAjBR,OAkBEhB,EAAgBgB,GAAiB,IACjCd,GAAa,GAnBf,6CADc,sBA2Bd,GALiB,GAAbM,KAtBW,WAAD,wBAuBZS,GACAR,GAAa,IAGO,GAAlBvJ,EAAQrG,QAAuC,GAAxBwG,EAAcxG,OAAa,CACpD,IAAIgH,EAAe,CAAC,IAChBC,EAAqB,CAAC,IAGtBsI,IACFvI,EAAaF,KAAKyI,GAClBjJ,EAAWU,IA7CjB,SAAwBuI,EAAeD,GAGrC,IAFA,IAAMe,EAAad,EAAcjD,UAAU,GAAGnM,MAAM,SAC9CmQ,EAAcD,EAAWrQ,OACtBqK,EAAI,EAAGA,EAAIiG,EAAajG,IAAK,CACpC,IAAMkG,EAAgBF,EAAWhG,GAAGlK,MAAM,KACtCmP,EAAY/C,SAASgE,EAAc,MACrCf,EAASe,EAAc,IAAMA,EAAc,KA2C7CC,CAAejB,EAAeD,GAC9BrI,EAAmBH,KAAK0I,GACxB/I,EAAiBQ,GAIjByI,EADgB,SAAd3G,EACS,OAEA,YAKXqG,EACF,OAAO,yCAGT,IAAMqB,EAAS,SAAAjN,GACbV,EAAQU,IAGV,OACE,6BACwC,IAArC2B,OAAOuL,KAAKxB,GAAclP,OACzB,6BACE,kBAAC,GAAD,MACA,yBAAKuD,UAAU,cACb,gDACA,oGAEF,kBAAC,GAAD,OAGF,6BACE,kBAAC,GAAD,MACA,kBAAC,GAAD,MACA,kBAACwL,GAAD,KACE,kBAAC,GAAD,CACE1K,IAAK6K,EAAajO,GAClBe,SAAUkN,KAGd,kBAACW,EAAD,KACE,kBAAC,GAAD,MAEe,SAAXJ,EACA,kBAACvN,EAAD,KACGrB,EAAK+J,SAAS/G,KAAI,SAAChB,EAASiB,GAC3B,OACE,kBAAC,GAAD,CAAaO,IAAKP,EAAOjB,QAASA,EAASC,QAAS2N,QAGvC,IAGzB,kBAAC9B,EAAD,KACE,kBAACzM,EAAD,KACGrB,EAAK+J,SAAS/G,KAAI,SAAChB,EAASiB,GAC3B,OACE,kBAAC,GAAD,CAAaO,IAAKP,EAAOjB,QAASA,EAASC,QAAS2N,SAK5D,kBAACZ,EAAD,KAEe,QAAXJ,EACA,kBAACjF,GAAD,KACE,kBAAC,GAAD,CAAY3J,KAAMA,KACF,IAGtB,kBAAC8N,EAAD,KACE,kBAACnE,GAAD,KACE,kBAAC,GAAD,CAAY3J,KAAMA,S,4ICtLhC,IAAM8P,GAAcxO,IAAOyO,KAAV,KAGN7O,GAOI8O,GAJG,SAAC,GAAe,IAAb9P,EAAY,EAAZA,MACnB,OAAO,kBAAC4P,GAAD,CAAaG,KAAK,SAAS/P,I,yZCP7B,IAAMgQ,GAAc5O,IAAO6O,MAAV,KAQlB3O,YAAW,KAAXA,CARkB,MAaAT,G,mQCdjB,IAAMqP,GAAc9O,IAAOsG,MAAV,M,w2CCOxB,IAAMyI,GAAuB/O,IAAOC,IAAV,MAIpBiG,GAAelG,YAAOoG,GAAPpG,CAAH,KACFV,EAUQ6G,aAAO,GAAK7G,IA0B9B0P,GAAahP,IAAOiP,EAAV,MAuEDC,GArES,SAAC,GAelB,IAdLpQ,EAcI,EAdJA,GACAuH,EAaI,EAbJA,KACA7E,EAYI,EAZJA,KACA8E,EAWI,EAXJA,MACA6I,EAUI,EAVJA,YACAC,EASI,EATJA,SACAC,EAQI,EARJA,aACAC,EAOI,EAPJA,SACAC,EAMI,EANJA,UACAC,EAKI,EALJA,UACA5Q,EAII,EAJJA,MACA6Q,EAGI,EAHJA,SACAC,EAEI,EAFJA,SACAC,EACI,EADJA,KAEA,OACE,oCACG/Q,GAAwB,aAAfA,EAAMyH,MACd,kBAAC,GAAD,CAAWzH,MAAK,UAAK0H,EAAL,mBAEjB1H,GAAwB,cAAfA,EAAMyH,MACd,kBAAC,GAAD,CAAWzH,MAAM,yBAElBA,GAAwB,cAAfA,EAAMyH,MACd,kBAAC,GAAD,CACEzH,MAAK,UAAK0H,EAAL,6BAA+BkJ,EAA/B,YACM,WAATnJ,EAAoB,SAAW,aAD5B,OAKRzH,GAASA,EAAMgR,SAAW,kBAAC,GAAD,CAAWhR,MAAOA,EAAMgR,UACnD,kBAACd,GAAD,CAAae,QAASrO,GAAO8E,GAC5BqJ,EAAO,kBAACX,GAAD,KAAaW,GAAqB,GAC1C,kBAACZ,GAAD,KACE,kBAACH,GAAD,CACE9P,GAAIA,EACJgR,aAAYtO,EACZA,KAAMA,EACN2N,YAAaA,EACb9I,KAAMA,EACN0J,IAAK,SAAC1O,GACJ+N,EAAS/N,EAAG,CAAEiO,WAAUE,YAAWD,YAAWG,aAC1CD,IAAUA,EAASO,QAAU3O,IAEnCgO,aAAcA,EACdY,eAAcrR,EAAQ,OAAS,UAGjC,kBAAC,GAAD,CAAcyH,KAAK,SAASC,MAAM,c,wVC5FnC,IAAM4J,GAAyBlQ,IAAOC,IAAV,KACjBX,GAqEH6Q,GArDO,SAAC,GAAc,EAAbxP,QAAc,IAAD,EACXmC,qBAAWU,IADA,KAC1BS,IAD0B,EACrBD,OACkBlB,qBAAWW,KAAlCS,EAF0B,EAE1BA,QAF0B,KAEjBC,WACkBrB,qBAAWJ,KAAtCG,EAH0B,EAG1BA,UAAWuB,EAHe,EAGfA,aAHe,EAIStB,qBAAWY,IAA9CW,EAJ0B,EAI1BA,cAAeC,EAJW,EAIXA,iBAJW,EAKiB8L,eAA1ChB,EALyB,EAKzBA,SAAUiB,EALe,EAKfA,aALe,KAKDC,OALC,EAKOC,MACNzJ,oBAAS,IANV,mBAM1BmG,EAN0B,KAMfC,EANe,QAQVrM,aAAaC,QAAQ,YACRgG,mBAAS,KATZ,mBAS1B0J,EAT0B,KASdC,EATc,KAW3B/L,GADmBR,EAAQA,EAAQrG,OAAS,GACnBwG,EAAcA,EAAcxG,OAAS,IAXnC,4CAsBjC,8BAAAiE,EAAA,0DACQmL,EADR,iDAGQyD,EAAc1I,SAAS2I,MAAM,qBAAf,eAAsD/L,MAEpEE,EAAqBT,EACzBK,EAAsB,eAAqBgM,EAC3C5L,EAAmBH,KAAKD,GACxBJ,EAAiBQ,GAEjBV,EAAa,CAAC,uBAA0B,SAV5C,4CAtBiC,sBAoCjC,OAvBA+C,qBAAU,WACN,cAA2BnE,OAAOC,QAAQJ,GAA1C,eAAsD,CAAC,IAAD,sBAA1CX,EAA0C,KAArC0C,EAAqC,KACvC,kBAAP1C,QAAqCmB,IAAVuB,GAC3B6L,EAAc7L,GAGtBsI,GAAa,MAkBb,kBAACgD,GAAD,KACI,0BAAMpR,GAAG,oBAAoB8R,SAAUP,GAtCd,6CAsCwCQ,cAAY,QACzE,kBAAC,GAAD,CACI/R,GAAG,sBACHwH,MAAM,uBACN6I,YAAY,gCACZ3N,KAAK,iBACL6E,KAAK,OACL+I,SAAUA,EACVC,aAAcmB,OCiGnBM,GAxJM,SAAC,GAAiB,IAAfnQ,EAAc,EAAdA,QAAc,EACZmG,mBAAS,IADG,mBAC7BpI,EAD6B,KACvBoO,EADuB,OAEFhG,oBAAS,GAFP,mBAE7BmG,EAF6B,KAElBC,EAFkB,OAGFpK,qBAAWJ,IAAtCG,EAH6B,EAG7BA,UAH6B,KAGlBuB,aACYtB,qBAAWW,KAAlCS,EAJ6B,EAI7BA,QAASC,EAJoB,EAIpBA,WAJoB,EAKMrB,qBAAWY,IAA9CW,EAL6B,EAK7BA,cAAeC,EALc,EAKdA,iBALc,EAMFxB,qBAAW0D,IAAtCI,EAN6B,EAM7BA,UACDuG,GAP8B,EAMlBtG,aACE,CAAC,oBAAqB,WAAY,iBAAkB,kBAAmB,aAAc,gBACnGuG,EAAgB7I,OAAOC,SAAShH,OAClC6P,EAAW,GATqB,EAUNvG,mBAAS,SAVH,mBAU7BwG,EAV6B,KAUpBC,EAVoB,OAWFzG,oBAAS,GAXP,mBAW7B0G,EAX6B,KAWlBC,EAXkB,KAa9BjB,EAAU,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAEjB,OADkBC,yBAAc,CAAEC,SAAU,MACzBF,EAAW,MAG1BiB,EAAS,SAAC,GAAkB,IAAhBjB,EAAe,EAAfA,SAEhB,OADiBC,yBAAc,CAAEiB,SAAU,MACzBlB,EAAW,MAgE/B,GAlDAtF,qBAAU,WAAM,4CACd,4CAAArF,EAAA,sDAIE,IAHIlE,EAAW,GACXJ,EAAS,GACToQ,EAAa,GACjB,MAA2B5K,OAAOC,QAAQJ,GAA1C,eAAuD,EAAD,oBAA1CX,EAA0C,KAArC0C,EAAqC,KACzC,YAAP1C,GAA+B,KAAV0C,IACvBhH,EAAWgH,GAEF,kBAAP1C,GAAqC,KAAV0C,IAC7BpH,EAASoH,GAEC,cAAP1C,GAA8B,eAAPA,GAAmC,KAAV0C,GACnDgJ,EAAWjJ,KAAKC,GAZtB,gBAgB4BtH,EAAYC,iBAAiB,CAACK,SAAUA,EAAUJ,OAAQA,EAAQE,YAAakQ,IAhB3G,OAgBQG,EAhBR,OAiBEjB,EAAQiB,GAAe,IACvBb,GAAa,GAlBf,4CADc,sBA0Bd,GALiB,GAAbM,KArBW,WAAD,wBAsBZS,GACAR,GAAa,IAGO,GAAlBvJ,EAAQrG,QAAuC,GAAxBwG,EAAcxG,OAAa,CACpD,IAAIgH,EAAe,CAAC,IAChBC,EAAqB,CAAC,IAGtBsI,IACFvI,EAAaF,KAAKyI,GAClBjJ,EAAWU,IA5CjB,SAAwBuI,EAAeD,GAGrC,IAFA,IAAMe,EAAad,EAAcjD,UAAU,GAAGnM,MAAM,SAC9CmQ,EAAcD,EAAWrQ,OACtBqK,EAAI,EAAGA,EAAIiG,EAAajG,IAAK,CACpC,IAAMkG,EAAgBF,EAAWhG,GAAGlK,MAAM,KACtCmP,EAAY/C,SAASgE,EAAc,MACrCf,EAASe,EAAc,IAAMA,EAAc,KA0C7CC,CAAejB,EAAeD,GAC9BrI,EAAmBH,KAAK0I,GACxB/I,EAAiBQ,GAIjByI,EADgB,SAAd3G,EACS,OAEA,YAKXqG,EACF,OAAO,yCAGT,IAAMqB,EAAS,SAAAjN,GACbV,EAAQU,IAGV,OACE,6BACI3C,EAAK+J,SAAS5K,OAUd,6BACE,kBAAC,GAAD,MACA,kBAAC,GAAD,MACA,kBAAC,GAAD,MACA,kBAAC6P,EAAD,KACE,kBAAC,GAAD,MAEe,SAAXJ,EACA,kBAACvN,EAAD,KACGrB,EAAK+J,SAAS/G,KAAI,SAAChB,EAASiB,GAC3B,OACE,kBAAC,GAAD,CAAaO,IAAKP,EAAOjB,QAASA,EAASC,QAAS2N,QAGvC,IAGzB,kBAAC9B,EAAD,KACE,kBAACzM,EAAD,KACGrB,EAAK+J,SAAS/G,KAAI,SAAChB,EAASiB,GAC3B,OACE,kBAAC,GAAD,CAAaO,IAAKP,EAAOjB,QAASA,EAASC,QAAS2N,SAM5D,kBAACZ,EAAD,KAEe,QAAXJ,EACA,kBAACjF,GAAD,KACE,kBAAC,GAAD,CAAY3J,KAAMA,KACF,IAGtB,kBAAC8N,EAAD,KACE,kBAACnE,GAAD,KACE,kBAAC,GAAD,CAAY3J,KAAMA,OA9CxB,6BACE,kBAAC,GAAD,MACA,yBAAK0C,UAAU,cACb,gDACA,8GAEF,kBAAC,GAAD,SCjHK2P,GAJI,WACjB,OAAO,yC,6FCAF,IAAMC,GAAiBhR,IAAOC,IAAV,M,86BCApB,IAAMgR,GAAcjR,IAAOkR,GAAV,MA2CTC,GArBC,SAACC,GAAW,IAChBC,EAAYD,EAAZC,QACJzQ,EAAiBC,aAAaC,QAAQ,YAG1C,OAFAF,EAAkBA,GAAmC,GAGjD,kBAACqQ,GAAD,CAAa/O,IAAKmP,EAAQC,MACtB,6BACI,uBAAGnP,KAAI,0CAAqCvB,EAArC,YAAuDyQ,EAAQjP,SAA/D,cAA6EiP,EAAQhP,SAArF,cAAmGgP,EAAQ/O,KAA3G,cAAqH+O,EAAQ9O,cAA7H,cAAgJ8O,EAAQ7O,YAAcC,OAAO,SAAS8O,IAAI,uBAC5LF,EAAQjP,SAAS,6BACjBiP,EAAQhP,SAAWgP,EAAQhP,SAAW,KAAO,GAC7CgP,EAAQ/O,KAAO+O,EAAQ/O,KAAO,KAAO,GACrC+O,EAAQ9O,cAAgB8O,EAAQ9O,cAAgB,KAAO,GACvD8O,EAAQ7O,WAAa6O,EAAQ7O,WAAa,KAG3B,OAAtB6O,EAAQpP,SAAqB,8BAAOoP,EAAQpP,SAAf,SAAuC,K,oOC1BlF,IAAMuP,GAAiBxR,IAAOC,IAAV,MA4CLwR,GAtCD,SAAC/Q,GACX,IAAMgR,EAAanN,OAAOC,SAASrC,KACnC,OACI,kBAACqP,GAAD,KACI,kBAACG,GAAA,EAAD,CACI1N,IAAKyN,EACLE,MAAOlR,EAAQA,QAAQc,MAEvB,kBAACqQ,GAAA,EAAD,CAAc7F,KAAM,GAAI8F,OAAK,KAEjC,kBAACC,GAAA,EAAD,CACI9N,IAAKyN,EACLM,MAAOtR,EAAQA,QAAQc,MAEvB,kBAACyQ,GAAA,EAAD,CAAajG,KAAM,GAAI8F,OAAK,KAEhC,kBAACI,GAAA,EAAD,CACIjO,IAAKyN,GAEL,kBAACS,GAAA,EAAD,CAAcnG,KAAM,GAAI8F,OAAK,KAEjC,kBAACM,GAAA,EAAD,CACInO,IAAKyN,EACLM,MAAOtR,EAAQA,QAAQc,MAEvB,kBAAC6Q,GAAA,EAAD,CAAcrG,KAAM,GAAI8F,OAAK,KAEjC,kBAACQ,GAAA,EAAD,CACIrO,IAAKyN,EACLa,QAAS7R,EAAQA,QAAQc,KACzBgR,KAAK,IAEL,kBAACC,GAAA,EAAD,CAAWzG,KAAM,GAAI8F,OAAK,O,gxNCxBnC,IAAMY,GAAkB1S,IAAOC,IAAV,KAElBC,YAAW,KAAXA,CAFkB,KAOFN,GAUJN,EAILM,EAGeuG,aAAO,GAAK7G,GAwB3BC,EAGI4G,aAAO,GAAK5G,GAkCZI,GAsBRgT,GAAoB3S,IAAOC,IAAV,MAMxB2S,GAAqB5S,YAAOgR,GAAPhR,CAAH,KACNJ,EAYGD,GAMRkT,GAAqB7S,IAAOC,IAAV,KAMdN,EAuDAA,EAQSL,GAKbwT,GAAuB9S,IAAOC,IAAV,MA0NlB8S,GA7MO,WAAO,IAAD,EACAjM,mBAAS,IADT,mBACjBpI,EADiB,KACXoO,EADW,OAEsBhG,mBAAS,IAF/B,mBAEjBkM,EAFiB,KAEAC,EAFA,OAGUnM,oBAAS,GAHnB,mBAGjBmG,EAHiB,KAGNC,EAHM,KAIjBrK,EAAaC,qBAAWJ,IAAxBG,UAJiB,EAKMC,qBAAWW,IAAlCS,EALiB,EAKjBA,QAASC,EALQ,EAKRA,WALQ,EAMkBrB,qBAAWY,IAA9CW,EANiB,EAMjBA,cAAeC,EANE,EAMFA,iBAChB6I,EAAc,CAAC,oBAAqB,WAAY,iBAAkB,kBAAmB,aAAc,eACnGC,EAAgB7I,OAAOC,SAAShH,OAChCoD,EAAiBC,aAAaC,QAAQ,YACxCuM,EAAW,GAEflG,qBAAU,WAAM,4CACZ,gCAAArF,EAAA,6DACQoR,EAAY,GACZlQ,OAAOC,QAAQJ,GAAW,IAAyC,mBAAnCG,OAAOC,QAAQJ,GAAW,GAAG,IAA+D,KAApCG,OAAOC,QAAQJ,GAAW,GAAG,KACrHqQ,EAAYpF,SAAS9K,OAAOC,QAAQJ,GAAW,GAAG,KAH1D,SAK6BvF,EAAYuB,WAAW,CAACC,GAAIoU,EAAWtV,SAAUgD,IAL9E,cAKU/B,EALV,OAMIiO,EAAQjO,GAAc,IAN1B,SAOkCE,EAAcC,mBAAmB,CAACG,WAAY,gBAPhF,OAOUgU,EAPV,OAQIF,EAAmBE,GAAmB,IACtCjG,GAAa,GATjB,6CADY,sBAcZ,GAda,WAAD,wBAYZe,GAEsB,GAAlB/J,EAAQrG,QAAuC,GAAxBwG,EAAcxG,OAAa,CAClD,IAAIgH,EAAe,CAAC,IAChBC,EAAqB,CAAC,IAGtBsI,IACAvI,EAAaF,KAAKyI,GAClBjJ,EAAWU,IAqBvB,SAAwBuI,EAAeD,GAGnC,IAFA,IAAMe,EAAad,EAAcjD,UAAU,GAAGnM,MAAM,SAC9CmQ,EAAcD,EAAWrQ,OACtBqK,EAAI,EAAGA,EAAIiG,EAAajG,IAAK,CAClC,IAAMkG,EAAgBF,EAAWhG,GAAGlK,MAAM,KACtCmP,EAAY/C,SAASgE,EAAc,MACnCf,EAASe,EAAc,IAAMA,EAAc,KAvB/CC,CAAejB,EAAeD,GAC9BrI,EAAmBH,KAAK0I,GACxB/I,EAAiBQ,MAGtB,CAACgI,EAASI,IAEb,IAAMV,EAAU,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAEf,OADkBC,yBAAc,CAAEC,SAAU,MACzBF,EAAW,MAG5BiB,EAAS,SAAC,GAAkB,IAAhBjB,EAAe,EAAfA,SAEd,OADiBC,yBAAc,CAAEiB,SAAU,MACzBlB,EAAW,MAcjC,IAAIzL,EAAO,QACUqC,IAAjB3E,EAAKgC,cAAiD2C,IAAxB3E,EAAKgC,QAAQO,QAAwBvC,EAAKgC,QAAQO,OAAOC,OAAOrD,SAC9FmD,EAAOtC,EAAKgC,QAAQO,OAAOC,QAG/B,IAAM6O,EAAMqD,mBACNC,EAAeD,mBAYfrS,EAAe,CAACrC,EAAKgC,SAE3B,OAAOuM,EACC,kBAAC,GAAD,MAEJ,kBAACyF,GAAD,CAAiB3C,IAAKsD,GAClB,kBAAC7G,EAAD,KACI,kBAACnE,GAAD,KACI,yBAAKjH,UAAU,eACf,kBAAC,GAAD,CAAY1C,KAAMA,MAG1B,kBAAC,GAAD,MACA,yBAAK0C,UAAU,gBACVJ,EAAKnD,OACF,yBAAKuD,UAAU,mBACX,yBAAKE,IAAKN,EAAMO,IAAK7C,EAAKgC,QAAQc,QAEtC,GACJ,kBAACoR,GAAD,CAAoBxR,UAAU,QAC1B,4BAAK1C,EAAKgC,QAAQc,MAClB,2BAAI9C,EAAKgC,QAAQe,aACjB,4CACA,2BACM/C,EAAKgC,QAAQ4S,YAAYzV,QAAUa,EAAKgC,QAAQ4S,YAAYzV,SAAWmV,EAAgBnV,OAAU,WAAaa,EAAKgC,QAAQ4S,YAAY5R,KAAI,SAAA6R,GAAC,OAAIA,EAAE/R,QAAMgS,QAAO,SAACC,EAAMC,GAAP,MAAgB,CAACD,EAAM,KAAMC,QAGtM,kBAAC1C,GAAD,KACI,kBAAC6B,GAAD,KACI,yBAAKzR,UAAU,mBACX,kDAEJ,kBAAC,KAAD,CAAWuS,uBAAqB,EAACC,YAAa,CAAC,WAC1ClV,EAAKgC,QAAQmT,WAAWnS,KAAI,SAAC7B,GAC1B,IAAMqD,EAAmBrD,EAAS2B,KAAK2B,WAAW,IAAK,KAAKC,cAC5D,OACI,kBAAC,KAAD,CAAelB,IAAKrC,EAASf,IACzB,kBAAC,KAAD,CAAsBsC,UAAU,iBAAiBmC,qBAAoBL,GACjE,kBAAC,KAAD,KACI,2BAAG,0BAAM9B,UAAU,gBAAhB,mBAA4CvB,EAAS2B,KAArD,OACF3B,EAAS2B,OAGlB,kBAAC,KAAD,KACK3B,EAAS4B,iBAK1B,kBAAC,KAAD,CAAeS,IAAI,SAAS4R,KAAK,SAAS1S,UAAU,mBAIhE,kBAAC4P,GAAD,KACI,0CACA,wBAAI5P,UAAU,eACV,wBAAIA,UAAU,YAAW,uBAAGA,UAAU,cAAce,KAAMzD,EAAKgC,QAAQqT,QAAQC,QAASvR,OAAO,SAAS8O,IAAI,uBAAnF,kBACzB,wBAAInQ,UAAU,cAAa,uBAAGA,UAAU,cAAce,KAAMzD,EAAKgC,QAAQqT,QAAQC,SAAtD,kBAA+EtV,EAAKgC,QAAQqT,QAAQC,UAC/H,4BAAI,kBAAC,KAAD,CAAiBjI,KAAM,CAAC,MAAO,WAAY,uBAAG5J,KAAI,gBAAWzD,EAAKgC,QAAQqT,QAAQE,YAAcvV,EAAKgC,QAAQqT,QAAQE,YACzH,4BAAI,kBAAC,KAAD,CAAiBlI,KAAM,CAAC,MAAO,cAAe,uBAAG5J,KAAI,iBAAYzD,EAAKgC,QAAQqT,QAAQG,QAAUxV,EAAKgC,QAAQqT,QAAQG,UAGjI,kBAAClD,GAAD,KACI,gDACA,wBAAI5P,UAAU,eACV,4BAAI,kBAAC,KAAD,CAAiB2K,KAAM,CAAC,MAAO,8BAA+B,uBAAG5J,KAAMzD,EAAKgC,QAAQyT,SAASH,QAASvR,OAAO,SAAS8O,IAAI,uBAA5D,gBAA+F,0BAAMnQ,UAAU,cAAhB,KAAgC1C,EAAKgC,QAAQyT,SAASH,WACvN,4BAAI,kBAAC,KAAD,CAAiBjI,KAAM,CAAC,MAAO,cAAe,uBAAG5J,KAAI,iBAAYzD,EAAKgC,QAAQyT,SAASD,QAAUxV,EAAKgC,QAAQyT,SAASD,UAGnI,kBAAClD,GAAD,KACI,uCACA,wBAAI5P,UAAU,eAENL,EAAaW,KAAI,SAAChB,EAASiB,GAIvB,OAHuBjB,EAAQmB,UAAU5C,MAAK,SAAU6C,EAAGC,GACvD,OAAOC,WAAWF,EAAEG,UAAYD,WAAWD,EAAEE,aAE3BP,KAAI,SAAC8C,EAAU7C,GAAX,OACtB,kBAAC,GAAD,CAASO,IAAKP,EAAO0P,QAAS7M,YAMlD,kBAACkJ,EAAD,KACI,kBAACiF,GAAD,CAAmBvR,UAAU,uBACzB,kBAAC,GAAD,CAAY1C,KAAMA,MAG5B,kBAACkU,GAAD,CAAoBxR,UAAU,YAC5B,4BAAQT,QApGD,WACfoP,EAAIC,QAAQoE,OACZpM,SAASqM,eAAe,6BAA6BC,WAAW,GAAGvN,MAAMwN,QAAU,SAkG9CnT,UAAU,qBACnC,kBAAC,KAAD,CAAiB2K,KAAM,CAAC,MAAO,kBADnC,SAIA,yBAAKjN,GAAG,4BAA4B6B,QAnG5B,WAChBoP,EAAIC,QAAQwE,QACZxM,SAASqM,eAAe,6BAA6BC,WAAW,GAAGvN,MAAMwN,QAAU,SAkGvE,kBAAC,KAAD,CAAaxE,IAAKA,GACd,kBAAC+C,GAAD,KACI,qCACA,kBAAC,GAAD,CAAOpS,QAAShC,OAI5B,kBAAC,KAAD,CACI+V,QAAS,kBAAM,4BAAQrT,UAAU,gBAAe,kBAAC,KAAD,CAAiB2K,KAAM,CAAC,MAAO,WAAhE,UACf2I,QAAS,kBAAMrB,EAAarD,YAGlC,kBAACgB,GAAD,KACE,sCAAYtS,EAAKgC,QAAQc,MACzB,wBAAIJ,UAAU,eACR1C,EAAKgC,QAAQiU,OAAOC,SAAY,4BAAI,kBAAC,KAAD,CAAiB7I,KAAM,CAAC,MAAO,qBAAsB,uBAAG5J,KAAMzD,EAAKgC,QAAQiU,OAAOC,SAAUnS,OAAO,SAAS8O,IAAI,uBAA3D,WAAyF,0BAAMnQ,UAAU,cAAhB,KAAgC1C,EAAKgC,QAAQiU,OAAOC,YAA4B,GAClQlW,EAAKgC,QAAQiU,OAAOE,QAAW,4BAAI,kBAAC,KAAD,CAAiB9I,KAAM,CAAC,MAAO,oBAAqB,uBAAG5J,KAAMzD,EAAKgC,QAAQiU,OAAOE,QAASpS,OAAO,SAAS8O,IAAI,uBAA1D,UAAuF,0BAAMnQ,UAAU,cAAhB,KAAgC1C,EAAKgC,QAAQiU,OAAOE,WAA2B,GAC7PnW,EAAKgC,QAAQiU,OAAOG,UAAa,4BAAI,kBAAC,KAAD,CAAiB/I,KAAM,CAAC,MAAO,sBAAuB,uBAAG5J,KAAMzD,EAAKgC,QAAQiU,OAAOG,UAAWrS,OAAO,SAAS8O,IAAI,uBAA5D,YAA2F,0BAAMnQ,UAAU,cAAhB,KAAgC1C,EAAKgC,QAAQiU,OAAOG,aAA6B,GACvQpW,EAAKgC,QAAQiU,OAAOI,SAAY,4BAAI,kBAAC,KAAD,CAAiBhJ,KAAM,CAAC,MAAO,cAAe,uBAAG5J,KAAMzD,EAAKgC,QAAQiU,OAAOI,SAAUtS,OAAO,SAAS8O,IAAI,uBAA3D,WAAyF,0BAAMnQ,UAAU,cAAhB,KAAgC1C,EAAKgC,QAAQiU,OAAOI,YAA4B,Q,0UCtbjR,IAAMjG,GAAc9O,IAAOsG,MAAV,MAYX0I,GAAahP,IAAOiP,EAAV,MAsED+F,GApEG,SAAC,GAgBZ,IAfLlW,EAeI,EAfJA,GACAuH,EAcI,EAdJA,KACA7E,EAaI,EAbJA,KACA8E,EAYI,EAZJA,MACA6I,EAWI,EAXJA,YACAC,EAUI,EAVJA,SACAC,EASI,EATJA,aACA4F,EAQI,EARJA,aACA3F,EAOI,EAPJA,SACAC,EAMI,EANJA,UACAC,EAKI,EALJA,UACA5Q,EAII,EAJJA,MACA6Q,EAGI,EAHJA,SACAC,EAEI,EAFJA,SACAC,EACI,EADJA,KAEA,OACE,oCACG/Q,GAAwB,aAAfA,EAAMyH,MACd,kBAAC,GAAD,CAAWzH,MAAK,UAAK0H,EAAL,mBAEjB1H,GAAwB,cAAfA,EAAMyH,MACd,kBAAC,GAAD,CAAWzH,MAAM,yBAElBA,GAAwB,cAAfA,EAAMyH,MACd,kBAAC,GAAD,CACEzH,MAAK,UAAK0H,EAAL,6BAA+BkJ,EAA/B,YACM,WAATnJ,EAAoB,SAAW,aAD5B,OAKRzH,GAASA,EAAMgR,SAAW,kBAAC,GAAD,CAAWhR,MAAOA,EAAMgR,UACnD,kBAAC,GAAD,CAAaC,QAASrO,GAAO8E,GAC5BqJ,EAAO,kBAAC,GAAD,KAAaA,GAAqB,GAC1C,kBAACf,GAAD,CACE9P,GAAIA,EACJgR,aAAYtO,EACZA,KAAMA,EACN2N,YAAaA,EACb9I,KAAMA,EACN0J,IAAK,SAAC1O,GACJ+N,EAAS/N,EAAG,CAAEiO,WAAUE,YAAWD,YAAWG,aAC1CD,IAAUA,EAASO,QAAU3O,IAEnCgO,aAAcA,EACd4F,aAAcA,EACdhF,eAAcrR,EAAQ,OAAS,Y,wqBClDhC,IAAMsW,GAAuBlV,IAAOC,IAAV,KAIfL,EASDD,EAGWA,EAKXF,GAIXyG,GAAelG,YAAOoG,GAAPpG,CAAH,KAGaL,GAsGhBwV,GAnGK,WAAO,IAAD,EACArS,qBAAWU,IAArBQ,GADU,EACfC,IADe,EACVD,QADU,EAEQlB,qBAAWW,IAAlCS,EAFe,EAEfA,QAFe,KAENC,WACkBrB,qBAAWJ,KAA3B0B,GAHI,EAGfvB,UAHe,EAGJuB,cAHI,EAIoBtB,qBAAWY,IAA9CW,EAJe,EAIfA,cAJe,KAIAC,iBACYwC,oBAAS,IALrB,mBAKfmG,EALe,KAKJC,EALI,OAO4BkD,eAA1ChB,EAPc,EAOdA,SAAUiB,EAPI,EAOJA,aAAcC,EAPV,EAOUA,OAC1B1P,GARgB,EAOkB2P,MACjB1P,aAAaC,QAAQ,aARtB,4CActB,yCAAAgB,EAAA,yDAA4BlE,EAA5B,EAA4BA,UACpBqP,EADR,iDAEUxI,EAAmBP,EAAQA,EAAQrG,OAAS,GAC5C6G,EAAyBL,EAAcA,EAAcxG,OAAS,GAE9CgI,6BAAkBjI,EAAU,QAE9CiD,aAAaiF,QAAQ,WAAYlI,GAC7B+G,EAAO,IAAM,IAAIU,gBAAgBX,GAAwBY,WAAWM,QAAQ,OAAO,KACnFvH,EAASqG,EAEU,IAAnBR,EAAQrG,QAAyC,IAAzBwG,EAAcxG,SACtC8G,EAAOF,EACPpG,EAASqG,OAGsCrB,IAA3CqB,EAAuBgG,kBAIjB0K,EAAwB/Q,EAAcW,MAAK,SAAAoQ,GAAqB,OAAIA,EAAsBjQ,kBAC5FkQ,EAA0BhR,EAAcW,MAAK,SAAAqQ,GAAuB,OAAIA,EAAwBzX,YACpG8G,EAAsB,SAAe9G,OACPyF,IAA1B+R,GAGAA,EAAsBxX,SAAWA,EAEjC+G,GADAA,EAAO,IAAM,IAAIU,gBAAgB+P,GAAuB9P,YAC5CnC,WAAW,aAAc,IACrC9E,EAAS+W,QAC0B/R,IAA5BgS,IAGPA,EAAwBzX,SAAWA,EAEnC+G,GADAA,EAAO,IAAM,IAAIU,gBAAgBgQ,GAAyB/P,YAC9CnC,WAAW,aAAc,IACrC9E,EAASgX,KAKrB1R,GAAQgB,KAAKA,GACbX,EAAOW,GACPP,EAAa/F,IA3CrB,4CAdsB,sBA6DtB,OAnDA8I,qBAAU,WACN+F,GAAa,KACd,CAACA,IAkDAD,EACI,kBAAC,GAAD,MAEA,oCACA,yBAAK7L,UAAU,IACX,kBAAC,GAAD,MACA,kBAAC8T,GAAD,KACI,mDACA,+DACA,0BAAMtE,SAAUP,GAvEV,8CAuEoCQ,cAAY,QAClD,kBAAC,GAAD,CACIvK,MAAM,mBACN6I,YAAY,4CACZ3N,KAAK,WACL4N,SAAUA,EACVC,aAAczO,EACdqU,aAAa,MACbvF,SAAU,CACN4F,QAAS,SAAC1Q,GACN,OACIiB,6BAAkBjB,EAAO,OACzB,kCAIZhG,MAAO0R,EAAO1S,WAElB,kBAAC,GAAD,CAAcyI,KAAK,SAASC,MAAM,iBAAiBC,SAAU0G,MAGrE,kBAAC,GAAD,S,sUCxIT,IAAMsI,GAAkBvV,IAAOC,IAAV,KAEtBC,YAAW,KAAXA,CAFsB,KAKNN,I,oRCNf,IAAM4V,GAAoBxV,IAAOC,IAAV,KAExBC,YAAW,KAAXA,CAFwB,O,+qBCE9B,IAAMuV,GAAYzV,IAAOC,IAAV,MAeT6O,GAAc9O,IAAOsG,MAAV,MAQXoP,GAAiB1V,IAAO6O,MAAV,MA2CL8G,GAnCM,SAAC,GASf,IARLnU,EAQI,EARJA,KACA8E,EAOI,EAPJA,MACA8I,EAMI,EANJA,SACAE,EAKI,EALJA,SACA1Q,EAII,EAJJA,MACAgG,EAGI,EAHJA,MAGI,IAFJjE,eAEI,MAFM,aAEN,EADJiN,EACI,EADJA,WAEA,OACE,oCACE,kBAAC6H,GAAD,KACE,kBAACC,GAAD,CACElU,KAAMA,EACN6E,KAAK,WACL0J,IAAKX,EAAS,CAAEE,aAChBW,eAAcrR,EAAQ,OAAS,QAC/BgG,MAAOA,EACPjE,QAASA,EACTiV,mBAAkBhI,IAEpB,kBAAC,GAAD,CAAaiC,QAASrO,GAAO8E,IAE9B1H,GAAwB,aAAfA,EAAMyH,MACd,kBAAC,GAAD,CAAWzH,MAAM,uB,uJCvCzB,IAAMsH,GAAelG,YAAOoG,GAAPpG,CAAH,KAGaL,GA4HhBkW,GAzHU,WAAO,IAaxBC,EAbuB,EACHhP,mBAAS,IADN,mBACpBpI,EADoB,KACdoO,EADc,OAELhK,qBAAWU,IAArBQ,GAFe,EAEpBC,IAFoB,EAEfD,QAFe,EAGGlB,qBAAWW,IAAlCS,EAHoB,EAGpBA,QAHoB,KAGXC,WACkBrB,qBAAWJ,KAA3B0B,GAJS,EAIpBvB,UAJoB,EAITuB,cAJS,EAKetB,qBAAWY,IAA9CW,EALoB,EAKpBA,cALoB,KAKLC,iBACYwC,oBAAS,IANhB,mBAMpBmG,EANoB,KAMTC,EANS,KAWrBxI,GAHiB7D,aAAaC,QAAQ,YACtByD,OAAOC,SAAShH,OACb0G,EAAQA,EAAQrG,OAAS,GACnBwG,EAAcA,EAAcxG,OAAS,IAMhEkY,EAAc,GAClB,QAA+B1S,IAA3BqB,EACA,cAA2B1B,OAAOC,QAAQyB,GAA1C,eAAmE,CAAC,IAAD,sBAAvDxC,EAAuD,KAAlD0C,EAAkD,KACpD,cAAP1C,GAAiC,KAAV0C,IACnB9G,MAAMC,QAAQ6G,IAAUA,EAAM/G,QAAU,IACxCkY,EAAcnR,EAAM4O,QAAO,SAAC1R,EAAEC,GAAH,OAASD,EAAEC,IAAG,EAAKD,IAAG,KAGhC,kBAAV8C,GAAsBA,EAAMoR,QAAQ,MAAQ,IAEnDD,GADAnR,EAAQA,EAAM5G,MAAM,MACAwV,QAAO,SAAC1R,EAAEC,GAAH,OAASD,EAAEC,IAAG,EAAKD,IAAG,KAEhC,kBAAV8C,IAA8C,IAAxBA,EAAMoR,QAAQ,OAC3CD,EAAYnR,IAAS,IAKrCkR,EAAgBC,EAnCW,MAqCQ3F,aAAQ,CACvC0F,cAAeA,IADX1G,EArCmB,EAqCnBA,SAAUiB,EArCS,EAqCTA,aArCS,4CA2D3B,oCAAAvO,EAAA,0DACQmL,EADR,iDAMI,IAHIgJ,EAAkB,GAClBC,EAAalO,SAASC,iBAAiB,gCAElCC,EAAI,EAAGA,EAAIgO,EAAWrY,OAAQqK,IACnC+N,EAAgBtR,KAAKuR,EAAWhO,GAAGtD,OAGR,IAA3BqR,EAAgBpY,eACT6G,EAAsB,WAE7BC,GADIA,EAAO,IAAM,IAAIU,gBAAgBX,GAAwBY,WAAWM,QAAQ,OAAO,KAAKA,QAAQ,OAAO,MAC/FzC,WAAW,aAAc,IACrCQ,GAAQgB,KAAKA,GACbX,EAAOW,GACPP,EAAaM,KAEbA,EAAsB,WAAiBuR,EAEvCtR,GADIA,EAAO,IAAM,IAAIU,gBAAgBX,GAAwBY,WAAWM,QAAQ,OAAO,KAAKA,QAAQ,OAAO,MAC/FzC,WAAW,aAAc,IACrCQ,GAAQgB,KAAKA,GACbX,EAAOW,GACPP,EAAaM,IAvBrB,4CA3D2B,sBAsF3B,OA7CAyC,qBAAU,WAAM,4CACZ,4BAAArF,EAAA,sEACgC/C,EAAcC,mBAAmB,CAACG,WAAY,aAD9E,OACU6O,EADV,OAEIlB,EAAQkB,GAAiB,IACzBd,GAAa,GAHjB,4CADY,sBAQU,GAAlBhJ,EAAQrG,QAAuC,GAAxBwG,EAAcxG,QACrC8F,GAAQgB,KAAK,KACbX,EAAO,IACPI,EAAa,KAXJ,WAAD,wBAaR6J,KAGL,CAACnB,EAASI,IA8BTD,EACI,kBAAC,GAAD,MAEA,oCACA,kBAACsI,GAAD,KACI,kBAAC,GAAD,MACA,kBAAC,GAAD,MACA,iDACA,0BAAM3E,SAAUP,GA/FD,6CA+F2BQ,cAAY,QAClD,kBAAC2E,GAAD,KACK9W,EAAKgD,KAAI,SAAC7B,EAAU8B,GACjB,IAAMwU,EAAmBtW,EAASf,GAAGwG,WACrC,OACI,kBAAC,GAAD,CACIpD,IAAKP,EACLiM,WAAY/N,EAASf,GACrBuH,KAAK,WACLC,MAAOzG,EAAS2B,KAChBA,KAAM2U,EACN/G,SAAUA,EACVxK,MAAO/E,EAASf,QAI5B,kBAAC,GAAD,CAAcuH,KAAK,SAASC,MAAM,oBAAoBC,SAAU0G,OAI5E,kBAAC,GAAD,Q,uJCzHZ,IAAM/G,GAAelG,YAAOoG,GAAPpG,CAAH,KAGaL,GA4HhByW,GAzHY,WAAO,IAa1BN,EAbyB,EACLhP,mBAAS,IADJ,mBACtBpI,EADsB,KAChBoO,EADgB,OAEPhK,qBAAWU,IAArBQ,GAFiB,EAEtBC,IAFsB,EAEjBD,QAFiB,EAGClB,qBAAWW,IAAlCS,EAHsB,EAGtBA,QAHsB,KAGbC,WACkBrB,qBAAWJ,KAA3B0B,GAJW,EAItBvB,UAJsB,EAIXuB,cAJW,EAKatB,qBAAWY,IAA9CW,EALsB,EAKtBA,cALsB,KAKPC,iBACYwC,oBAAS,IANd,mBAMtBmG,EANsB,KAMXC,EANW,KAWvBxI,GAHiB7D,aAAaC,QAAQ,YACtByD,OAAOC,SAAShH,OACb0G,EAAQA,EAAQrG,OAAS,GACnBwG,EAAcA,EAAcxG,OAAS,IAMhEkY,EAAc,GAClB,QAA+B1S,IAA3BqB,EACA,cAA2B1B,OAAOC,QAAQyB,GAA1C,eAAmE,CAAC,IAAD,sBAAvDxC,EAAuD,KAAlD0C,EAAkD,KACpD,eAAP1C,GAAkC,KAAV0C,IACpB9G,MAAMC,QAAQ6G,IAAUA,EAAM/G,QAAU,IACxCkY,EAAcnR,EAAM4O,QAAO,SAAC1R,EAAEC,GAAH,OAASD,EAAEC,IAAG,EAAKD,IAAG,KAGhC,kBAAV8C,GAAsBA,EAAMoR,QAAQ,MAAQ,IAEnDD,GADAnR,EAAQA,EAAM5G,MAAM,MACAwV,QAAO,SAAC1R,EAAEC,GAAH,OAASD,EAAEC,IAAG,EAAKD,IAAG,KAEhC,kBAAV8C,IAA8C,IAAxBA,EAAMoR,QAAQ,OAC3CD,EAAYnR,IAAS,IAKrCkR,EAAgBC,EAnCa,MAqCM3F,aAAQ,CACvC0F,cAAeA,IADX1G,EArCqB,EAqCrBA,SAAUiB,EArCW,EAqCXA,aArCW,4CA2D7B,oCAAAvO,EAAA,0DACQmL,EADR,iDAMI,IAHIoJ,EAAoB,GACpBH,EAAalO,SAASC,iBAAiB,gCAElCC,EAAI,EAAGA,EAAIgO,EAAWrY,OAAQqK,IACnCmO,EAAkB1R,KAAKuR,EAAWhO,GAAGtD,OAGR,IAA7ByR,EAAkBxY,eACX6G,EAAsB,YAE7BC,GADIA,EAAO,IAAM,IAAIU,gBAAgBX,GAAwBY,WAAWM,QAAQ,OAAO,KAAKA,QAAQ,OAAO,MAC/FzC,WAAW,aAAc,IACrCQ,GAAQgB,KAAKA,GACbX,EAAOW,GACPP,EAAaM,KAEbA,EAAsB,YAAkB2R,EAExC1R,GADIA,EAAO,IAAM,IAAIU,gBAAgBX,GAAwBY,WAAWM,QAAQ,OAAO,KAAKA,QAAQ,OAAO,MAC/FzC,WAAW,aAAc,IACrCQ,GAAQgB,KAAKA,GACbX,EAAOW,GACPP,EAAaM,IAvBrB,4CA3D6B,sBAsF7B,OA7CAyC,qBAAU,WAAM,4CACZ,4BAAArF,EAAA,sEACkC/C,EAAcC,mBAAmB,CAACG,WAAY,gBADhF,OACUgU,EADV,OAEIrG,EAAQqG,GAAmB,IAC3BjG,GAAa,GAHjB,4CADY,sBAQU,GAAlBhJ,EAAQrG,QAAuC,GAAxBwG,EAAcxG,QACrC8F,GAAQgB,KAAK,KACbX,EAAO,IACPI,EAAa,KAXJ,WAAD,wBAaR6J,KAGL,CAACnB,EAASI,IA8BTD,EACI,kBAAC,GAAD,MAEA,oCACA,kBAACsI,GAAD,KACI,kBAAC,GAAD,MACA,kBAAC,GAAD,MACA,mDACA,0BAAM3E,SAAUP,GA/FC,6CA+FyBQ,cAAY,QAClD,kBAAC2E,GAAD,KACK9W,EAAKgD,KAAI,SAAC4R,EAAa3R,GACpB,IAAM2U,EAAsBhD,EAAYxU,GAAGwG,WAC3C,OACI,kBAAC,GAAD,CACIpD,IAAKP,EACLiM,WAAY0F,EAAYxU,GACxBuH,KAAK,WACLC,MAAOgN,EAAY9R,KACnBA,KAAM8U,EACNlH,SAAUA,EACVxK,MAAO0O,EAAYxU,QAI/B,kBAAC,GAAD,CAAcuH,KAAK,SAASC,MAAM,iBAAiBC,SAAU0G,OAIzE,kBAAC,GAAD,QCrHGsJ,GAnBc,WAAO,IAAD,EACTzT,qBAAWU,IAArBQ,GADmB,EACxBC,IADwB,EACnBD,QADmB,EAEGlB,qBAAWJ,IAA3B0B,GAFa,EAExBvB,UAFwB,EAEbuB,cAFa,EAGWtB,qBAAWY,IAA9CW,EAHwB,EAGxBA,cACDK,GAJyB,EAGTJ,iBACSD,EAAcA,EAAcxG,OAAS,IAC9D6S,EAAchM,EAAsB,eAE1CA,EAAsB,eAAqBgM,EAC3C,IAAI/L,EAAO,IAAM,IAAIU,gBAAgBX,GAAwBY,WAAWM,QAAQ,SAAS,IAMzF,OALAjB,EAAOA,EAAKxB,WAAW,aAAc,IACrCQ,GAAQgB,KAAKA,GACbX,EAAOW,GACPP,EAAaM,GAGT,kBAAC,GAAD,O,wPCdD,IAAM8R,GAA0BxW,IAAOC,IAAV,KAC9BC,YAAW,KAAXA,CAD8B,KAKhBN,IAkDL6W,GA9CQ,SAAC,GAAiC,EAA/B5C,WAAgC,IAAflT,EAAc,EAAdA,QAAc,EAC/BmG,mBAAS,IADsB,mBAChDpI,EADgD,KAC1CoO,EAD0C,OAErBhG,oBAAS,GAFY,mBAEhDmG,EAFgD,KAErCC,EAFqC,KAevD,GAXA/F,qBAAU,WAAM,4CACd,4BAAArF,EAAA,sEAC8B/C,EAAcC,mBAAmB,CAACG,WAAY,aAD5E,OACQ6O,EADR,OAEElB,EAAQkB,GAAiB,IACzBd,GAAa,GAHf,4CADc,uBAAC,WAAD,wBAMde,KAEC,CAACnB,EAASI,IAGTD,EACF,OAAO,yCAGT,IAAMqB,EAAS,SAAAjN,GACbV,EAAQU,IAGV,OACE,kBAACmV,GAAD,CAAyB1X,GAAG,8BACxBJ,EAAKb,OAGL,kBAACkC,EAAD,KACE,kDACCrB,EAAKgD,KAAI,SAAA7B,GACR,OACE,kBAAC,GAAD,CACEqC,IAAKrC,EAASf,GACde,SAAUA,EACVc,QAAS2N,QATjB,+C,iaCxBR,IAAMoI,GAAa1W,IAAOC,IAAV,KAEEX,EAEZY,YAAW,KAAXA,CAJU,MAQCN,GAuKF+W,GA/JF,WAAO,IAAD,EACO7T,qBAAWU,IAArBQ,GADG,EACRC,IADQ,EACHD,QADG,EAEelB,qBAAWW,IAAzBU,GAFD,EAERD,QAFQ,EAECC,YAFD,EAGmBrB,qBAAWJ,IAA3B0B,GAHH,EAGRvB,UAHQ,EAGGuB,cAHH,EAI2BtB,qBAAWY,IAA/BY,GAJP,EAIRD,cAJQ,EAIOC,kBAJP,EAK2BqF,aAAe,CAAE1E,kBAAmB2E,OAL/D,mBAKegN,GALf,KAKN3R,kBALM,QAMmB6B,oBAAS,GAN5B,mBAMRmG,EANQ,KAMGC,EANH,KAOTC,EAAc,CAAC,oBAAqB,WAAY,iBAAkB,kBAAmB,aAAc,eAP1F,EAQmCiD,eAA1ChB,EARO,EAQPA,SAAUiB,EARH,EAQGA,aACZwG,GATS,EAQiBvG,OARjB,EAQyBC,MACpB6C,oBAEdxS,GADgB2D,OAAOC,SAAShH,OACfqD,aAAaC,QAAQ,aACxC+D,EAAe,CAAC,IAChBwI,EAAW,GACXvI,EAAqB,CAAC,IAE1B,SAASuJ,EAAejB,EAAeD,GAGnC,IAFA,IAAMe,EAAad,EAAcjD,UAAU,GAAGnM,MAAM,SAC9CmQ,EAAcD,EAAWrQ,OACtBqK,EAAI,EAAGA,EAAIiG,EAAajG,IAAK,CAClC,IAAMkG,EAAgBF,EAAWhG,GAAGlK,MAAM,KACtCmP,EAAY/C,SAASgE,EAAc,MACnCf,EAASe,EAAc,IAAMA,EAAc,KAKvD,IAWM0I,EAAkB,SAAC1J,GACjBA,IACApJ,EAAOoJ,GAGPvI,EAAaF,KAAKyI,GAClBjJ,EAAWU,GAGXwJ,EAAejB,EAAeD,GAC9BrI,EAAmBH,KAAK0I,GACxB/I,EAAiBQ,KAKzBqC,qBAAU,WACN+F,GAAa,KACd,CAACA,IAxDW,4CAkEf,yDAAApL,EAAA,yDAA4BlE,EAA5B,EAA4BA,SAAUuH,EAAtC,EAAsCA,gBAC9B8H,EADR,iDAOI,GAJM8J,EAAgB/O,SAAS2I,MAAM,qBAAf,SAAgD/L,MAChE8L,EAAc1I,SAAS2I,MAAM,qBAAf,eAAsD/L,MACpEoS,EAAgBnR,6BAAkBjI,EAAU,MAE5B,KAAlBmZ,GAAwC,KAAhBrG,EACpBsG,GACArT,GAAQgB,KAAK,aAAe/G,EAAW,mBAAqBuH,GACtDiI,EAAgB7I,OAAOC,SAAShH,OACtCsZ,EAAgB1J,GAChBhJ,EAAa,CAACxG,SAAUA,EAAUuH,eAAgBA,MAE9C8R,EAAOjP,SAASkP,cAAc,KAC9BC,EAAWnP,SAASoP,eAAe,iCACvCH,EAAKI,YAAYF,GACjBnP,SAASqM,eAAe,4BAA4BgD,YAAYJ,SAEjE,GAAsB,KAAlBF,EACP,GAAIC,EACAnW,aAAaiF,QAAQ,WAAYlI,GACjC+F,GAAQgB,KAAK,aAAe/G,EAAW,mBACjCwP,EAAgB7I,OAAOC,SAAShH,OACtCsZ,EAAgB1J,GAChBhJ,EAAa,CAACxG,SAAUA,EAAUuH,oBAAgB9B,QAC/C,CAOH,KANI4T,EAAOjP,SAASkP,cAAc,MAC7B9V,UAAY,oCACb+V,EAAWnP,SAASoP,eAAe,iCACvCH,EAAKI,YAAYF,GAEbG,EAAQtP,SAASuP,qBAAqB,KAClCrP,EAAEoP,EAAMzZ,OAAO,EAAGqK,GAAG,EAAGA,IAET,uCADf+G,EAAIqI,EAAMpP,IACT9G,WACD6N,EAAEuI,WAAWC,YAAYxI,GAIjCjH,SAASqM,eAAe,4BAA4BgD,YAAYJ,GAChEjP,SAASqM,eAAe,8BAA8BtN,MAAM2Q,IAAM,QAClE1P,SAASqM,eAAe,8BAA8BsD,WAAW5Q,MAAM6Q,OAAS,0BAG7D,KAAhBlH,IACP/M,GAAQgB,KAAK,4BAA8BQ,GACrCiI,EAAgB7I,OAAOC,SAAShH,OACtCsZ,EAAgB1J,GAChBhJ,EAAa,CAACxG,cAAUyF,EAAW8B,eAAgBA,IACnDtE,aAAagX,WAAW,aAlDhC,4CAlEe,sBAwHf,OACI5K,EACI,kBAAC,GAAD,MAEA,oCACA,yBAAK7L,UAAU,QACX,kBAACsV,GAAD,KACI,qDACA,0BAAM5X,GAAG,oBAAoB8R,SAAUP,GAhIxC,8CAgIkEQ,cAAY,QACzE,yBAAK/R,GAAG,4BACJ,kBAAC,GAAD,CACIA,GAAG,gBACHwH,MAAM,mBACN6I,YAAY,4CACZ3N,KAAK,WACLiO,SAAUoH,EACVzH,SAAUA,EACVC,aAAczO,EACdqU,aAAa,SAGrB,kBAAC,GAAD,CACInW,GAAG,sBACHwH,MAAM,uBACN6I,YAAY,gCACZ3N,KAAK,iBACL6E,KAAK,OACL+I,SAAUA,MAItB,kBAAC,GAAD,CAAgBzO,QA7FR,SAAAU,GAChBuV,EAAS,CAAE3R,oBAAsB5D,GAAK,UAhCvB,SAACA,GAChB,IAAM+L,EAAgB7I,OAAOC,SAAShH,OAClC4P,IACApJ,EAAOoJ,GACPiB,EAAejB,EAAeD,GAE9B/I,EAAaiJ,IAEjBH,GAAa,GAyBb4K,GACA,IAAM1K,EAAgB7I,OAAOC,SAAShH,OACtCsZ,EAAgB1J,MA0FR,kBAAC,GAAD,SC3KhB7I,OAAOwT,kBAAoB,CAAEC,sBAAsB,GAEnD,IAsFeC,GAtFQ,SAAC7G,GAAW,IAAD,EACRtO,qBAAWU,IAA1BS,EADuB,EACvBA,IAAKD,EADkB,EAClBA,OADkB,EAEAlB,qBAAWW,IAAlCS,EAFuB,EAEvBA,QAASC,EAFc,EAEdA,WAFc,EAGIrB,qBAAWJ,IAAtCG,EAHuB,EAGvBA,UAAWuB,EAHY,EAGZA,aAHY,EAIYtB,qBAAWY,IAA9CW,EAJuB,EAIvBA,cAAeC,EAJQ,EAIRA,iBAJQ,EAKIwC,oBAAS,GALb,mBAKvBmG,EALuB,KAKZC,EALY,OAMNpG,mBAAS,MANH,mBAMvBoR,EANuB,KAMjBxO,EANiB,OAOEC,aAAe,CAAEe,gBAAiBd,OAPpC,mBAOrBlJ,EAPqB,KAOrBA,QACHmJ,GARwB,KAQV,CAAC,oBAAqB,WAAY,iBAAkB,aAAc,gBACrE,UAAOA,EAAP,CAAoB,oBAErC1C,qBAAU,WAAM,4CACZ,oCAAArF,EAAA,sDACI,UAA2BkB,OAAOC,QAAQJ,GAA1C,eAAuD,EAAD,oBAA1CX,EAA0C,KAArC0C,EAAqC,KACvC,qBAAP1C,GAAwC,KAAV0C,EAC9B8E,EAAQ,oBACM,mBAAPxH,GAAsC,KAAV0C,EACnC8E,EAAQ,iBACM,YAAPxH,GAA+B,KAAV0C,GAAuB,kBAAP1C,GAAqC,KAAV0C,EACvE8E,EAAQ,gBACM,0BAAPxH,GAA4C,QAAT0C,EAC1C8E,EAAQ,wBACM,gBAAPxH,GAAkC,QAAT0C,EAChC8E,EAAQ,eACM,qBAAPxH,GAAuC,QAAT0C,EACrC8E,EAAQ,oBACM,uBAAPxH,GAAyC,QAAT0C,GACvC8E,EAAQ,sBAfpB,4CADY,uBAAC,WAAD,wBAoBZyO,GACAjL,GAAa,MAGjB,IAAMjD,EAAmB,SAAA5I,GAMrB,IALA,IAAMN,EAAe,GACfmJ,EAAWjG,EAAIkG,UAAU,GAAGnM,MAAM,SACpC6G,EAAeX,EACfY,EAAqBT,EAEzB,MAA2BrB,OAAOC,QAAQJ,GAA1C,eAAsD,CAAC,IAAD,sBAA1CX,EAA0C,KAArC0C,EAAqC,KAClD,GAAIiF,EAAYO,SAASlI,GACrB,GAAI0C,EAAO,CACP,IAAMyF,EAAkBnI,EAAM,IAAM0C,EACpC7D,EAAa4D,KAAK0F,OACf,CACH,IAAMA,EAAkBnI,EACxBnB,EAAa4D,KAAK0F,IAK9B,IAAIC,EAAgBJ,EAAS1C,QAAO,SAAA+C,GAAG,OAAKxJ,EAAaqJ,SAASG,MAAMtM,KAAK,KACvD,KAAlBqM,IAAsBA,EAAgB,IAAMA,GAChD,IAAME,EAAa,oBAAsBnJ,EACnCoJ,EAAgB,CAACC,gBAAiBrJ,EAAEiE,YAC1C3B,GAAQgB,KAAK6F,GAEbxG,EAAOwG,GACPd,EAAQ,iBACRtF,EAAaqG,GAEb5F,EAAaF,KAAK6F,GAClBrG,EAAWU,GAGXC,EAAmBH,KAAK8F,GACxBnG,EAAiBQ,IAGrB,OACImI,EAAc,kBAAC,GAAD,MAEA,oBAARiL,EAA+B,kBAAC,GAAD,CAAkBvX,QAAUsJ,IACnD,iBAARiO,EAA4B,kBAAC,GAAD,CAAexX,QAASA,IAC5C,wBAARwX,EAAkC,kBAAC,GAAD,MAC1B,gBAARA,EAA0B,kBAAC,GAAD,CAAcvX,QAAUsJ,IAC1C,eAARiO,EAAyB,kBAAC,GAAD,MACjB,oBAARA,EAA8B,kBAAC,GAAD,MACtB,sBAARA,EAAgC,kBAAC,GAAD,MAClC,kBAAC,GAAD,O,+nyCCtFL,IAAME,GAAc7P,YAAH,KACtB8P,eAWevY,EA4BPwY,KACAC,KACAC,KAQAC,KACAC,KACAC,KAcCpZ,EAGE4G,aAAO,GAAK5G,GAkBHI,EAoClBO,YAAW,KAAXA,CA3HoB,MA8HpBA,YAAW,KAAXA,CA9HoB,MAqITN,EAQFA,EACgBH,EAsBdG,EAOFC,EAGaA,EAQbA,EAGaA,EAQbA,EAGaA,EAQbA,EAGaA,EAQbA,EAGaA,EAQbA,EAGaA,EAQbA,EAGaA,EAQbA,EAGaA,EAQbA,EAGaA,EAQbA,EAGaA,EAQbA,EAGaA,EAQbA,EAGaA,EAoqBXJ,EAOAG,EASFA,EAaPM,YAAW,KAAXA,CAx+BkB,O,yaCTjB,IAAM0Y,GAAmB5Y,IAAOC,IAAV,KACXL,EAGZM,YAAW,KAAXA,CAJuB,O,OCmFd2Y,OAzEf,WAAgB,IAAD,EACS/R,mBAAS,IADlB,mBACN7C,EADM,KACDD,EADC,KAEP8U,EAAWC,mBAAQ,iBAAO,CAAE9U,MAAKD,YAAW,CAACC,EAAKD,IAF3C,EAGiB8C,mBAAS,IAH1B,mBAGN5C,EAHM,KAGGC,EAHH,KAIP6U,EAAeD,mBAAQ,iBAAO,CAAE7U,UAASC,gBAAe,CAACD,EAASC,IAJ3D,EAKqB2C,mBAAS,IAL9B,mBAKNjE,EALM,KAKKuB,EALL,KAMP6U,EAAgBF,mBAAQ,iBAAO,CAAElW,YAAWuB,kBAAiB,CAACvB,EAAWuB,IANlE,EAO6B0C,mBAAS,IAPtC,mBAONzC,EAPM,KAOSC,EAPT,KAQP4U,EAAqBH,mBAAQ,iBAAO,CAAE1U,gBAAeC,sBAAqB,CAACD,EAAeC,IARnF,EASqBwC,mBAAS,SAT9B,mBASNF,EATM,KASKC,EATL,KAUPsS,EAAiBJ,mBAAQ,iBAAO,CAAEnS,YAAWC,kBAAiB,CAACD,EAAWC,IAVnE,EAWqBC,oBAAS,GAX9B,mBAWNmG,EAXM,KAWKC,EAXL,KAYPC,EAAc,CAAC,oBAAqB,WAAY,iBAAkB,kBAAmB,aAAc,cAAe,eAAgB,oBAAqB,sBAAuB,cAkCpL,OAtBAhG,qBAAU,WAAM,4CACd,sCAAArF,EAAA,sDAGE,GAFIuL,EAAW,GACTD,EAAgB7I,OAAOC,SAAShH,OACnB,CAKjB,IAJAwG,EAAOoJ,GAEDc,EAAad,EAAcjD,UAAU,GAAGnM,MAAM,SAC9CmQ,EAAcD,EAAWrQ,OACtBqK,EAAI,EAAGA,EAAIiG,EAAajG,IACzBkG,EAAgBF,EAAWhG,GAAGlK,MAAM,KACtCmP,EAAY/C,SAASgE,EAAc,MACrCf,EAASe,EAAc,IAAMA,EAAc,IAG/ChK,EAAaiJ,GAEfH,GAAa,GAhBf,4CADc,uBAAC,WAAD,wBAmBd4K,KACC,CAAC9T,EAAQG,EAAYC,EAAc8I,IAGpCD,EAAY,kBAAC,GAAD,MAEV,yBAAK7L,UAAU,OACb,kBAAC,IAAD,CAAegY,MApCP,CACZC,YAAa,CACXC,GAAI,EACJC,GAAI,IACJC,GAAI,IACJC,GAAI,IACJC,GAAI,QA+BA,kBAAC,GAAiBC,SAAlB,CAA2B/U,MAAOqU,GAChC,kBAAC,GAAWU,SAAZ,CAAqB/U,MAAOkU,GAC1B,kBAAC,GAAea,SAAhB,CAAyB/U,MAAOoU,GAC9B,kBAAC,GAAqBW,SAAtB,CAA+B/U,MAAOsU,GACpC,kBAAC,GAAiBS,SAAlB,CAA2B/U,MAAOuU,GAChC,kBAACP,GAAD,KACqD,IAAhD5V,OAAOuL,KAAK0K,EAAcpW,WAAWhF,OAAgB,kBAAC,GAAD,MAAqB,kBAAC,GAAD,OAE/E,kBAACua,GAAD,cC7DAwB,QACW,cAA7BrV,OAAOC,SAASqV,UAEe,UAA7BtV,OAAOC,SAASqV,UAEhBtV,OAAOC,SAASqV,SAASC,MACvB,2DCXN,IAAMrX,GAASuF,SAASqM,eAAe,YACnC5R,IACFsX,IAASC,OACP,kBAAC,KAAD,CAAoBrW,QAASA,IAC3B,kBAAC,GAAD,OAEFlB,IDsHE,kBAAmBwX,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAA3b,GACLD,QAAQC,MAAMA,EAAMgR,c","file":"static/js/main.5b274d57.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/arrow-right.7c57f75a.svg\";","module.exports = __webpack_public_path__ + \"static/media/open-sans-v17-latin-700.e5111cab.ttf\";","module.exports = __webpack_public_path__ + \"static/media/open-sans-v17-latin-700.1f85e92d.woff\";","module.exports = __webpack_public_path__ + \"static/media/open-sans-v17-latin-700.0edb7628.woff2\";","module.exports = __webpack_public_path__ + \"static/media/open-sans-v17-latin-regular.049a929c.ttf\";","module.exports = __webpack_public_path__ + \"static/media/open-sans-v17-latin-regular.de0869e3.woff\";","module.exports = __webpack_public_path__ + \"static/media/open-sans-v17-latin-regular.33543c5c.woff2\";","const BASE_API_URL =\n    \"https://xx0z3bot52.execute-api.eu-west-2.amazonaws.com/staging/api/v1\";\nexport default BASE_API_URL;","import axios from \"axios\";\nimport BASE_API_URL from \"../BaseApiUrl/BaseApiUrl\";\nimport qs from \"qs\";\n\nconst GetServices = {\n  async retrieveServices({\n    search = \"\",\n    offset = 0,\n    taxonomyids = \"\",\n    limit = 0,\n    postcode = \"\",\n  }) {\n    // prepare taxonomies into an array\n    if (taxonomyids.length === 1) {\n      // if only one vocabulary is selected\n      if (Array.isArray(taxonomyids[0])) {\n        taxonomyids = taxonomyids[0];\n      } else {\n        taxonomyids = taxonomyids[0].split(\"+\");\n      }\n    } else if (taxonomyids.length > 1) {\n      // check if elements are array and convert to string by +\n      if (Array.isArray(taxonomyids[0])) {\n        taxonomyids[0] = taxonomyids[0].join(\"+\");\n      }\n      if (Array.isArray(taxonomyids[1])) {\n        taxonomyids[1] = taxonomyids[1].join(\"+\");\n      }\n      // append + before concatenating both categories and demographics array\n      taxonomyids[0] = taxonomyids[0]+\"+\";\n      taxonomyids = taxonomyids[0].concat(taxonomyids[1]);\n      taxonomyids = taxonomyids.split(\"+\");\n    }\n    \n    try {\n      const response = await axios.get(`${BASE_API_URL}/services`, {\n        params: {\n          search,\n          offset,\n          taxonomyids,\n          limit,\n          postcode,\n        },\n        paramsSerializer: params => {\n          return qs.stringify(params);\n        }\n      });\n\n      return response.data;\n    } catch (error) {\n      console.error(error);\n\n      return {\n        \"services\": []\n      };\n    }\n  },\n  async getService({\n    id,\n    postcode = \"\",\n  }) {\n    try {\n      const response = await axios.get(`${BASE_API_URL}/services/${id}`, {\n        params: {\n          postcode,\n        },\n      });\n\n      return response.data;\n    } catch (error) {\n      console.error(error);\n\n      return {\n        \"service\": {\"demographic\": []}\n      };\n    }\n  },\n};\n\nexport default GetServices;\n","import axios from \"axios\";\nimport BASE_API_URL from \"../BaseApiUrl/BaseApiUrl\";\n\nconst GetTaxonomies = {\n  async retrieveTaxonomies({\n    sort = \"weight\",\n    direction = \"asc\",\n    vocabulary = \"\",\n  }) {\n    try {\n      const response = await axios.get(`${BASE_API_URL}/taxonomies`, {\n        params: {\n          sort,\n          direction,\n          vocabulary,\n        },\n      });\n\n      return response.data.taxonomies;\n    } catch (error) {\n      console.error(error);\n\n      return {\n        \"taxonomies\": []\n      };\n    }\n  },\n  async getTaxonomy(id) {\n    try {\n      const response = await axios.get(`${BASE_API_URL}/taxonomies/${id}`, {\n\n      });\n\n      return response.data;\n    } catch (error) {\n      console.error(error);\n\n      return {};\n    }\n  },\n};\n\nexport default GetTaxonomies;\n","export const green = {\n  main: \"#00664F\",\n  dark: \"#005E48\",\n  light: \"#7FB2A7\",\n  bright: \"#A4D65E\",\n  ghost: \"#BFC1C3\",\n};\n\nexport const blue = {\n  link: \"#025EA6\",\n};\n\nexport const pink = { \n  100: \"#EB6FBD\",\n  200: \"#DF1995\",\n  300: \"#AA0061\",\n  400: \"#672146\",\n};\n\nexport const red = {\n  error: \"#BE3A34\",\n};\n\nexport const yellow = {\n  selected: \"#FFC845\",\n};\n\nexport const dark = {\n  black: \"#000000\",\n  offBlack: \"#0B0C0C\",\n  grey: \"#525A5B\",\n  greyLight: \"#6F777B\",\n};\n\nexport const light = {\n  white: \"#ffffff\",\n  grey: \"#F8F8F8\",\n  greyBorder: \"#DEE0E2\",\n};\n\nexport const category = {\n  pink: \"#DF1995\",\n  orange: \"#FF6A13\",\n  greenLight: \"#84BD00\",\n  red: \"#E03C31\",\n  blueDark: \"#025EA6\",\n  green: \"#328472\",\n  blue: \"#0085CA\",\n  brown: \"#81312F\",\n  purple: \"#8031A7\",\n  blueLight: \"#2B8CC4\",\n  greenDark: \"#00664F\",\n}","import { dark, light } from \"./colors\";\nimport { primaryFont } from \"./typography\";\n\nexport const defaultTheme = {\n  textColor: dark[\"black\"],\n  textColorInverted: light[\"white\"],\n  primaryFont: primaryFont,\n  headerBackgroundColor: dark[\"offBlack\"],\n};\n","export const primaryFont = '\"Open Sans\", monospace';\n\nexport const typeScale = {\n  header1: \"1.8rem\",\n  header2: \"1.6rem\",\n  header3: \"1.4rem\",\n  header4: \"1.2rem\",\n  header5: \"1.1rem\",\n  paragraph: \"1rem\",\n  helperText: \"0.8rem\",\n  copyrightText: \"0.7rem\",\n};\n","import styled from \"styled-components\";\nimport breakpoint from 'styled-components-breakpoint';\nimport { light } from \"../../settings\";\n\nexport const CardContainer = styled.div`\n    padding: 20px 15px 0;\n    ${breakpoint('md')`\n        padding: 20px 15px 20px;\n        overflow-y: scroll;\n        height: calc(100vh - 260px);\n        position: relative;\n        z-index: 1;\n        background: ${light[\"white\"]};\n    `}\n`;","// import React from 'react';\nimport styled from \"styled-components\";\nimport { applyStyleModifiers } from 'styled-components-modifiers';\nimport { pink, dark, light } from \"../../settings\";\nimport arrowRight from \"../../assets/arrow-right.svg\";\nimport breakpoint from 'styled-components-breakpoint';\n\nexport const CARD_MODIFIERS = {\n    categoryCard: () => `\n        i {\n            background-color: ${pink[200]};\n            height: 50px;\n            width: 50px;\n            &::before {\n                display: none;\n                font-family: \"Font Awesome 5 Pro\";\n                content: \"\\f086\";\n            }\n            svg {\n                font-size: 30px;\n                color: ${light[\"white\"]};\n            }\n        }\n        .fss--card--container {\n            display: flex;\n            flex-direction: row;\n            &::after {\n                content: url(${arrowRight});\n                align-self: center;\n                margin-left: auto;\n            }\n        }\n        .fss--card--content {\n            margin-right: 10px;\n        }\n    `,\n    serviceCard: () => `\n        h1, h2, h3, h4 {\n            font-size: 24px;\n            font-weight: bold;\n            margin-bottom: 10px;\n        }\n        p {\n            font-size: 16px;\n        }\n        .service--distance {\n            color: ${dark[\"black\"]};\n            padding: 0 10px 15px;\n            -webkit-touch-callout: none;\n            -webkit-user-select: none;\n            -khtml-user-select: none;\n            -moz-user-select: none;\n            -ms-user-select: none;\n            user-select: none;\n        }\n        img {\n            width: 100%;\n            height: auto;\n        }\n    `\n}\n\nexport const Card = styled.div`\n    background: ${light[\"grey\"]};\n    border: 1px solid ${light[\"greyBorder\"]};\n    box-sizing: border-box;\n    box-shadow: 4px 4px 4px rgba(0, 0, 0, 0.05);\n    border-radius: 3px;\n    margin-bottom: 10px;\n    cursor: pointer;\n\n    .fss--card--container {\n        padding: 15px 10px;\n    }\n    h1, h2, h3, h4 {\n        margin-top: 0;\n        font-weight: normal;\n        font-size: 19px;\n        margin-bottom: 5px;\n        font-size: 19px;\n    }\n    p {\n        margin-top: 0;\n        margin-bottom: 0;\n        font-size: 14px;\n        color: ${dark[\"grey\"]};\n    }\n\n    ${applyStyleModifiers(CARD_MODIFIERS)};\n`;","import React from 'react';\nimport { Card } from \"../../util/styled-components/Card\";\n\nconst ServiceCard = ({ service, onClick }) => {\n    const storedPostcode = localStorage.getItem(\"postcode\");\n    const serviceArray = [service];\n\n    let hero = \"\";\n    if (service.images && service.images.medium.length) {\n        hero = service.images.medium;\n    }\n\n    const select = e => {\n        onClick(service.id);\n    }\n\n    return (\n        <Card modifiers=\"serviceCard\" id={service.id} className=\"fss--card\">\n            <div onClick={select}>\n                {hero.length ? (\n                    <div className=\"image-container\">\n                        <img src={hero} alt={service.name} />\n                    </div>\n                ) : \"\"}\n                <div className=\"fss--card--container\">\n                    <h4>{service.name}</h4>\n                    <p className=\"card--description\">{service.description}</p>\n                </div>\n            </div>\n            {\n                serviceArray.map((service, index) => {\n                    const locationSorted = service.locations.sort(function (a, b) {\n                        return parseFloat(a.distance) - parseFloat(b.distance);\n                    });\n\n                    return (\n                        (locationSorted[0].distance) !== null ? <p key={index} className=\"service--distance\">Distance: <a className=\"service--distance--link\" href={`https://www.google.com/maps/dir/${storedPostcode}/${locationSorted[0].address1}%20${locationSorted[0].address2}%20${locationSorted[0].city}%20${locationSorted[0].stateProvince}%20${locationSorted[0].postalCode}`} target=\"_blank\">{locationSorted[0].distance}</a></p> : \"\"\n                    )\n                })\n            }\n        </Card>\n    );\n  };\n\nexport default ServiceCard;","import { createContext } from \"react\";\n\nconst UrlParamsContext = createContext(null);\n\nexport default UrlParamsContext;","import React, {useContext} from 'react';\nimport { Card } from \"../../util/styled-components/Card\"\nimport UrlParamsContext from \"../../context/UrlParamsContext/UrlParamsContext\";\n\nconst CategoryCard = ({ category, onClick }) => {\n    const {urlParams} = useContext(UrlParamsContext);\n    const urlParamsArray = Object.entries(urlParams);\n    \n    const select = e => {\n        if (urlParamsArray[0] !== undefined && urlParamsArray[0][0] == \"category_explorer\" && urlParamsArray[0][1] !== \"\") {\n            e.preventDefault();\n        } else {\n            onClick(category.id);\n        }\n    }\n\n    const categoryIconName = category.name.replaceAll(\" \", \"-\").toLowerCase();\n\n    return (\n        <Card modifiers=\"categoryCard\" id={category.id} className=\"fss--card\" onClick={select}>\n            <div className=\"fss--card--container category-icons\" data-category-icon={categoryIconName}>\n                <div className=\"fss--icon-container\">\n                    <i><span className=\"hideVisually\">{`Icon for ${category.name} `}</span></i>\n                </div>\n                <div className=\"fss--card--content\">\n                    <h4>{category.name}</h4>\n                    <p className=\"card--description\">{category.description}</p>\n                </div>\n            </div>\n        </Card>\n    );\n};\n\nexport default CategoryCard;","import { createContext } from \"react\";\n\nconst UrlContext = createContext(null);\n\nexport default UrlContext;","import { createContext } from \"react\";\n\nconst PrevUrlContext = createContext([]);\n\nexport default PrevUrlContext;","import { createContext } from \"react\";\n\nconst PrevUrlParamsContext = createContext(null);\n\nexport default PrevUrlParamsContext;","import { createBrowserHistory } from 'history';\n\nconst history = createBrowserHistory();\n\nexport default history;","import React, {useContext, useState, useEffect} from \"react\";\nimport styled from \"styled-components\";\nimport UrlContext from \"../../context/UrlContext/UrlContext\";\nimport PrevUrlContext from \"../../context/PrevUrlContext/PrevUrlContext\";\nimport UrlParamsContext from \"../../context/UrlParamsContext/UrlParamsContext\";\nimport PrevUrlParamsContext from \"../../context/PrevUrlParamsContext/PrevUrlParamsContext\";\nimport history from '../../history';\nimport { light } from \"../../settings\";\n\nconst BackButton = styled.button`\n    border: 0;\n    padding: 10px 15px;\n    background: transparent;\n    color: ${light[\"white\"]};\n    font-size: 24px;\n    cursor: pointer;\n    display: flex;\n    align-items: center;\n    &::before {\n        display: none;\n        font-family: \"Font Awesome 5 Pro\";\n        font-weight: 900;\n        content: \"\\f060\";\n    }\n    svg {\n        margin-right: 10px;\n        font-size: 16px;\n    }\n`;\n\nconst Back = () => {\n    const {url, setUrl} = useContext(UrlContext);\n    const {prevUrl, setPrevUrl} = useContext(PrevUrlContext);\n    const {urlParams, setUrlParams} = useContext(UrlParamsContext);\n    const {prevUrlParams, setPrevUrlParams} = useContext(PrevUrlParamsContext);\n    const storedPostcode = localStorage.getItem(\"postcode\");\n    const paramsArray = [\"category_explorer\", \"postcode\", \"service_search\", \"support_service\", \"categories\", \"demographic\"];\n    const currentSearch = window.location.search;\n    let paramObj = {};\n\n    function createParamObj(currentSearch, paramsArray) {\n        const queryParts = currentSearch.substring(1).split(/[&;]/g);\n        const arrayLength = queryParts.length;\n        for (let i = 0; i < arrayLength; i++) {\n            const queryKeyValue = queryParts[i].split(\"=\");\n            if (paramsArray.includes(queryKeyValue[0])) {\n                paramObj[queryKeyValue[0]] = queryKeyValue[1];\n            } \n        }\n    }\n    \n    const prevUrlArrayLast = prevUrl[prevUrl.length - 1];\n    const prevUrlParamsArrayLast = prevUrlParams[prevUrlParams.length - 1];\n\n    const select = e => {\n        let push = \"/?\";\n        let params = {};\n\n        // if \"support_service\" (ServiceDetail)\n            // if prevUrl exists\n                // go back to prevUrl (the latest array item which includes ?category_explorer || ?postcode&service_search\n            // else\n                // if has postcode\n                    // postcode={localstorage}&service_search\n                // else\n                    // default ? Home.js?\n\n        // else if \"set_postcode\" || \"select_categories\" || \"select_demographics\" // DO NOT NEED THESE PAGES IN PREVURL\n            // go back to prevUrl (?category_explorer || ?postcode&service_search || ?service) lastArray object\n        // else ?category_explorer && ?postcode&service_search will go back to Home.js\n\n        if (prevUrl.length !== 0 && prevUrlParams !== 0) {\n            for (const [key, value] of Object.entries(urlParams)) {\n                // if service detail page\n                if (key == \"support_service\" && value !== \"\") {\n                    if (prevUrl.length !== 0) {\n                        let prevUrlArray = prevUrl;\n                        let prevUrlParamsArray = prevUrlParams;\n\n                        const categoryExplorerObj = prevUrlParams.find(categoryExplorerObj => categoryExplorerObj.category_explorer);\n                        const listServicesSearchObj = prevUrlParams.find(listServicesSearchObj => listServicesSearchObj.service_search);\n                        const listServicesPostcodeObj = prevUrlParams.find(listServicesPostcodeObj => listServicesPostcodeObj.postcode);\n                        if (categoryExplorerObj !== undefined) {\n                            // if category_explorer exists in prevUrlParams\n                            push = \"?\" + new URLSearchParams(categoryExplorerObj).toString();\n                            params = categoryExplorerObj;\n                        } else if (listServicesSearchObj !== undefined) {\n                        // if service_search exists in prevUrlParams\n                            // if user has set a postcode\n                            if (storedPostcode) {\n                                listServicesSearchObj.postcode = storedPostcode;\n                            }\n                            push = \"?\" + new URLSearchParams(listServicesSearchObj).toString();\n                            params = listServicesSearchObj;\n                        } else if (listServicesPostcodeObj !== undefined) {\n                        // if postcode exists in prevUrlParams\n                            // if user has set a postcode\n                            if (storedPostcode) {\n                                listServicesPostcodeObj.postcode = storedPostcode;\n                            }\n                            push = \"?\" + new URLSearchParams(listServicesPostcodeObj).toString();\n                            params = listServicesPostcodeObj;\n                        } else {\n                            // if direct on service page and postcode is stored > back will direct the user to the list services page\n                            if (storedPostcode) {\n                                push = \"?postcode=\"+storedPostcode+\"&service_search\";\n                                params = {\"postcode\": storedPostcode, \"service_search\": undefined};\n                                prevUrl.splice(1, 0, push);\n                                prevUrlParams.splice(1, 0, params);\n                            }\n                        }\n                        push = push.replaceAll(\"=undefined\", \"\");\n\n                        // if going back from service page, push new category explorer or list services page to arrays - middle layer page will route back to last array item\n                        prevUrlArray.push(push);\n                        setPrevUrl(prevUrlArray);\n                        prevUrlParamsArray.push(params);\n                        setPrevUrlParams(prevUrlParamsArray);\n                    } else {\n                        if (storedPostcode) {\n                            push = \"?postcode=\"+storedPostcode+\"&service_search\";\n                            params = {\"postcode\": storedPostcode, \"service_search\": undefined};\n                        }\n                    }\n                // else if a middlelayer page i.e. setting postcode, selecting categories or demographics\n                } else if ((key == \"set_postcode\" || key == \"select_categories\" || key == \"select_demographics\") && value == \"true\") {\n                    push = prevUrlArrayLast;\n                    params = prevUrlParamsArrayLast;\n                }\n                // anything else (category explorer / list services) will use default route\n            }\n        }\n        \n        history.push(push);\n        setUrl(push);\n        setUrlParams(params);\n\n    }\n\n    return (\n        <BackButton onClick={select}>Back</BackButton>\n    );\n}\n\nexport default Back;","import React, {useContext, useEffect} from \"react\";\nimport styled from \"styled-components\";\nimport UrlContext from \"../../context/UrlContext/UrlContext\";\nimport PrevUrlContext from \"../../context/PrevUrlContext/PrevUrlContext\";\nimport UrlParamsContext from \"../../context/UrlParamsContext/UrlParamsContext\";\nimport PrevUrlParamsContext from \"../../context/PrevUrlParamsContext/PrevUrlParamsContext\";\nimport { postcodeValidator, postcodeValidatorExists } from 'postcode-validator';\nimport history from '../../history';\nimport { green, light } from \"../../settings\";\n\nconst PostcodeButtonContainer = styled.button`\n    background: ${green[\"dark\"]};\n    color: ${light[\"white\"]};\n    border: 0;\n    padding: 10px 15px;\n    cursor: pointer;\n    display: flex;\n    align-items: center;\n    width: 130px;\n    text-align: left;\n    &.postcode-set {\n        background: ${green[\"dark\"]};\n        padding: 20px 15px;\n        text-transform: uppercase;\n    }\n    &::before {\n        display: none;\n        font-family: \"Font Awesome 5 Duotone\";\n        font-weight: 900;\n        content: \"\\f3c5\";\n        margin-right: 10px;\n    }\n    svg {\n        margin-right: 10px;\n        font-size: 24px;\n        path.fa-secondary {\n            color: #A4D65E;\n            opacity: 1;\n        }\n        path.fa-primary {\n            color: #fff;\n        }\n    }\n\n`;\n\nconst PostcodeButton = () => {\n    const {url, setUrl} = useContext(UrlContext);\n    const {prevUrl, setPrevUrl} = useContext(PrevUrlContext);\n    const {urlParams, setUrlParams} = useContext(UrlParamsContext);\n    const {prevUrlParams, setPrevUrlParams} = useContext(PrevUrlParamsContext);\n    let postcode = \"Set your postcode\";\n    const path = \"?set_postcode=true\";\n    let buttonModifier = \"\";\n\n    const handleEvent = e => {\n        history.push(path);\n        setUrl(path);\n        setUrlParams({\"set_postcode\": \"true\"});\n    };\n\n    // check if url has valid postcode\n    for (const [key, value] of Object.entries(urlParams)) {\n        if (key == \"postcode\" && value !== undefined) {\n            const postcode = value.replace(\"%20\", \" \");\n            const validPostcode = postcodeValidator(postcode, 'UK');\n            if (validPostcode) {\n                localStorage.setItem(\"postcode\", postcode);\n            }\n        }\n    }\n\n    const storedPostcode = localStorage.getItem(\"postcode\");\n    if (storedPostcode) {\n        postcode = storedPostcode;\n        buttonModifier = 'postcode-set';\n    }\n\n    return (\n        <PostcodeButtonContainer className={buttonModifier} onClick={handleEvent}>\n            {postcode}\n        </PostcodeButtonContainer>\n    );\n}\n\nexport default PostcodeButton;","import React, {useContext} from \"react\";\nimport Back from \"../Back/Back\";\nimport PostcodeButton from \"../Postcode/PostcodeButton\";\nimport UrlContext from \"../../context/UrlContext/UrlContext\";\nimport PrevUrlContext from \"../../context/PrevUrlContext/PrevUrlContext\";\nimport UrlParamsContext from \"../../context/UrlParamsContext/UrlParamsContext\";\nimport PrevUrlParamsContext from \"../../context/PrevUrlParamsContext/PrevUrlParamsContext\";\nimport styled from \"styled-components\";\nimport { green } from \"../../settings\";\n\nconst HeaderContainer = styled.div`\n    display: flex;\n    background: ${green[\"main\"]};\n    justify-content: space-between;\n    height: 60px;\n    border-bottom: 1px solid ${green[\"light\"]};\n    position: relative;\n    z-index: 1;\n`;\n\nconst Header = () => {  \n    const {url, setUrl} = useContext(UrlContext);\n    const {prevUrl, setPrevUrl} = useContext(PrevUrlContext);\n    const {urlParams, setUrlParams} = useContext(UrlParamsContext);\n    const {prevUrlParams, setPrevUrlParams} = useContext(PrevUrlParamsContext);\n    let showPostcodeButton = true;\n\n    for (const [key, value] of Object.entries(urlParams)) {\n        if ((key == \"set_postcode\" || key == \"select_categories\" || key == \"select_demographics\") && value == \"true\") {\n            showPostcodeButton = false;\n        }\n    }\n\n    return (\n        <HeaderContainer className=\"no-print\">\n            <Back />\n            {(showPostcodeButton) ? <PostcodeButton /> : \"\"}\n        </HeaderContainer>\n    );\n}\n\nexport default Header;","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport { light, green } from \"../../settings\";\nimport { darken } from \"polished\";\n\nconst StyledButton = styled.button`\n  display: block;\n  margin-bottom: 30px;\n  color: ${light[\"white\"]};\n  background-color: ${green[\"main\"]};\n  border: none;\n  padding: 13px 57px;\n  font-size: 19px;\n  cursor: pointer;\n\n  &:hover {\n    background-color: ${darken(0.1, green[\"main\"])};\n  }\n`;\n\nconst Button = ({ type, label, disabled, onClick = () => {}, className }) => {\n  return (\n    <>\n      <StyledButton\n        type={type}\n        disabled={disabled}\n        onClick={onClick}\n        className={className}\n      >\n        <span>{label}</span>\n      </StyledButton>\n    </>\n  );\n};\n\nButton.propTypes = {\n  type: PropTypes.string,\n  label: PropTypes.string,\n  disabled: PropTypes.bool,\n  onClick: PropTypes.func,\n};\n\nexport default Button;\n","import { createContext } from \"react\";\n\nconst MapToggleContext = createContext([]);\n\nexport default MapToggleContext;","import React, {useContext, useState, useEffect} from \"react\";\nimport styled from \"styled-components\";\nimport { applyStyleModifiers } from 'styled-components-modifiers';\nimport Button from \"../Button/Button\";\nimport { darken } from \"polished\";\nimport { green, light } from \"../../settings\";\nimport UrlContext from \"../../context/UrlContext/UrlContext\";\nimport UrlParamsContext from \"../../context/UrlParamsContext/UrlParamsContext\";\nimport MapToggleContext from \"../../context/MapToggleContext/MapToggleContext\";\nimport history from '../../history';\n\nconst ToggleViewContainer = styled.div`\n    display: flex;\n    padding: 20px 15px 0;\n    align-items: center;\n    z-index: 3;\n    position: relative;\n    aside {\n        font-size: 14px;\n    }\n    \n    div {\n        display: flex;\n    }\n    &.list-enabled {\n        .map-services-button {\n            background: transparent;\n            border: 1px solid ${green[\"ghost\"]};\n            border-radius: 5px;\n            color: ${green[\"main\"]};\n            &:hover, &:focus {\n                background-color: ${darken(0.1, green[\"bright\"])};\n                color: ${light[\"white\"]};\n                svg {\n                    color: ${light[\"white\"]};\n                }\n            }\n            \n            svg {\n                color: ${green[\"main\"]};\n            }\n        }\n    }\n    &.map-enabled {\n        aside {\n            background: rgba(255, 255, 255, 0.75);\n            backdrop-filter: blur(3px);\n            padding: 3px 5px;\n            margin-left: -5px;\n            margin-right: -5px;\n        }\n        .list-services-button {\n            background: ${light[\"white\"]};\n            border: 1px solid ${green[\"ghost\"]};\n            border-radius: 5px;\n            color: ${green[\"main\"]};\n            &:hover, &:focus {\n                background-color: ${darken(0.1, green[\"bright\"])};\n                color: ${light[\"white\"]};\n                svg {\n                    color: ${light[\"white\"]};\n                }\n            }\n            svg {\n                color: ${green[\"main\"]};\n            }\n        }\n    }\n`;\n\nexport const BUTTON_MODIFIERS = {\n    mapButton: () => `\n        &::before {\n            content: \"\\f3c5\";\n        }\n    `\n}\n\nconst StyledButton = styled(Button)`\n    background: ${green[\"main\"]};\n    border: 1px solid ${green[\"ghost\"]};\n    border-radius: 5px;\n    font-size: 16px;\n    cursor: pointer;\n    margin-left: 10px;\n    margin-bottom: 0;\n    padding: 10px 5px;\n    color: ${light[\"white\"]};\n    cursor: pointer;\n    &:hover {\n        background-color: ${darken(0.1, green[\"bright\"])};\n        color: ${light[\"white\"]};\n    }\n    &::before {\n        display: none;\n        font-family: \"Font Awesome 5 Pro\";\n        font-weight: 900;\n        content: \"\\f0c9\";\n    }\n    svg {\n        margin-right: 5px;\n    }\n\n    ${applyStyleModifiers(BUTTON_MODIFIERS)};\n`;\n\nconst ToggleView = () => {\n    const {url, setUrl} = useContext(UrlContext);\n    const {urlParams, setUrlParams} = useContext(UrlParamsContext);\n    const {mapToggle, setMapToggle} = useContext(MapToggleContext);\n    const [style, setStyle] = useState(\"list-enabled\");\n    \n    let push = url;\n    let params = urlParams;\n\n    for (const [key, value] of Object.entries(urlParams)) {\n        if (key == \"map_toggle\" && value === \"true\") {\n            params[\"map_toggle\"] = \"true\";\n            setUrlParams(params);\n            setMapToggle(\"true\");\n        }\n    }\n\n    function toggleView(v) {\n        params[\"map_toggle\"] = v;\n        push = \"?\" + new URLSearchParams(params).toString();\n        push = push.replaceAll(\"=undefined\", \"\");\n        history.push(push);\n        setUrl(push);\n        setUrlParams(params);\n    }\n\n    useEffect(() => {\n        if (mapToggle === \"true\") {\n            setStyle(\"map-enabled\");\n        } else {\n            setStyle(\"list-enabled\");\n        }\n    }, [mapToggle]);\n\n    const listEvent = e => {\n        toggleView(\"false\");\n        setMapToggle(\"false\");\n    };\n    const mapEvent = e => {\n        toggleView(\"true\");\n        setMapToggle(\"true\");\n    };\n\n    return (\n        <ToggleViewContainer className={style}>\n            <aside>View as:</aside>\n            <div>\n                <StyledButton className=\"list-services-button\" type=\"button\" label=\"List\" onClick={listEvent} />\n                <StyledButton modifiers=\"mapButton\" className=\"map-services-button\" type=\"button\" label=\"Map\" onClick={mapEvent} />\n            </div>\n        </ToggleViewContainer>\n    );\n}\n\nexport default ToggleView;","import React, {useContext, useEffect} from \"react\";\nimport styled from \"styled-components\";\nimport { applyStyleModifiers } from 'styled-components-modifiers';\nimport UrlContext from \"../../context/UrlContext/UrlContext\";\nimport PrevUrlContext from \"../../context/PrevUrlContext/PrevUrlContext\";\nimport UrlParamsContext from \"../../context/UrlParamsContext/UrlParamsContext\";\nimport PrevUrlParamsContext from \"../../context/PrevUrlParamsContext/PrevUrlParamsContext\";\nimport { postcodeValidator, postcodeValidatorExists } from 'postcode-validator';\nimport history from '../../history';\nimport { green, yellow, light } from \"../../settings\";\nimport { lighten } from 'polished';\n\nexport const ServiceFilterContainer = styled.div`\n    background: ${lighten(0.03, green[\"main\"])};\n    width: 100%;\n    max-height: 60px;\n    display: flex;\n    align-items: center;\n    position: relative;\n    z-index: 1;\n`;\n\nexport const BUTTON_MODIFIERS = {\n    active: () => `\n        color: ${yellow[\"selected\"]};\n    `,\n    filter: () => `\n        &::before {\n            content: \"\\f0b0\";\n        }\n    `\n}\n\nconst FilterButton = styled.button`\n    color: ${light[\"white\"]};\n    font-size: 16px;\n    border: 0;\n    padding: 20px 15px;\n    cursor: pointer;\n    background: transparent;\n    &::before {\n        display: none;\n        font-family: \"Font Awesome 5 Pro\";\n        font-weight: 900;\n        content: \"\\f03a\";\n    }\n    svg {\n        margin-right: 10px;\n    }\n    ${applyStyleModifiers(BUTTON_MODIFIERS)};\n`;\n\n\nconst ClearButton = styled.button`\n    color: #fff;\n    font-size: 16px;\n    border: 0;\n    padding: 20px 15px;\n    cursor: pointer;\n    background: transparent;\n    margin-left: auto;\n`;\n\nconst ServiceFilter = ({onClick}) => {\n    const {url, setUrl} = useContext(UrlContext);\n    const {prevUrl, setPrevUrl} = useContext(PrevUrlContext);\n    const {urlParams, setUrlParams} = useContext(UrlParamsContext);\n    const {prevUrlParams, setPrevUrlParams} = useContext(PrevUrlParamsContext);\n    const pathCategories = \"?select_categories=true\";\n    const pathDemographics = \"?select_demographics=true\";\n    let showCategoriesButton = true;\n    let showDemographicsButton = true;\n    let showClearAllButton = false;\n    let style = \"\";\n\n    const selectCategoriesEvent = e => {\n        for (const [key, value] of Object.entries(urlParams)) {\n            if (key !== \"select_categories\" && value !== \"true\") {\n                history.push(pathCategories);\n                setUrl(pathCategories);\n                setUrlParams({\"select_categories\": \"true\"});\n            }\n        }\n    };\n    const selectDemographicsEvent = e => {\n        for (const [key, value] of Object.entries(urlParams)) {\n            if (key !== \"select_demographics\" && value !== \"true\") {\n                history.push(pathDemographics);\n                setUrl(pathDemographics);\n                setUrlParams({\"select_demographics\": \"true\"});\n            }\n        }\n    };\n    const clearTaxonomiesEvent = e => {\n        let checks = document.querySelectorAll('input[type=\"checkbox\"]');\n        for (let i = 0; i < checks.length; i++) {\n            let check = checks[i];\n            if (!check.disabled) {\n                check.checked = false;\n            }\n        }\n    };\n    \n\n    for (const [key, value] of Object.entries(urlParams)) {\n        if (key == \"category_explorer\" && value !== \"\") {\n            showCategoriesButton = false;\n        }\n        if (key == \"select_categories\" && value === \"true\") {\n            showDemographicsButton = false;\n            showClearAllButton = true;\n            style = \"active\";\n        }\n        if (key == \"select_demographics\" && value === \"true\") {\n            showCategoriesButton = false;\n            showClearAllButton = true;\n            style = \"active\";\n        }\n    }\n\n    return (\n        <ServiceFilterContainer>\n            {(showCategoriesButton) ?\n                <FilterButton modifiers={style} onClick={selectCategoriesEvent}>\n                    Categories\n                </FilterButton> : \"\"}\n            {(showDemographicsButton) ?\n                <FilterButton modifiers={style} modifiers=\"filter\" onClick={selectDemographicsEvent}>\n                    Filters\n                </FilterButton> : \"\"}\n            {(showClearAllButton) ?\n                <ClearButton onClick={clearTaxonomiesEvent}>\n                    Clear all\n                </ClearButton> : \"\"}\n        </ServiceFilterContainer>\n    );\n}\n\nexport default ServiceFilter;","import styled from \"styled-components\";\nimport breakpoint from 'styled-components-breakpoint';\n\nexport const MapContainer = styled.div`\n    width: 100%;\n    height: 100%;\n    margin-top: -60px !important;\n    .leaflet-container {\n        z-index: 1;\n    }\n    ${breakpoint('md')`\n        position: absolute;\n        top: 0;\n        left: 0;\n        z-index: 0;\n        margin-top: 0 !important;\n    `}\n`;","import { createGlobalStyle } from \"styled-components\";\n\nexport const ReactLeafletMarkerClusterStyles = createGlobalStyle`\n    .marker-cluster-small{background-color:rgba(181,226,140,0.6)}.marker-cluster-small div{background-color:rgba(110,204,57,0.6)}.marker-cluster-medium{background-color:rgba(241,211,87,0.6)}.marker-cluster-medium div{background-color:rgba(240,194,12,0.6)}.marker-cluster-large{background-color:rgba(253,156,115,0.6)}.marker-cluster-large div{background-color:rgba(241,128,23,0.6)}.leaflet-oldie .marker-cluster-small{background-color:#b5e28c}.leaflet-oldie .marker-cluster-small div{background-color:#6ecc39}.leaflet-oldie .marker-cluster-medium{background-color:#f1d357}.leaflet-oldie .marker-cluster-medium div{background-color:#f0c20c}.leaflet-oldie .marker-cluster-large{background-color:#fd9c73}.leaflet-oldie .marker-cluster-large div{background-color:#f18017}.marker-cluster{background-clip:padding-box;border-radius:20px}.marker-cluster div{width:30px;height:30px;margin-left:5px;margin-top:5px !important;text-align:center;border-radius:15px;font:12px \"Helvetica Neue\", Arial, Helvetica, sans-serif}.marker-cluster span{line-height:30px}.leaflet-cluster-anim .leaflet-marker-icon,.leaflet-cluster-anim .leaflet-marker-shadow{-webkit-transition:-webkit-transform 0.3s ease-out, opacity 0.3s ease-in;-moz-transition:-moz-transform 0.3s ease-out, opacity 0.3s ease-in;-o-transition:-o-transform 0.3s ease-out, opacity 0.3s ease-in;transition:transform 0.3s ease-out, opacity 0.3s ease-in}.leaflet-cluster-spider-leg{-webkit-transition:-webkit-stroke-dashoffset 0.3s ease-out, -webkit-stroke-opacity 0.3s ease-in;-moz-transition:-moz-stroke-dashoffset 0.3s ease-out, -moz-stroke-opacity 0.3s ease-in;-o-transition:-o-stroke-dashoffset 0.3s ease-out, -o-stroke-opacity 0.3s ease-in;transition:stroke-dashoffset 0.3s ease-out, stroke-opacity 0.3s ease-in}\n    \n    .marker-cluster div span {\n        font-weight: bold;\n    }\n    .marker-cluster-small {\n        background-color: rgba(181, 226, 140, 0.8);\n    }\n    .marker-cluster-small div {\n        background-color: rgba(110, 204, 57, 1);\n    }\n      \n    .marker-cluster-medium {\n        background-color: rgba(241, 211, 87, 0.8);\n    }\n    .marker-cluster-medium div {\n        background-color: rgba(240, 194, 12, 1);\n    }\n      \n    .marker-cluster-large {\n        background-color: rgba(253, 156, 115, 0.8);\n    }\n    .marker-cluster-large div {\n        background-color: rgba(241, 128, 23, 1);\n    }\n\n`;","const getAllAddresses = data => {\n  // check to see if an array of services is passed through data\n  if (data.data.services !== undefined && data.data.services.constructor === Array) {\n    data = data.data.services;\n  } else {\n\n    data = [data.data.service];\n  }\n  let duplicateService = [...data];\n\n  let i = 0;\n  while (i < data.length) {\n    // check if any services have multiple locations\n    if (data[i].locations.length > 1) {\n      // store the locations for the specific service\n      const locationsArray = data[i].locations;\n      // iterate through each locationsArray and push to thisService.locations\n      for (const [key, value] of Object.entries(locationsArray.slice(1))) {\n        // duplicate the specific service\n        let thisService = {...data[i]};\n        // reset the specific service locations array to be rewritten\n        thisService.locations = [];\n        // push specific service location object value into the empty array\n        thisService.locations.push(value);\n        // push thisService into duplicateService\n        duplicateService.push(thisService);\n      }\n    }\n    i++;\n  }\n  return duplicateService;\n}\n\nexport default getAllAddresses;","const getHomeLocation = data => {\n    if (data.data.metadata !== undefined) {\n        if (data.data.metadata.postCodeLatitude !== null && data.data.metadata.postCodeLongitude !== null) {\n            let homeLocation = [data.data.metadata];\n            return homeLocation;\n        }\n    }\n    return [];\n}\n  \nexport default getHomeLocation;","import MAPBOX_ACCESS_TOKEN from \"../Mapbox/Mapbox\";\n\nconst MAX_ZOOM = 22;\nconst MIN_ZOOM = 11;\nconst CENTER_DESKTOP_LEGEND_FULLSCREEN = [51.534, -0.083];\nconst CENTER_DESKTOP_LEGEND = [51.548, -0.083];\nconst CENTER_DESKTOP_NO_LEGEND_FULLSCREEN = [51.534, -0.06];\nconst CENTER_DESKTOP_NO_LEGEND = [51.548, -0.06];\nconst CENTER_MOBILE_FULLSCREEN = [51.538, -0.059928];\nconst CENTER_MOBILE = [51.549, -0.059928];\nconst DEFAULT_ZOOM_DESKTOP = 13;\nconst DEFAULT_ZOOM_MOBILE = 11;\nconst MAP_BOUNDS = [\n  [51.281112, -0.6],\n  [51.793054, 0.45]\n];\nconst HACKNEY_BOUNDS_1 = [51.517787, -0.097059];\nconst HACKNEY_BOUNDS_2 = [51.580648, -0.00909];\n\nconst HACKNEY_GEOSERVER_WFS = \"https://map.hackney.gov.uk/geoserver/ows?service=WFS&version=2.0&request=GetFeature&outputFormat=json&SrsName=EPSG:4326&typeName=\";\nconst HACKNEY_GEOSERVER_WMS = \"https://map.hackney.gov.uk/geoserver/wms\";\nconst MAPBOX_TILES_URL = \"https://api.mapbox.com/styles/v1/hackneygis/ck7ounc2t0cg41imjb3j53dp8/tiles/256/{z}/{x}/{y}@2x?access_token=\"+MAPBOX_ACCESS_TOKEN;\nconst GENERIC_GEOLOCATION_ERROR =\n  \"We cannot find your location. Please enable Location Services for your browser in Settings or try again outside of your office as your network may block geolocation.\";\nconst GENERIC_OUTSIDE_HACKNEY_ERROR = \"This map only covers Hackney\";\nconst ATTRIBUTION = 'Map data &copy; <a href=\"https://openstreetmap.org\">OpenStreetMap</a> contributors, <a href=\"https://creativecommons.org/licenses/by-sa/2.0/\">CC-BY-SA</a>, Imagery © <a href=\"https://mapbox.com\">Mapbox</a>';\n\nexport {\n    MAX_ZOOM,\n    MIN_ZOOM,\n    CENTER_DESKTOP_LEGEND_FULLSCREEN,\n    CENTER_DESKTOP_LEGEND,\n    CENTER_DESKTOP_NO_LEGEND_FULLSCREEN,\n    CENTER_DESKTOP_NO_LEGEND,\n    CENTER_MOBILE_FULLSCREEN,\n    CENTER_MOBILE,\n    DEFAULT_ZOOM_DESKTOP,\n    DEFAULT_ZOOM_MOBILE,\n    MAP_BOUNDS,\n    HACKNEY_BOUNDS_1,\n    HACKNEY_BOUNDS_2,\n    HACKNEY_GEOSERVER_WMS,\n    HACKNEY_GEOSERVER_WFS,\n    MAPBOX_TILES_URL,\n    GENERIC_GEOLOCATION_ERROR,\n    GENERIC_OUTSIDE_HACKNEY_ERROR,\n    ATTRIBUTION,\n  };\n  ","import React, { useState, useContext, useEffect, useMemo } from \"react\";\nimport \"leaflet/dist/leaflet.css\";\nimport \"leaflet/dist/leaflet.js\";\nimport UrlContext from \"../../context/UrlContext/UrlContext\";\nimport PrevUrlContext from \"../../context/PrevUrlContext/PrevUrlContext\";\nimport UrlParamsContext from \"../../context/UrlParamsContext/UrlParamsContext\";\nimport PrevUrlParamsContext from \"../../context/PrevUrlParamsContext/PrevUrlParamsContext\";\nimport { useQueryParams, NumberParam } from 'use-query-params';\nimport history from '../../history';\nimport ServiceCard from \"../Service/ServiceCard\";\nimport { Map, TileLayer, Marker, Popup, ZoomControl } from \"react-leaflet\";\nimport { renderToStaticMarkup } from \"react-dom/server\";\nimport { divIcon, Map as LeafletMap } from \"leaflet\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport MarkerClusterGroup from \"react-leaflet-markercluster\";\nimport {ReactLeafletMarkerClusterStyles} from \"../../helpers/Mapbox/ReactLeafletMarkerClusterStyles\";\nimport getAllAddresses from \"../../helpers/Mapbox/getAllAddresses\";\nimport getHomeLocation from \"../../helpers/Mapbox/getHomeLocation\";\nimport { GestureHandling } from 'leaflet-gesture-handling';\nimport \"leaflet-gesture-handling/dist/leaflet-gesture-handling.min.css\";\nimport \"leaflet-gesture-handling/dist/leaflet-gesture-handling.min.js\";\n\nimport {\n  MAX_ZOOM,\n  MIN_ZOOM,\n  CENTER_DESKTOP_LEGEND,\n  CENTER_DESKTOP_LEGEND_FULLSCREEN,\n  CENTER_DESKTOP_NO_LEGEND,\n  CENTER_DESKTOP_NO_LEGEND_FULLSCREEN,\n  CENTER_MOBILE,\n  CENTER_MOBILE_FULLSCREEN,\n  DEFAULT_ZOOM_DESKTOP,\n  DEFAULT_ZOOM_MOBILE,\n  MAP_BOUNDS,\n  HACKNEY_BOUNDS_1,\n  HACKNEY_BOUNDS_2,\n  HACKNEY_GEOSERVER_WMS,\n  MAPBOX_TILES_URL,\n  GENERIC_GEOLOCATION_ERROR,\n  GENERIC_OUTSIDE_HACKNEY_ERROR,\n  ATTRIBUTION\n} from \"../../helpers/GlobalVariables/GlobalVariables\";\n\nconst HackneyMap = (data) => {\n    const {url, setUrl} = useContext(UrlContext);\n    const {prevUrl, setPrevUrl} = useContext(PrevUrlContext);\n    const {urlParams, setUrlParams} = useContext(UrlParamsContext);\n    const {prevUrlParams, setPrevUrlParams} = useContext(PrevUrlParamsContext);\n    const [isLoading, setIsLoading] = useState(true);\n    const [isServiceDetail, setIsServiceDetail] = useState(false);\n    const [page, setPage] = useState(null);\n    const [{ service }, setQuery] = useQueryParams({ service: NumberParam });\n    const removeQuery = [\"category_explorer\", \"postcode\", \"service_search\", \"categories\", \"demographic\"];\n    const paramsArray = [...removeQuery, \"support_service\"];\n    let metadata = \"\";\n    LeafletMap.addInitHook('addHandler', 'gestureHandling', GestureHandling);\n\n    useEffect(() => {\n        for (const [key, value] of Object.entries(urlParams)) {\n            if (key == \"support_service\" && value !== \"\") {\n                setIsServiceDetail(true);\n            } else {\n                setIsServiceDetail(false);\n            }\n        }\n    })\n\n    const ServiceCardEvent = e => {\n        const serviceArray = [];\n        const urlArray = url.substring(1).split(/[&;]/g);\n        let prevUrlArray = prevUrl;\n        let prevUrlParamsArray = prevUrlParams;\n\n        for (const [key, value] of Object.entries(urlParams)) {\n            if (removeQuery.includes(key)) {\n                if (value) {\n                    const urlParamsString = key + \"=\" + value;\n                    serviceArray.push(urlParamsString);\n                } else {\n                    const urlParamsString = key;\n                    serviceArray.push(urlParamsString);\n                }\n            }\n        }\n\n        let newServiceUrl = urlArray.filter(val => !serviceArray.includes(val)).join(\"&\");\n        if (newServiceUrl !== \"\") newServiceUrl = \"&\" + newServiceUrl;\n        const updatedUrl = \"?support_service=\" + e;\n        const newServiceObj = {support_service: e.toString()};\n        history.push(updatedUrl);\n\n        setUrl(updatedUrl);\n        setPage(\"ServiceDetail\");\n        setUrlParams(newServiceObj);\n\n        prevUrlArray.push(updatedUrl);\n        setPrevUrl(prevUrlArray);\n\n        // setPrevUrlParams\n        prevUrlParamsArray.push(newServiceObj);\n        setPrevUrlParams(prevUrlParamsArray);\n    };\n\n return (\n    <Map className=\"markercluster-map\"\n        bounds={MAP_BOUNDS}\n        maxBounds={MAP_BOUNDS}\n        center={CENTER_DESKTOP_LEGEND_FULLSCREEN}\n        zoom={MIN_ZOOM}\n        minZoom={MIN_ZOOM}\n        maxZoom={MAX_ZOOM}\n        zoomControl={false}\n        dragging={false}\n        tap={false}\n        scrollWheelZoom={false}\n        bounceAtZoomLimits={false}\n        gestureHandling\n    >\n        <ReactLeafletMarkerClusterStyles />\n        <ZoomControl position='topright' />\n        <TileLayer\n            attribution={ATTRIBUTION}\n            url={MAPBOX_TILES_URL}\n        />\n        <MarkerClusterGroup>\n            {\n                getAllAddresses(data).map((service, index) => {\n                    \n                    const categoriesSorted = service[\"categories\"].sort(function (a, b) {\n                        return a.weight - b.weight;\n                    });\n\n                    const categoryIconName = categoriesSorted[0].name.replaceAll(\" \", \"-\").toLowerCase();\n\n                    const iconMarkup = renderToStaticMarkup(\n                        <div className=\"hackney-map-marker\" data-category-icon={categoryIconName}>\n                            <FontAwesomeIcon icon={[\"fas\", \"map-marker-alt\"]} size=\"3x\" />\n                            <FontAwesomeIcon icon={[\"fas\", \"map-marker\"]} size=\"3x\" />\n                        </div>\n                    );\n                    const customMarkerIcon = divIcon({\n                        html: iconMarkup\n                    });\n\n                    const point = [parseFloat(service[\"locations\"][0]['latitude']), parseFloat(service[\"locations\"][0]['longitude'])];\n                    \n                    return (\n                        <Marker position={point} key={index} icon={customMarkerIcon}>\n                            {\n                                (isServiceDetail == false) ?\n                                    <Popup>\n                                        <ServiceCard key={index} service={service} onClick={ServiceCardEvent} />\n                                    </Popup> : \"\"\n                            }\n                        </Marker>\n                    )\n                })\n            }\n        </MarkerClusterGroup>\n\n        {\n            getHomeLocation(data).map((location, index) => {\n                if (location.postCodeLatitude !== null && location.postCodeLongitude !== null) {\n                    const iconMarkup = renderToStaticMarkup(\n                        <div className=\"hackney-map-home-marker\">\n                            <FontAwesomeIcon icon={[\"fas\", \"map-marker\"]} size=\"3x\" />\n                            <FontAwesomeIcon icon={[\"fas\", \"map-marker\"]} size=\"3x\" className=\"map-marker--foreground\" />\n                            <FontAwesomeIcon icon={[\"fas\", \"home\"]} size=\"3x\" />\n                        </div>\n                    );\n                    const customMarkerIcon = divIcon({\n                        html: iconMarkup\n                    });\n                    const point = [parseFloat(location.postCodeLatitude), parseFloat(location.postCodeLongitude)];\n                    return (\n                        <Marker position={point} key={index} icon={customMarkerIcon}></Marker>\n                    );\n                }\n            })\n        }\n\n    </Map>\n );\n}\n\nexport default HackneyMap;","import React from \"react\";\nimport \"leaflet/dist/leaflet.css\";\nimport \"leaflet/dist/leaflet.js\";\nimport { useMediaQuery } from 'react-responsive';\nimport {MapContainer} from \"../../util/styled-components/MapContainer\";\nimport { Map, TileLayer, ZoomControl } from \"react-leaflet\";\nimport { Map as LeafletMap } from \"leaflet\";\nimport { GestureHandling } from 'leaflet-gesture-handling';\nimport \"leaflet-gesture-handling/dist/leaflet-gesture-handling.min.css\";\nimport \"leaflet-gesture-handling/dist/leaflet-gesture-handling.min.js\";\nimport {\n    MAX_ZOOM,\n    MIN_ZOOM,\n    CENTER_DESKTOP_LEGEND,\n    CENTER_DESKTOP_LEGEND_FULLSCREEN,\n    CENTER_DESKTOP_NO_LEGEND,\n    CENTER_DESKTOP_NO_LEGEND_FULLSCREEN,\n    CENTER_MOBILE,\n    CENTER_MOBILE_FULLSCREEN,\n    DEFAULT_ZOOM_DESKTOP,\n    DEFAULT_ZOOM_MOBILE,\n    MAP_BOUNDS,\n    HACKNEY_BOUNDS_1,\n    HACKNEY_BOUNDS_2,\n    HACKNEY_GEOSERVER_WMS,\n    MAPBOX_TILES_URL,\n    GENERIC_GEOLOCATION_ERROR,\n    GENERIC_OUTSIDE_HACKNEY_ERROR,\n    ATTRIBUTION\n} from \"../../helpers/GlobalVariables/GlobalVariables\";\n\nLeafletMap.addInitHook('addHandler', 'gestureHandling', GestureHandling);\n\nconst MapPlaceholder = () => {\n\n    const Desktop = ({ children }) => {\n        const isDesktop = useMediaQuery({ minWidth: 768 })\n        return isDesktop ? children : null\n    }\n\n    return (\n        <Desktop>\n            <MapContainer>\n                <Map className=\"markercluster-map\"\n                    bounds={MAP_BOUNDS}\n                    maxBounds={MAP_BOUNDS}\n                    center={CENTER_DESKTOP_LEGEND_FULLSCREEN}\n                    zoom={MIN_ZOOM}\n                    minZoom={MIN_ZOOM}\n                    maxZoom={MAX_ZOOM}\n                    zoomControl={false}\n                    dragging={false}\n                    tap={false}\n                    scrollWheelZoom={false}\n                    bounceAtZoomLimits={false}\n                    gestureHandling\n                >\n                    <ZoomControl position='topright' />\n                    <TileLayer\n                        attribution={ATTRIBUTION}\n                        url={MAPBOX_TILES_URL}\n                    />\n                </Map>\n            </MapContainer>\n        </Desktop>\n    );\n}\n\nexport default MapPlaceholder;","import React, { useEffect, useState, useContext } from 'react';\nimport GetServices from \"../../services/GetServices/GetServices\";\nimport GetTaxonomies from \"../../services/GetTaxonomies/GetTaxonomies\";\nimport { CardContainer } from \"../../util/styled-components/CardContainer\";\nimport ServiceCard from \"../Service/ServiceCard\";\nimport CategoryCard from \"../Category/CategoryCard\";\nimport Header from \"../Header/Header\";\nimport ToggleView from \"../ToggleView/ToggleView\";\nimport PrevUrlContext from \"../../context/PrevUrlContext/PrevUrlContext\";\nimport UrlParamsContext from \"../../context/UrlParamsContext/UrlParamsContext\";\nimport PrevUrlParamsContext from \"../../context/PrevUrlParamsContext/PrevUrlParamsContext\";\nimport MapToggleContext from \"../../context/MapToggleContext/MapToggleContext\";\nimport styled from \"styled-components\";\nimport ServiceFilter from '../ServiceFilter/ServiceFilter';\nimport {MapContainer} from \"../../util/styled-components/MapContainer\";\nimport HackneyMap from \"../HackneyMap/HackneyMap\";\nimport { useMediaQuery } from 'react-responsive';\nimport MapPlaceholder from \"../MapPlaceholder/MapPlaceholder\";\n\nexport const CategoryCardContainer = styled.div`\n  .fss--card {\n    box-shadow: none;\n    border: 0;\n    cursor: auto;\n    margin-bottom: 0;\n    position: relative;\n    z-index: 1;\n    .fss--card--container {\n      padding: 20px 15px;\n      &::after {\n          content: none;\n      }\n    }\n    .fss--card--content {\n      margin-right: 0;\n    }\n  }\n`;\n\nconst CategoryExplorer = ({ category, onClick }) => {\n  const [data, setData] = useState([]);\n  const [categoryData, setCategoryData] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const {urlParams} = useContext(UrlParamsContext);\n  const {prevUrl, setPrevUrl} = useContext(PrevUrlContext);\n  const {prevUrlParams, setPrevUrlParams} = useContext(PrevUrlParamsContext);\n  const {mapToggle, setMapToggle} = useContext(MapToggleContext);\n  const paramsArray = [\"category_explorer\", \"postcode\", \"service_search\", \"support_service\", \"categories\", \"demographic\"];\n  const currentSearch = window.location.search;\n  let paramObj = {};\n  const [showMap, setShowMap] = useState(\"false\");\n  const [fetchOnce, setfetchOnce] = useState(false);\n\n  const Desktop = ({ children }) => {\n    const isDesktop = useMediaQuery({ minWidth: 768 })\n    return isDesktop ? children : null\n  }\n\n  const Mobile = ({ children }) => {\n    const isMobile = useMediaQuery({ maxWidth: 767 })\n    return isMobile ? children : null\n  }\n\n  function createParamObj(currentSearch, paramsArray) {\n    const queryParts = currentSearch.substring(1).split(/[&;]/g);\n    const arrayLength = queryParts.length;\n    for (let i = 0; i < arrayLength; i++) {\n      const queryKeyValue = queryParts[i].split(\"=\");\n      if (paramsArray.includes(queryKeyValue[0])) {\n        paramObj[queryKeyValue[0]] = queryKeyValue[1];\n      }\n    }\n  }\n  \n  useEffect(() => {\n    async function fetchData() {\n      let taxonomyId = [];\n      let categoryId = \"\";\n      if (Object.entries(urlParams)[0] && Object.entries(urlParams)[0][0] == \"category_explorer\" && Object.entries(urlParams)[0][1] !== \"\") {\n        categoryId = parseInt(Object.entries(urlParams)[0][1]);\n      }\n      \n      for (const [key, value] of Object.entries(urlParams)) {\n        if ((key == \"category_explorer\" || key == \"demographic\") && value !== \"\") {\n          taxonomyId.push(value);\n        }\n      }\n\n      // call retrieveServices with categoryId param passed to return all services associated with the category\n      const getServices = await GetServices.retrieveServices({taxonomyids: taxonomyId});\n      setData(getServices || []);\n      // call getTaxonomy with categoryId param passed to return the category name and description\n      const getCategories = await GetTaxonomies.getTaxonomy(categoryId);\n      setCategoryData(getCategories || []);\n      setIsLoading(false);\n    }\n    if (fetchOnce == false) {\n      fetchData();\n      setfetchOnce(true);\n    }\n    \n    if (prevUrl.length == 0 && prevUrlParams.length == 0) {\n      let prevUrlArray = [\"\"];\n      let prevUrlParamsArray = [{}];\n\n      // setPrevUrl\n      if (currentSearch) {\n        prevUrlArray.push(currentSearch);\n        setPrevUrl(prevUrlArray);\n      }\n\n      // setPrevUrlParams\n      createParamObj(currentSearch, paramsArray);\n      prevUrlParamsArray.push(paramObj);\n      setPrevUrlParams(prevUrlParamsArray);\n    }\n\n    if (mapToggle === \"true\") {\n      setShowMap(\"true\");\n    } else {\n      setShowMap(\"false\");\n    }\n\n  });\n\n  if (isLoading) {\n    return <span>Loading</span>;\n  }\n\n  const select = e => {\n    onClick(e);\n  }\n\n  return(\n    <div>\n      {Object.keys(categoryData).length === 0 ? (\n        <div>\n          <Header />\n          <div className=\"no-results\">\n            <h2>No results found</h2>\n            <p>Please use the 'Back' button above to go back and select a category.</p>\n          </div>\n          <MapPlaceholder />\n      </div>\n      ) : (\n        <div>\n          <Header />\n          <ServiceFilter />\n          <CategoryCardContainer>\n            <CategoryCard\n              key={categoryData.id}\n              category={categoryData}\n            />\n          </CategoryCardContainer>\n          <Mobile>\n            <ToggleView />\n            {\n              ( showMap == \"false\" ) ?\n                <CardContainer>\n                  {data.services.map((service, index) => {\n                    return (\n                      <ServiceCard key={index} service={service} onClick={select} />\n                    );\n                  })}\n                </CardContainer> : \"\"\n            }\n          </Mobile>\n          <Desktop>\n            <CardContainer>\n              {data.services.map((service, index) => {\n                return (\n                  <ServiceCard key={index} service={service} onClick={select} />\n                );\n              })}\n            </CardContainer>\n          </Desktop>\n          <Mobile>\n          {\n            ( showMap == \"true\" ) ?\n              <MapContainer>\n                <HackneyMap data={data} />\n              </MapContainer> : \"\"\n          }\n          </Mobile>\n          <Desktop>\n            <MapContainer>\n              <HackneyMap data={data} />\n            </MapContainer>\n          </Desktop>\n        </div>\n      )}\n    </div>\n  );\n\n}\n\n\nexport default CategoryExplorer;","import React from \"react\";\nimport styled from \"styled-components\";\nimport { light } from \"../../settings\";\n\nconst StyledError = styled.span`\n  display: block;\n  margin-bottom: 20px;\n  color: ${light[\"white\"]};\n`;\n\nconst FormError = ({ error }) => {\n  return <StyledError role=\"alert\">{error}</StyledError>;\n};\n\nexport default FormError;\n","import styled from \"styled-components\";\nimport breakpoint from 'styled-components-breakpoint';\nimport { red } from \"../../settings\";\n\nexport const StyledInput = styled.input`\n    display: block;\n    margin-bottom: 15px;\n    width: 100%;\n    height: 50px;\n    border: 0;\n    padding: 15px;\n    border-radius: 3px;\n    ${breakpoint('md')`\n        max-width: 438px;\n\n    `}\n    &[aria-invalid=\"true\"] {\n        border-color: ${red[\"error\"]} !important;\n    }\n`;","import styled from \"styled-components\";\nimport breakpoint from 'styled-components-breakpoint';\n\nexport const StyledLabel = styled.label`\n    border: 0;\n    clip: rect(0 0 0 0);\n    height: 1px;\n    margin: -1px;\n    overflow: hidden;\n    padding: 0;\n    position: absolute;\n    whiteSpace: nowrap;\n    width: 1px;\n`;","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport FormError from \"../FormError/FormError\";\nimport Button from \"../Button/Button\";\nimport { darken } from \"polished\";\nimport {StyledInput} from \"../../util/styled-components/StyledInput\";\nimport {StyledLabel} from \"../../util/styled-components/StyledLabel\";\nimport {green} from \"../../settings\";\n\nconst StyledInputContainer = styled.div`\n  position: relative;\n`;\n\nconst StyledButton = styled(Button)`\n  background: ${green[\"bright\"]};\n  position: absolute;\n  top: 5px;\n  right: 5px;\n  border-radius: 2px;\n  padding: 10px;\n  width: 40px;\n  height: 40px;\n  margin: 0;\n  &:hover {\n    background-color: ${darken(0.1, green[\"bright\"])};\n  }\n\n  &::before {\n    display: none;\n    font-family: \"Font Awesome 5 Pro\";\n    font-weight: 900;\n    content: \"\\f002\";\n  }\n  svg {\n    color: #000;\n  }\n\n  span {\n    border: 0;\n    clip: rect(0 0 0 0);\n    height: 1px;\n    margin: -1px;\n    overflow: hidden;\n    padding: 0;\n    position: absolute;\n    whiteSpace: nowrap;\n    width: 1px;\n  }\n`;\n\nconst StyledHelp = styled.p``;\n\nconst FormInputSubmit = ({\n  id,\n  type,\n  name,\n  label,\n  placeholder,\n  register,\n  defaultValue,\n  required,\n  maxLength,\n  minLength,\n  error,\n  inputRef,\n  validate,\n  help,\n}) => {\n  return (\n    <>\n      {error && error.type === \"required\" && (\n        <FormError error={`${label} is required.`} />\n      )}\n      {error && error.type === \"maxLength\" && (\n        <FormError error=\"Max length exceeded.\" />\n      )}\n      {error && error.type === \"minLength\" && (\n        <FormError\n          error={`${label} must be at least ${minLength} ${\n            type === \"number\" ? \"digits\" : \"characters\"\n          }.`}\n        />\n      )}\n      {error && error.message && <FormError error={error.message} />}\n      <StyledLabel htmlFor={name}>{label}</StyledLabel>\n      {help ? <StyledHelp>{help}</StyledHelp> : \"\"}\n      <StyledInputContainer>\n        <StyledInput\n          id={id}\n          aria-label={name}\n          name={name}\n          placeholder={placeholder}\n          type={type}\n          ref={(e) => {\n            register(e, { required, minLength, maxLength, validate });\n            if (inputRef) inputRef.current = e;\n          }}\n          defaultValue={defaultValue}\n          aria-invalid={error ? \"true\" : \"false\"}\n        />\n        {/* <StyledButton type=\"submit\" label=\"Login\" disabled={isLoading} /> */}\n        <StyledButton type=\"submit\" label=\"Submit\" />\n      </StyledInputContainer>\n    </>\n  );\n};\n\nFormInputSubmit.propTypes = {\n  id: PropTypes.string,\n  type: PropTypes.string,\n  name: PropTypes.string,\n  label: PropTypes.string,\n  placeholder: PropTypes.string,\n  register: PropTypes.func,\n  defaultValue: PropTypes.string,\n  required: PropTypes.bool,\n  maxLength: PropTypes.number,\n  minLength: PropTypes.number,\n  error: PropTypes.object,\n};\n\nexport default FormInputSubmit;\n","import React, { useEffect, useState, useContext, useRef } from \"react\";\nimport styled from \"styled-components\";\nimport UrlContext from \"../../context/UrlContext/UrlContext\";\nimport PrevUrlContext from \"../../context/PrevUrlContext/PrevUrlContext\";\nimport UrlParamsContext from \"../../context/UrlParamsContext/UrlParamsContext\";\nimport PrevUrlParamsContext from \"../../context/PrevUrlParamsContext/PrevUrlParamsContext\";\nimport { useForm } from \"react-hook-form\";\nimport FormInputSubmit from \"../FormInputSubmit/FormInputSubmit\";\nimport { green, yellow, light } from \"../../settings\";\n\nexport const ServiceSearchContainer = styled.div`\n    background: ${green[\"main\"]};;\n    width: 100%;\n    display: flex;\n    align-items: center;\n    opacity: 1;\n    padding: 17px 15px;\n    position: relative;\n    z-index: 1;\n    form {\n        width: 100%;\n        input {\n            margin-bottom: 0;\n        }\n    }\n`;\n\nconst ServiceSearch = ({onClick}) => {\n    const {url, setUrl} = useContext(UrlContext);\n    const {prevUrl, setPrevUrl} = useContext(PrevUrlContext);\n    const {urlParams, setUrlParams} = useContext(UrlParamsContext);\n    const {prevUrlParams, setPrevUrlParams} = useContext(PrevUrlParamsContext);\n    const { register, handleSubmit, errors, reset } = useForm();\n    const [isLoading, setIsLoading] = useState(true);\n    const paramsArray = [\"category_explorer\", \"postcode\", \"service_search\", \"support_service\", \"categories\", \"demographic\"];\n    const storedPostcode = localStorage.getItem(\"postcode\");\n    const [searchTerm, setSearchTerm] = useState(\"\");\n    const prevUrlArrayLast = prevUrl[prevUrl.length - 1];\n    const prevUrlParamsArrayLast = prevUrlParams[prevUrlParams.length - 1];\n\n    useEffect(() => {\n        for (const [key, value] of Object.entries(urlParams)) {\n            if (key == \"service_search\" && value !== undefined) {\n                setSearchTerm(value);\n            }\n        }\n        setIsLoading(false);\n    });\n\n    async function submitForm() {\n        if (isLoading) return;\n\n        let searchValue = document.forms[\"fss--find-service\"][\"service_search\"].value;\n\n        let prevUrlParamsArray = prevUrlParams;\n        prevUrlParamsArrayLast[\"service_search\"] = searchValue;\n        prevUrlParamsArray.push(prevUrlParamsArrayLast);\n        setPrevUrlParams(prevUrlParamsArray);\n\n        setUrlParams({\"service_search_process\": \"true\"});\n\n    }\n\n    return (\n        <ServiceSearchContainer>\n            <form id=\"fss--find-service\" onSubmit={handleSubmit(submitForm)} data-testid=\"form\">\n                <FormInputSubmit\n                    id=\"fss--service-search\"\n                    label=\"Search for a service\"\n                    placeholder=\"Enter keyword or organisation\"\n                    name=\"service_search\"\n                    type=\"text\"\n                    register={register}\n                    defaultValue={searchTerm}\n                />\n            </form>\n        </ServiceSearchContainer>\n    );\n}\n\nexport default ServiceSearch;","import React, { useEffect, useState, useContext } from 'react';\nimport GetServices from \"../../services/GetServices/GetServices\";\nimport ServiceCard from \"./ServiceCard\";\nimport { CardContainer } from \"../../util/styled-components/CardContainer\";\nimport PrevUrlContext from \"../../context/PrevUrlContext/PrevUrlContext\";\nimport UrlParamsContext from \"../../context/UrlParamsContext/UrlParamsContext\";\nimport PrevUrlParamsContext from \"../../context/PrevUrlParamsContext/PrevUrlParamsContext\";\nimport MapToggleContext from \"../../context/MapToggleContext/MapToggleContext\";\nimport ToggleView from \"../ToggleView/ToggleView\";\nimport Header from \"../Header/Header\";\nimport ServiceFilter from '../ServiceFilter/ServiceFilter';\nimport styled from \"styled-components\";\nimport {MapContainer} from \"../../util/styled-components/MapContainer\";\nimport { useMediaQuery } from 'react-responsive';\nimport HackneyMap from \"../HackneyMap/HackneyMap\";\nimport MapPlaceholder from \"../MapPlaceholder/MapPlaceholder\";\nimport ServiceSearch from '../ServiceSearch/ServiceSearch';\n\nconst ListServices = ({ onClick }) => {\n  const [data, setData] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const {urlParams, setUrlParams} = useContext(UrlParamsContext);\n  const {prevUrl, setPrevUrl} = useContext(PrevUrlContext);\n  const {prevUrlParams, setPrevUrlParams} = useContext(PrevUrlParamsContext);\n  const {mapToggle, setMapToggle} = useContext(MapToggleContext);\n  const paramsArray = [\"category_explorer\", \"postcode\", \"service_search\", \"support_service\", \"categories\", \"demographic\"];\n  const currentSearch = window.location.search;\n  let paramObj = {};\n  const [showMap, setShowMap] = useState(\"false\");\n  const [fetchOnce, setfetchOnce] = useState(false);\n\n  const Desktop = ({ children }) => {\n    const isDesktop = useMediaQuery({ minWidth: 768 })\n    return isDesktop ? children : null\n  }\n\n  const Mobile = ({ children }) => {\n    const isMobile = useMediaQuery({ maxWidth: 767 })\n    return isMobile ? children : null\n  }\n\n  function createParamObj(currentSearch, paramsArray) {\n    const queryParts = currentSearch.substring(1).split(/[&;]/g);\n    const arrayLength = queryParts.length;\n    for (let i = 0; i < arrayLength; i++) {\n      const queryKeyValue = queryParts[i].split(\"=\");\n      if (paramsArray.includes(queryKeyValue[0])) {\n        paramObj[queryKeyValue[0]] = queryKeyValue[1];\n      } \n    }\n  }\n\n  useEffect(() => {\n    async function fetchData() {\n      let postcode = \"\";\n      let search = \"\";\n      let taxonomyId = [];\n      for (const [key, value] of Object.entries(urlParams)) {\n        if (key == \"postcode\" && value !== \"\") {\n          postcode = value;\n        }\n        if (key == \"service_search\" && value !== \"\") {\n          search = value;\n        }\n        if ((key == \"categories\" || key == \"demographic\") && value !== \"\") {\n          taxonomyId.push(value);\n        }\n      }\n      // call retrieveServicesByCategory with taxonomyids param passed to return all services associated with the category\n      const getServices = await GetServices.retrieveServices({postcode: postcode, search: search, taxonomyids: taxonomyId});\n      setData(getServices || []);\n      setIsLoading(false);\n    }\n    if (fetchOnce == false) {\n      fetchData();\n      setfetchOnce(true);\n    }\n\n    if (prevUrl.length == 0 && prevUrlParams.length == 0) {\n      let prevUrlArray = [\"\"];\n      let prevUrlParamsArray = [{}];\n\n      // setPrevUrl\n      if (currentSearch) {\n        prevUrlArray.push(currentSearch);\n        setPrevUrl(prevUrlArray);\n      }\n\n      // setPrevUrlParams\n      createParamObj(currentSearch, paramsArray);\n      prevUrlParamsArray.push(paramObj);\n      setPrevUrlParams(prevUrlParamsArray);\n    }\n\n    if (mapToggle === \"true\") {\n      setShowMap(\"true\");\n    } else {\n      setShowMap(\"false\");\n    }\n\n  });\n\n  if (isLoading) {\n    return <span>Loading</span>;\n  }\n\n  const select = e => {\n    onClick(e);\n  }\n\n  return(\n    <div>\n      {!data.services.length ? (\n        <div>\n          <Header />\n          <div className=\"no-results\">\n            <h2>No results found</h2>\n            <p>Please use the 'Back' button above to go back and try a different search term.</p>\n          </div>\n          <MapPlaceholder />\n        </div>\n      ) : (\n        <div>\n          <Header />\n          <ServiceSearch />\n          <ServiceFilter />\n          <Mobile>\n            <ToggleView />\n            {\n              ( showMap == \"false\" ) ?\n                <CardContainer>\n                  {data.services.map((service, index) => {\n                    return (\n                      <ServiceCard key={index} service={service} onClick={select} />\n                    );\n                  })}\n                </CardContainer> : \"\"\n            }\n          </Mobile>\n          <Desktop>\n            <CardContainer>\n              {data.services.map((service, index) => {\n                return (\n                  <ServiceCard key={index} service={service} onClick={select} />\n                );\n              })}\n            </CardContainer>\n          </Desktop>\n\n          <Mobile>\n          {\n            ( showMap == \"true\" ) ?\n              <MapContainer>\n                <HackneyMap data={data} />\n              </MapContainer> : \"\"\n            }\n          </Mobile>\n          <Desktop>\n            <MapContainer>\n              <HackneyMap data={data} />\n            </MapContainer>\n          </Desktop>\n        </div>\n      )}\n    </div>\n  );\n\n}\n\n\nexport default ListServices;","import React from \"react\";\n\nconst AppLoading = () => {\n  return <div>Loading</div>;\n};\n\nexport default AppLoading;\n","import styled from \"styled-components\";\nimport breakpoint from 'styled-components-breakpoint';\n\nexport const InnerContainer = styled.div`\n    padding: 15px;\n`;","import React from \"react\";\nimport styled from \"styled-components\";\n\nexport const AddressList = styled.li`\n    div {\n        display: flex;\n        align-items: center;\n        &::before {\n            display: none;\n            font-family: \"Font Awesome 5 Pro\";\n            font-weight: 900;\n            content: \"\\f3c5\";\n        }\n        svg {\n            margin-right: 10px;\n        }\n    }\n    span {\n        display: block;\n        font-size: 16px;\n        margin-left: 19px;\n        margin-top: 18px;\n    }\n`;\n\nconst Address = (props) => {\n    const { address } = props;\n    let storedPostcode = localStorage.getItem(\"postcode\");\n    storedPostcode = (storedPostcode) ? storedPostcode : \"\";\n\n    return(\n        <AddressList key={address.uprn}>\n            <div>\n                <a href={`https://www.google.com/maps/dir/${storedPostcode}/${address.address1}%20${address.address2}%20${address.city}%20${address.stateProvince}%20${address.postalCode}`} target=\"_blank\" rel=\"noopener noreferrer\">\n                    {address.address1}<br></br>\n                    {address.address2 ? address.address2 + \", \" : \"\"}\n                    {address.city ? address.city + \", \" : \"\"}\n                    {address.stateProvince ? address.stateProvince + \", \" : \"\"}\n                    {address.postalCode ? address.postalCode : \"\"}\n                </a>\n            </div>\n            {(address.distance) !== null ? <span>{address.distance} away</span> : \"\"}\n        </AddressList>\n    );\n}\n\nexport default Address;","import React from \"react\";\nimport styled from \"styled-components\";\nimport {\n    EmailIcon,\n    EmailShareButton,\n    FacebookIcon,\n    FacebookShareButton,\n    LinkedinIcon,\n    LinkedinShareButton,\n    TwitterIcon,\n    TwitterShareButton,\n    WhatsappIcon,\n    WhatsappShareButton,\n} from \"react-share\";\n\nconst ShareContainer = styled.div`\n    button {\n        margin: 0 5px;\n    }\n`;\n\nconst Share = (service) => {\n    const currentUrl = window.location.href;\n    return (\n        <ShareContainer>\n            <FacebookShareButton\n                url={currentUrl}\n                quote={service.service.name}\n            >\n                <FacebookIcon size={50} round />\n            </FacebookShareButton>\n            <TwitterShareButton\n                url={currentUrl}\n                title={service.service.name}\n            >\n                <TwitterIcon size={50} round />\n            </TwitterShareButton>\n            <LinkedinShareButton\n                url={currentUrl}\n            >\n                <LinkedinIcon size={50} round />\n            </LinkedinShareButton>\n            <WhatsappShareButton\n                url={currentUrl}\n                title={service.service.name}\n            >\n                <WhatsappIcon size={50} round />\n            </WhatsappShareButton>\n            <EmailShareButton\n                url={currentUrl}\n                subject={service.service.name}\n                body=\"\"\n            >\n                <EmailIcon size={50} round />\n            </EmailShareButton>\n        </ShareContainer>\n    )\n}\n\nexport default Share;","import React, {useState, useContext, useEffect, useRef, Fragment} from \"react\";\nimport AppLoading from \"../../AppLoading\";\nimport GetServices from \"../../services/GetServices/GetServices\";\nimport GetTaxonomies from \"../../services/GetTaxonomies/GetTaxonomies\";\nimport styled from \"styled-components\";\nimport { darken } from \"polished\";\nimport { green, blue, light, dark } from \"../../settings\";\nimport breakpoint from 'styled-components-breakpoint';\nimport { InnerContainer } from \"../../util/styled-components/InnerContainer\";\nimport PrevUrlContext from \"../../context/PrevUrlContext/PrevUrlContext\";\nimport UrlParamsContext from \"../../context/UrlParamsContext/UrlParamsContext\";\nimport PrevUrlParamsContext from \"../../context/PrevUrlParamsContext/PrevUrlParamsContext\";\nimport {\n    Accordion,\n    AccordionItem,\n    AccordionItemHeading,\n    AccordionItemButton,\n    AccordionItemPanel,\n} from 'react-accessible-accordion';\nimport Address from \"../Address/Address\";\nimport Header from \"../Header/Header\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport ActionSheet from 'actionsheet-react';\nimport Share from \"../Share/Share\";\nimport {MapContainer} from \"../../util/styled-components/MapContainer\";\nimport HackneyMap from \"../HackneyMap/HackneyMap\";\nimport { useMediaQuery } from 'react-responsive';\nimport ReactToPrint from 'react-to-print';\n\nexport const DetailContainer = styled.div`\n    .service-info {\n        ${breakpoint('md')`\n            overflow-y: scroll;\n            height: calc(100vh - 100px);\n            position: relative;\n            z-index: 1;\n            background: ${light[\"white\"]};\n        `}\n    }\n    .image-container {\n        img {\n            width: 100%;\n            height: auto;\n        }\n    }\n    .link-button {\n        background: ${green[\"main\"]};\n        border-radius: 3px;\n        padding: 15px 30px;\n        display: inline-block;\n        color: ${light[\"white\"]} !important;\n        text-decoration: none;\n        &:hover {\n            background-color: ${darken(0.1, green[\"main\"])};\n        }\n    }\n    h3 {\n        font-size: 19px;\n        margin-bottom: 15px;\n    }\n    ul {\n        li {\n            font-size: 19px;\n        }\n    }\n    #fss--social-share-overlay {\n        > div:first-of-type {\n            display: none;\n        }\n    }\n    .fss--social-share, .print-button {\n        display: block;\n        border: 0;\n        background: transparent;\n        cursor: pointer;\n        padding: 0;\n        font-size: 19px;\n        color: ${blue[\"link\"]};\n        text-decoration: underline;\n        &:hover {\n            color: ${darken(0.1, blue[\"link\"])};\n        }\n        svg {\n            margin-right: 5px;\n            color: #000;\n        }\n    }\n    .print-button {\n        margin-top: 15px !important;\n    }\n    .print-only, .page-break {\n        display: none;\n    }\n    @media print {\n        @page { size: landscape; }\n        .print-only {\n            display: inline;\n        }\n        .page-break {\n            margin-top: 3.5rem;\n            display: block;\n            page-break-before: always;\n        }\n        .no-print {\n            display: none !important;\n            visibility: hidden !important;\n        }\n        .image-container {\n            width: 400px;\n            height: 200px;\n            break-inside: avoid;\n        }\n        a {\n            text-decoration: none;\n            color: ${dark[\"offBlack\"]};\n        }\n        .fa-map-marker-alt {\n            margin-top: -10px !important;\n        }\n        .accordion__button {\n            .fa-plus, .fa-minus {\n                display: none;\n            }\n        }\n        .accordion__panel {\n            display: block;\n        }\n        img + img {\n            margin: 0;\n        }\n        svg + svg {\n            margin-top: -10px;\n        }\n    }\n`;\n\nexport const InnerMapContainer = styled.div`\n    .leaflet-container {\n        height: 450px;\n    }\n`;\n\nconst GreyInnerContainer = styled(InnerContainer)`\n    background: ${light[\"grey\"]};\n    margin-bottom: 15px;\n    &.info {\n        h2 {\n            margin-bottom: 10px;\n        }\n        h3 {\n            font-size: 16px;\n            margin-bottom: 5px;\n        }\n        p {\n            font-size: 16px;\n            color: ${dark[\"grey\"]};\n            margin-top: 0;\n        }\n    }\n`;\n\nexport const AccordionContainer = styled.div`\n    .category-header {\n        margin-bottom: 20px;\n    }\n    h3 {\n        font-size: 16px;\n        color: ${dark[\"grey\"]};\n        margin-bottom: 0;\n    }\n    .accordion__item {\n        -webkit-touch-callout: none;\n        -webkit-user-select: none;\n        -khtml-user-select: none;\n        -moz-user-select: none;\n        -ms-user-select: none;\n        user-select: none;\n        + .accordion__item {\n            margin-top: 15px;\n        }\n        &.hidden-item {\n            margin: 0;\n        }\n    }\n    .accordion__button {\n        display: flex;\n        align-items: center;\n        cursor: pointer;\n        font-size: 19px;\n        font-weight: bold;\n        &::after {\n            display: none;\n            font-family: \"Font Awesome 5 Pro\";\n            font-weight: 900;\n            content: '\\f067';\n        }\n        svg {\n            margin-left: auto;\n            color: #525A5B;\n            font-size: 17px;\n        }\n        &[aria-expanded=\"true\"] {\n            &::after {\n                content: '\\f068';\n            }\n        }\n        i {\n            width: 30px;\n            height: 30px;\n            margin-right: 5px;\n            svg {\n                margin-right: auto;\n                font-size: 16px;\n                color: #fff;\n            }\n        }\n    }\n    .accordion__panel {\n        margin-left: 35px;\n        margin-top: 5px;\n        position: relative;\n        font-size: 16px;\n        color: ${dark[\"grey\"]};\n        &::before {\n            content: '';\n            position: absolute;\n            bottom: 0;\n            left: -20px;\n            width: 1px;\n            height: calc(100% - 5px);\n            background: ${green[\"ghost\"]};\n        }\n    }\n`;\n\nexport const ActionSheetContainer = styled.div`\n    height: auto;\n    padding: 20px;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    @media print {\n        display: none !important;\n        visibility: hidden !important;\n    }\n`;\n\nconst ServiceDetail = () => {\n    const [data, setData] = useState([]);\n    const [demographicData, setDemographicData] = useState([]);\n    const [isLoading, setIsLoading] = useState(true);\n    const {urlParams} = useContext(UrlParamsContext);\n    const {prevUrl, setPrevUrl} = useContext(PrevUrlContext);\n    const {prevUrlParams, setPrevUrlParams} = useContext(PrevUrlParamsContext);\n    const paramsArray = [\"category_explorer\", \"postcode\", \"service_search\", \"support_service\", \"categories\", \"demographic\"];\n    const currentSearch = window.location.search;\n    const storedPostcode = localStorage.getItem(\"postcode\");\n    let paramObj = {};\n\n    useEffect(() => {\n        async function fetchData() {\n            let serviceId = \"\";\n            if (Object.entries(urlParams)[0] && Object.entries(urlParams)[0][0] == \"support_service\" && Object.entries(urlParams)[0][1] !== \"\") {\n                serviceId = parseInt(Object.entries(urlParams)[0][1]);\n            }\n            const getService = await GetServices.getService({id: serviceId, postcode: storedPostcode});\n            setData(getService || []);\n            const getDemographics = await GetTaxonomies.retrieveTaxonomies({vocabulary: \"demographic\"});\n            setDemographicData(getDemographics || []);\n            setIsLoading(false);\n        }\n        fetchData();\n\n        if (prevUrl.length == 0 && prevUrlParams.length == 0) {\n            let prevUrlArray = [\"\"];\n            let prevUrlParamsArray = [{}];\n      \n            // setPrevUrl\n            if (currentSearch) {\n                prevUrlArray.push(currentSearch);\n                setPrevUrl(prevUrlArray);\n            }\n      \n            // setPrevUrlParams\n            createParamObj(currentSearch, paramsArray);\n            prevUrlParamsArray.push(paramObj);\n            setPrevUrlParams(prevUrlParamsArray);\n        }\n\n    }, [setData, setIsLoading]);\n\n    const Desktop = ({ children }) => {\n        const isDesktop = useMediaQuery({ minWidth: 768 })\n        return isDesktop ? children : null\n    }\n\n    const Mobile = ({ children }) => {\n        const isMobile = useMediaQuery({ maxWidth: 767 })\n        return isMobile ? children : null\n    }\n\n    function createParamObj(currentSearch, paramsArray) {\n        const queryParts = currentSearch.substring(1).split(/[&;]/g);\n        const arrayLength = queryParts.length;\n        for (let i = 0; i < arrayLength; i++) {\n            const queryKeyValue = queryParts[i].split(\"=\");\n            if (paramsArray.includes(queryKeyValue[0])) {\n                paramObj[queryKeyValue[0]] = queryKeyValue[1];\n            } \n        }\n    }\n\n    let hero = \"\";\n    if (data.service !== undefined && data.service.images !== undefined && data.service.images.medium.length) {\n        hero = data.service.images.medium;\n    }\n\n    const ref = useRef();\n    const componentRef = useRef();\n \n    const handleOpen = () => {\n        ref.current.open();\n        document.getElementById(\"fss--social-share-overlay\").childNodes[0].style.display = \"block\";\n    }\n\n    const handleClose = () => {\n        ref.current.close();\n        document.getElementById(\"fss--social-share-overlay\").childNodes[0].style.display = \"none\";\n    }\n\n    const serviceArray = [data.service];\n  \n    return isLoading ? (\n            <AppLoading />\n        ) : (\n        <DetailContainer ref={componentRef}>\n            <Desktop>\n                <MapContainer>\n                    <div className=\"page-break\" />\n                    <HackneyMap data={data} />\n                </MapContainer>\n            </Desktop>\n            <Header />\n            <div className=\"service-info\">\n                {hero.length ? (\n                    <div className=\"image-container\">\n                        <img src={hero} alt={data.service.name} />\n                    </div>\n                ) : \"\"}\n                <GreyInnerContainer className=\"info\">\n                    <h2>{data.service.name}</h2>\n                    <p>{data.service.description}</p>\n                    <h3>This is for:</h3>\n                    <p>\n                        {(data.service.demographic.length && data.service.demographic.length === demographicData.length) ? \"Everyone\" : data.service.demographic.map(d => d.name).reduce((prev, curr) => [prev, ', ', curr])}\n                    </p>\n                </GreyInnerContainer>\n                <InnerContainer>\n                    <AccordionContainer>\n                        <div className=\"category-header\">   \n                            <h3>We can help with:</h3>\n                        </div>\n                        <Accordion allowMultipleExpanded preExpanded={['hidden']}>\n                            {data.service.categories.map((category) => {\n                                const categoryIconName = category.name.replaceAll(\" \", \"-\").toLowerCase();\n                                return (\n                                    <AccordionItem key={category.id}>\n                                        <AccordionItemHeading className=\"category-icons\" data-category-icon={categoryIconName}>\n                                            <AccordionItemButton>\n                                                <i><span className=\"hideVisually\">{`Icon for ${category.name} `}</span></i>\n                                                {category.name}\n                                            </AccordionItemButton>\n                                        </AccordionItemHeading>\n                                        <AccordionItemPanel>\n                                            {category.description}\n                                        </AccordionItemPanel>\n                                    </AccordionItem>\n                                );\n                            })}\n                            <AccordionItem key=\"hidden\" uuid=\"hidden\" className=\"hidden-item\" />\n                        </Accordion>\n                    </AccordionContainer>\n                </InnerContainer>\n                <InnerContainer>\n                    <h3>Contact us</h3>\n                    <ul className=\"ul-no-style\">\n                        <li className=\"no-print\"><a className=\"link-button\" href={data.service.contact.website} target=\"_blank\" rel=\"noopener noreferrer\">Visit website</a></li>\n                        <li className=\"print-only\"><a className=\"link-button\" href={data.service.contact.website}>Visit website: {data.service.contact.website}</a></li>\n                        <li><FontAwesomeIcon icon={[\"fas\", \"phone\"]} /><a href={`tel://${data.service.contact.telephone}`}>{data.service.contact.telephone}</a></li>\n                        <li><FontAwesomeIcon icon={[\"fas\", \"envelope\"]} /><a href={`mailto:${data.service.contact.email}`}>{data.service.contact.email}</a></li>\n                    </ul>\n                </InnerContainer>\n                <InnerContainer>\n                    <h3>Referral details</h3>\n                    <ul className=\"ul-no-style\">\n                        <li><FontAwesomeIcon icon={[\"fas\", \"external-link-square-alt\"]} /><a href={data.service.referral.website} target=\"_blank\" rel=\"noopener noreferrer\">Visit website<span className=\"print-only\">: {data.service.referral.website}</span></a></li>\n                        <li><FontAwesomeIcon icon={[\"fas\", \"envelope\"]} /><a href={`mailto:${data.service.referral.email}`}>{data.service.referral.email}</a></li>\n                    </ul>\n                </InnerContainer>\n                <InnerContainer>\n                    <h3>Address</h3>\n                    <ul className=\"ul-no-style\">\n                        {\n                            serviceArray.map((service, index) => {\n                                const locationSorted = service.locations.sort(function (a, b) {\n                                    return parseFloat(a.distance) - parseFloat(b.distance);\n                                });\n                                return locationSorted.map((location, index) =>\n                                    <Address key={index} address={location} />\n                                );\n                            })\n                        }\n                    </ul>\n                </InnerContainer>\n                <Mobile>\n                    <InnerMapContainer className=\"inner-map-container\">\n                        <HackneyMap data={data} />\n                    </InnerMapContainer>\n                </Mobile>\n              <GreyInnerContainer className=\"no-print\">\n                <button onClick={handleOpen} className=\"fss--social-share\">\n                    <FontAwesomeIcon icon={[\"fas\", \"share-square\"]} />\n                    Share\n                </button>\n                <div id=\"fss--social-share-overlay\" onClick={handleClose}>\n                    <ActionSheet ref={ref}>\n                        <ActionSheetContainer>\n                            <h3>Share</h3>\n                            <Share service={data} />\n                        </ActionSheetContainer>\n                    </ActionSheet>\n                </div>\n                <ReactToPrint\n                    trigger={() => <button className=\"print-button\"><FontAwesomeIcon icon={[\"fas\", \"print\"]} />Print</button>}\n                    content={() => componentRef.current}\n                />\n              </GreyInnerContainer>\n              <InnerContainer>\n                <h3>Follow {data.service.name}</h3>\n                <ul className=\"ul-no-style\">\n                    {(data.service.social.facebook) ? <li><FontAwesomeIcon icon={[\"fab\", \"facebook-square\"]} /><a href={data.service.social.facebook} target=\"_blank\" rel=\"noopener noreferrer\">Facebook<span className=\"print-only\">: {data.service.social.facebook}</span></a></li> : \"\"}\n                    {(data.service.social.twitter) ? <li><FontAwesomeIcon icon={[\"fab\", \"twitter-square\"]} /><a href={data.service.social.twitter} target=\"_blank\" rel=\"noopener noreferrer\">Twitter<span className=\"print-only\">: {data.service.social.twitter}</span></a></li> : \"\"}\n                    {(data.service.social.instagram) ? <li><FontAwesomeIcon icon={[\"fab\", \"instagram-square\"]} /><a href={data.service.social.instagram} target=\"_blank\" rel=\"noopener noreferrer\">Instagram<span className=\"print-only\">: {data.service.social.instagram}</span></a></li> : \"\"}\n                    {(data.service.social.linkedin) ? <li><FontAwesomeIcon icon={[\"fab\", \"linkedin\"]} /><a href={data.service.social.linkedin} target=\"_blank\" rel=\"noopener noreferrer\">LinkedIn<span className=\"print-only\">: {data.service.social.linkedin}</span></a></li> : \"\"}\n                </ul>\n              </InnerContainer>\n            </div>\n            \n        </DetailContainer>\n    );\n  };\n\nexport default ServiceDetail;","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport FormError from \"../FormError/FormError\";\nimport {StyledInput} from \"../../util/styled-components/StyledInput\";\n\nconst StyledLabel = styled.label`\n    border: 0;\n    clip: rect(0 0 0 0);\n    height: 1px;\n    margin: -1px;\n    overflow: hidden;\n    padding: 0;\n    position: absolute;\n    whiteSpace: nowrap;\n    width: 1px;\n`;\n\nconst StyledHelp = styled.p``;\n\nconst FormInput = ({\n  id,\n  type,\n  name,\n  label,\n  placeholder,\n  register,\n  defaultValue,\n  autoComplete,\n  required,\n  maxLength,\n  minLength,\n  error,\n  inputRef,\n  validate,\n  help,\n}) => {\n  return (\n    <>\n      {error && error.type === \"required\" && (\n        <FormError error={`${label} is required.`} />\n      )}\n      {error && error.type === \"maxLength\" && (\n        <FormError error=\"Max length exceeded.\" />\n      )}\n      {error && error.type === \"minLength\" && (\n        <FormError\n          error={`${label} must be at least ${minLength} ${\n            type === \"number\" ? \"digits\" : \"characters\"\n          }.`}\n        />\n      )}\n      {error && error.message && <FormError error={error.message} />}\n      <StyledLabel htmlFor={name}>{label}</StyledLabel>\n      {help ? <StyledHelp>{help}</StyledHelp> : \"\"}\n      <StyledInput\n        id={id}\n        aria-label={name}\n        name={name}\n        placeholder={placeholder}\n        type={type}\n        ref={(e) => {\n          register(e, { required, minLength, maxLength, validate });\n          if (inputRef) inputRef.current = e;\n        }}\n        defaultValue={defaultValue}\n        autoComplete={autoComplete}\n        aria-invalid={error ? \"true\" : \"false\"}\n      />\n    </>\n  );\n};\n\nFormInput.propTypes = {\n  id: PropTypes.string,\n  type: PropTypes.string,\n  name: PropTypes.string,\n  label: PropTypes.string,\n  placeholder: PropTypes.string,\n  register: PropTypes.func,\n  defaultValue: PropTypes.string,\n  autoComplete: PropTypes.string,\n  required: PropTypes.bool,\n  maxLength: PropTypes.number,\n  minLength: PropTypes.number,\n  error: PropTypes.object,\n};\n\nexport default FormInput;\n","import React, { useEffect, useState, useContext, useRef } from \"react\";\nimport AppLoading from \"../../AppLoading\";\nimport Header from \"../Header/Header\";\nimport UrlContext from \"../../context/UrlContext/UrlContext\";\nimport PrevUrlContext from \"../../context/PrevUrlContext/PrevUrlContext\";\nimport UrlParamsContext from \"../../context/UrlParamsContext/UrlParamsContext\";\nimport PrevUrlParamsContext from \"../../context/PrevUrlParamsContext/PrevUrlParamsContext\";\nimport FormInput from \"../FormInput/FormInput\";\nimport FormError from \"../FormError/FormError\";\nimport Button from \"../Button/Button\";\nimport { useForm } from \"react-hook-form\";\nimport styled from \"styled-components\";\nimport { postcodeValidator, postcodeValidatorExists } from 'postcode-validator';\nimport history from '../../history';\nimport { dark, red, light } from \"../../settings\";\nimport MapPlaceholder from \"../MapPlaceholder/MapPlaceholder\";\n\nexport const SetPostcodeContainer = styled.div`\n    padding: 20px 15px;\n    position: relative;\n    z-index: 1;\n    background: ${light[\"white\"]};\n    height: 100vh;\n    h2 {\n        font-size: 27px;\n        font-weight: normal;\n        margin-bottom: 10px;\n    }\n    p {\n        font-size: 19px;\n        color: ${dark[\"grey\"]};\n    }\n    input[name=postcode] {\n        border: 2px solid ${dark[\"offBlack\"]};\n        box-sizing: border-box;\n        border-radius: 3px;\n    }\n    span[role=alert] {\n        color: ${red[\"error\"]};\n    }\n`;\n\nconst StyledButton = styled(Button)`\n    width: 100%;\n    border-radius: 3px;\n    border-bottom: 2px solid ${dark[\"black\"]};\n`;\n\nconst SetPostcode = () => {\n    const {url, setUrl} = useContext(UrlContext);\n    const {prevUrl, setPrevUrl} = useContext(PrevUrlContext);\n    const {urlParams, setUrlParams} = useContext(UrlParamsContext);\n    const {prevUrlParams, setPrevUrlParams} = useContext(PrevUrlParamsContext);\n    const [isLoading, setIsLoading] = useState(true);\n    const paramsArray = [\"category_explorer\", \"postcode\" , \"service_search\", \"support_service\"];\n    const { register, handleSubmit, errors, reset } = useForm();\n    const storedPostcode = localStorage.getItem(\"postcode\");\n\n    useEffect(() => {\n        setIsLoading(false);\n    }, [setIsLoading]);\n\n    async function submitForm({ postcode }) {\n        if (isLoading) return;\n        const prevUrlArrayLast = prevUrl[prevUrl.length - 1];\n        const prevUrlParamsArrayLast = prevUrlParams[prevUrlParams.length - 1];\n        \n        const validPostcode = postcodeValidator(postcode, 'UK');\n        if (validPostcode) {\n            localStorage.setItem(\"postcode\", postcode);\n            let push = \"?\" + new URLSearchParams(prevUrlParamsArrayLast).toString().replace(/%2C/g,\"+\");\n            let params = prevUrlParamsArrayLast;\n\n            if (prevUrl.length !== 0 && prevUrlParams.length !== 0) {\n                push = prevUrlArrayLast;\n                params = prevUrlParamsArrayLast;\n\n                // checking if previous page is support_service\n                if (prevUrlParamsArrayLast.support_service !== undefined) {\n                    //\n                } else {\n                // catch all for list services\n                    const ListServicesSearchObj = prevUrlParams.find(ListServicesSearchObj => ListServicesSearchObj.service_search);\n                    let ListServicesPostcodeObj = prevUrlParams.find(ListServicesPostcodeObj => ListServicesPostcodeObj.postcode);\n                    prevUrlParamsArrayLast[\"postcode\"] = postcode;\n                    if (ListServicesSearchObj !== undefined) {\n                    // if service_search exists in prevUrlParams\n                        // replace previous postcode with new value\n                        ListServicesSearchObj.postcode = postcode;\n                        push = \"?\" + new URLSearchParams(ListServicesSearchObj).toString();\n                        push = push.replaceAll(\"=undefined\", \"\");\n                        params = ListServicesSearchObj;\n                    } else if (ListServicesPostcodeObj !== undefined) {\n                    // if postcode exists in prevUrlParams\n                        // replace previous postcode with new value\n                        ListServicesPostcodeObj.postcode = postcode;\n                        push = \"?\" + new URLSearchParams(ListServicesPostcodeObj).toString();\n                        push = push.replaceAll(\"=undefined\", \"\");\n                        params = ListServicesPostcodeObj;\n                    }\n                }\n            }\n\n            history.push(push);\n            setUrl(push);\n            setUrlParams(params);\n        }\n    }\n\n    return (\n        isLoading ? (\n            <AppLoading />\n        ) : (\n            <>\n            <div className=\"\">\n                <Header />\n                <SetPostcodeContainer>    \n                    <h2>Enter full postcode</h2>\n                    <p>This will list services near you</p>\n                    <form onSubmit={handleSubmit(submitForm)} data-testid=\"form\">\n                        <FormInput\n                            label=\"Enter a postcode\"\n                            placeholder=\"Enter full postcode e.g E8 1DY (optional)\"\n                            name=\"postcode\"\n                            register={register}\n                            defaultValue={storedPostcode}\n                            autoComplete=\"off\"\n                            validate={{\n                                pattern: (value) => {\n                                    return (\n                                        postcodeValidator(value, 'UK') ||\n                                        \"Please enter a valid postcode\"\n                                    );\n                                },\n                            }}\n                            error={errors.postcode}\n                        />\n                        <StyledButton type=\"submit\" label=\"Enter postcode\" disabled={isLoading} />\n                    </form>\n                </SetPostcodeContainer>\n                <MapPlaceholder />\n            </div>\n            </>\n        )\n    )\n}\n\nexport default SetPostcode;","import styled from \"styled-components\";\nimport breakpoint from 'styled-components-breakpoint';\nimport { light } from \"../../settings\";\n\nexport const FilterContainer = styled.div`\n    \n    ${breakpoint('md')`\n        position: relative;\n        z-index: 1;\n        background: ${light[\"white\"]};\n        height: 100vh;\n    `}\n    h2 {\n        margin: 30px 15px 15px !important;\n    }\n`;","import styled from \"styled-components\";\nimport breakpoint from 'styled-components-breakpoint';\n\nexport const CheckboxContainer = styled.div`\n    padding: 0 15px 0;\n    ${breakpoint('md')`\n        padding: 0 15px;\n        overflow-y: scroll;\n        height: calc(100vh - 225px);\n    `}\n`;","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport FormError from \"../FormError/FormError\";\n\nconst StyledDiv = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  margin: 20px 0;\n  label {\n    -webkit-touch-callout: none;\n    -webkit-user-select: none;\n    -khtml-user-select: none;\n    -moz-user-select: none;\n    -ms-user-select: none;\n    user-select: none;\n  }\n`;\n\nconst StyledLabel = styled.label`\n  width: 80%;\n  display: block;\n  font-weight: normal;\n  font-size: 19px;\n  margin-left: 10px;\n`;\n\nconst StyledCheckbox = styled.input`\n  width: 20%;\n  display: block;\n  width: 35px;\n  height: 35px;\n  margin-right: 5px;\n`;\n\nconst FormCheckbox = ({\n  name,\n  label,\n  register,\n  required,\n  error,\n  value,\n  onClick = () => {},\n  taxonomyId,\n}) => {\n  return (\n    <>\n      <StyledDiv>\n        <StyledCheckbox\n          name={name}\n          type=\"checkbox\"\n          ref={register({ required })}\n          aria-invalid={error ? \"true\" : \"false\"}\n          value={value}\n          onClick={onClick}\n          data-taxonomy-id={taxonomyId}\n        />\n        <StyledLabel htmlFor={name}>{label}</StyledLabel>\n      </StyledDiv>\n      {error && error.type === \"required\" && (\n        <FormError error=\"This is required\" />\n      )}\n    </>\n  );\n};\n\nFormCheckbox.propTypes = {\n  name: PropTypes.string,\n};\n\nexport default FormCheckbox;\n","import React, { useEffect, useState, useContext, useRef } from \"react\";\nimport AppLoading from \"../../AppLoading\";\nimport GetTaxonomies from \"../../services/GetTaxonomies/GetTaxonomies\";\nimport Header from \"../Header/Header\";\nimport UrlContext from \"../../context/UrlContext/UrlContext\";\nimport PrevUrlContext from \"../../context/PrevUrlContext/PrevUrlContext\";\nimport UrlParamsContext from \"../../context/UrlParamsContext/UrlParamsContext\";\nimport PrevUrlParamsContext from \"../../context/PrevUrlParamsContext/PrevUrlParamsContext\";\nimport FormInput from \"../FormInput/FormInput\";\nimport FormError from \"../FormError/FormError\";\nimport Button from \"../Button/Button\";\nimport { useForm } from \"react-hook-form\";\nimport styled from \"styled-components\";\nimport { postcodeValidator, postcodeValidatorExists } from 'postcode-validator';\nimport history from '../../history';\nimport { dark, red, light } from \"../../settings\";\nimport {FilterContainer} from \"../../util/styled-components/FilterContainer\";\nimport {CheckboxContainer} from \"../../util/styled-components/CheckboxContainer\";\nimport FormCheckbox from \"../FormCheckbox/FormCheckbox\";\nimport ServiceFilter from '../ServiceFilter/ServiceFilter';\nimport MapPlaceholder from \"../MapPlaceholder/MapPlaceholder\";\n\nconst StyledButton = styled(Button)`\n    width: 100%;\n    border-radius: 3px;\n    border-bottom: 2px solid ${dark[\"black\"]};\n`;\n\nconst SelectCategories = () => {\n    const [data, setData] = useState([]);\n    const {url, setUrl} = useContext(UrlContext);\n    const {prevUrl, setPrevUrl} = useContext(PrevUrlContext);\n    const {urlParams, setUrlParams} = useContext(UrlParamsContext);\n    const {prevUrlParams, setPrevUrlParams} = useContext(PrevUrlParamsContext);\n    const [isLoading, setIsLoading] = useState(true);\n    const paramsArray = [\"category_explorer\", \"postcode\" , \"service_search\", \"support_service\"];\n    const storedPostcode = localStorage.getItem(\"postcode\");\n    const currentSearch = window.location.search;    \n    const prevUrlArrayLast = prevUrl[prevUrl.length - 1];\n    const prevUrlParamsArrayLast = prevUrlParams[prevUrlParams.length - 1];\n\n    let defaultValues = {\n        checkbox: \"\",\n    };\n\n    let selectedObj = {};\n    if (prevUrlParamsArrayLast !== undefined) {\n        for (const [key, value] of Object.entries(prevUrlParamsArrayLast)) {\n            if (key == \"categories\" && value !== \"\") {\n                if (Array.isArray(value) && value.length >= 1) {\n                    selectedObj = value.reduce((a,b)=> (a[b]=true,a),{});\n                }\n                // used if coming from url with categories set\n                if (typeof value === 'string' && value.indexOf(\"+\") > -1) {\n                    value = value.split(\"+\");\n                    selectedObj = value.reduce((a,b)=> (a[b]=true,a),{});\n                }\n                if (typeof value === 'string' && value.indexOf(\"+\") === -1) {\n                    selectedObj[value] = true;\n                }\n            }\n        }\n    }\n    defaultValues = selectedObj;\n\n    const { register, handleSubmit } = useForm({\n        defaultValues: defaultValues,\n    });\n\n    useEffect(() => {\n        async function fetchData() {\n            const getCategories = await GetTaxonomies.retrieveTaxonomies({vocabulary: \"category\"});\n            setData(getCategories || []);\n            setIsLoading(false);\n        }\n    \n        // if directly accessing this page redirect user back to home\n        if (prevUrl.length == 0 && prevUrlParams.length == 0) {\n            history.push(\"?\");\n            setUrl(\"\");\n            setUrlParams({});\n        } else {\n            fetchData();\n        }\n    \n    }, [setData, setIsLoading]);\n\n    async function submitForm() {\n        if (isLoading) return;\n\n        let categoriesArray = [];\n        let checkboxes = document.querySelectorAll('input[type=checkbox]:checked');\n\n        for (let i = 0; i < checkboxes.length; i++) {\n            categoriesArray.push(checkboxes[i].value);\n        }\n\n        if (categoriesArray.length === 0) {\n            delete prevUrlParamsArrayLast[\"categories\"];\n            let push = \"?\" + new URLSearchParams(prevUrlParamsArrayLast).toString().replace(/%2C/g,\"+\").replace(/%2B/g,\"+\");\n            push = push.replaceAll(\"=undefined\", \"\");\n            history.push(push);\n            setUrl(push);\n            setUrlParams(prevUrlParamsArrayLast);\n        } else {\n            prevUrlParamsArrayLast[\"categories\"] = categoriesArray;\n            let push = \"?\" + new URLSearchParams(prevUrlParamsArrayLast).toString().replace(/%2C/g,\"+\").replace(/%2B/g,\"+\");\n            push = push.replaceAll(\"=undefined\", \"\");\n            history.push(push);\n            setUrl(push);\n            setUrlParams(prevUrlParamsArrayLast);\n        }\n    }\n\n    return (\n        isLoading ? (\n            <AppLoading />\n        ) : (\n            <>\n            <FilterContainer>\n                <Header />\n                <ServiceFilter />\n                <h2>Select categories</h2>\n                <form onSubmit={handleSubmit(submitForm)} data-testid=\"form\">\n                    <CheckboxContainer>\n                        {data.map((category, index) => {\n                            const categoryIdString = category.id.toString();\n                            return (\n                                <FormCheckbox\n                                    key={index}\n                                    taxonomyId={category.id}\n                                    type=\"checkbox\"\n                                    label={category.name}\n                                    name={categoryIdString}\n                                    register={register}\n                                    value={category.id}\n                                />\n                            );\n                        })}\n                        <StyledButton type=\"submit\" label=\"Select categories\" disabled={isLoading} />\n                    </CheckboxContainer>\n                </form>\n            </FilterContainer>\n            <MapPlaceholder />\n            </>\n        )\n    )\n}\n\nexport default SelectCategories;","import React, { useEffect, useState, useContext, useRef } from \"react\";\nimport AppLoading from \"../../AppLoading\";\nimport GetTaxonomies from \"../../services/GetTaxonomies/GetTaxonomies\";\nimport Header from \"../Header/Header\";\nimport UrlContext from \"../../context/UrlContext/UrlContext\";\nimport PrevUrlContext from \"../../context/PrevUrlContext/PrevUrlContext\";\nimport UrlParamsContext from \"../../context/UrlParamsContext/UrlParamsContext\";\nimport PrevUrlParamsContext from \"../../context/PrevUrlParamsContext/PrevUrlParamsContext\";\nimport FormInput from \"../FormInput/FormInput\";\nimport FormError from \"../FormError/FormError\";\nimport Button from \"../Button/Button\";\nimport { useForm } from \"react-hook-form\";\nimport styled from \"styled-components\";\nimport { postcodeValidator, postcodeValidatorExists } from 'postcode-validator';\nimport history from '../../history';\nimport { dark, red, light } from \"../../settings\";\nimport {FilterContainer} from \"../../util/styled-components/FilterContainer\";\nimport {CheckboxContainer} from \"../../util/styled-components/CheckboxContainer\";\nimport FormCheckbox from \"../FormCheckbox/FormCheckbox\";\nimport ServiceFilter from '../ServiceFilter/ServiceFilter';\nimport MapPlaceholder from \"../MapPlaceholder/MapPlaceholder\";\n\nconst StyledButton = styled(Button)`\n    width: 100%;\n    border-radius: 3px;\n    border-bottom: 2px solid ${dark[\"black\"]};\n`;\n\nconst SelectDemographics = () => {\n    const [data, setData] = useState([]);\n    const {url, setUrl} = useContext(UrlContext);\n    const {prevUrl, setPrevUrl} = useContext(PrevUrlContext);\n    const {urlParams, setUrlParams} = useContext(UrlParamsContext);\n    const {prevUrlParams, setPrevUrlParams} = useContext(PrevUrlParamsContext);\n    const [isLoading, setIsLoading] = useState(true);\n    const paramsArray = [\"category_explorer\", \"postcode\" , \"service_search\", \"support_service\"];\n    const storedPostcode = localStorage.getItem(\"postcode\");\n    const currentSearch = window.location.search;    \n    const prevUrlArrayLast = prevUrl[prevUrl.length - 1];\n    const prevUrlParamsArrayLast = prevUrlParams[prevUrlParams.length - 1];\n    \n    let defaultValues = {\n        checkbox: \"\",\n    };\n\n    let selectedObj = {};\n    if (prevUrlParamsArrayLast !== undefined) {\n        for (const [key, value] of Object.entries(prevUrlParamsArrayLast)) {\n            if (key == \"demographic\" && value !== \"\") {\n                if (Array.isArray(value) && value.length >= 1) {\n                    selectedObj = value.reduce((a,b)=> (a[b]=true,a),{});\n                }\n                // used if coming from url with demographic set\n                if (typeof value === 'string' && value.indexOf(\"+\") > -1) {\n                    value = value.split(\"+\");\n                    selectedObj = value.reduce((a,b)=> (a[b]=true,a),{});\n                }\n                if (typeof value === 'string' && value.indexOf(\"+\") === -1) {\n                    selectedObj[value] = true;\n                }\n            }\n        }\n    }\n    defaultValues = selectedObj;\n\n    const { register, handleSubmit } = useForm({\n        defaultValues: defaultValues,\n    });\n\n    useEffect(() => {\n        async function fetchData() {\n            const getDemographics = await GetTaxonomies.retrieveTaxonomies({vocabulary: \"demographic\"});\n            setData(getDemographics || []);\n            setIsLoading(false);\n        }\n    \n        // if directly accessing this page redirect user back to home\n        if (prevUrl.length == 0 && prevUrlParams.length == 0) {\n            history.push(\"?\");\n            setUrl(\"\");\n            setUrlParams({});\n        } else {\n            fetchData();\n        }\n    \n    }, [setData, setIsLoading]);\n\n    async function submitForm() {\n        if (isLoading) return;\n\n        let demographicsArray = [];\n        let checkboxes = document.querySelectorAll('input[type=checkbox]:checked');\n\n        for (let i = 0; i < checkboxes.length; i++) {\n            demographicsArray.push(checkboxes[i].value);\n        }\n\n        if (demographicsArray.length === 0) {\n            delete prevUrlParamsArrayLast[\"demographic\"];\n            let push = \"?\" + new URLSearchParams(prevUrlParamsArrayLast).toString().replace(/%2C/g,\"+\").replace(/%2B/g,\"+\");\n            push = push.replaceAll(\"=undefined\", \"\");\n            history.push(push);\n            setUrl(push);\n            setUrlParams(prevUrlParamsArrayLast);\n        } else {\n            prevUrlParamsArrayLast[\"demographic\"] = demographicsArray;\n            let push = \"?\" + new URLSearchParams(prevUrlParamsArrayLast).toString().replace(/%2C/g,\"+\").replace(/%2B/g,\"+\");\n            push = push.replaceAll(\"=undefined\", \"\");\n            history.push(push);\n            setUrl(push);\n            setUrlParams(prevUrlParamsArrayLast);\n        }\n    }\n\n    return (\n        isLoading ? (\n            <AppLoading />\n        ) : (\n            <>\n            <FilterContainer>\n                <Header />\n                <ServiceFilter />\n                <h2>Select demographics</h2>\n                <form onSubmit={handleSubmit(submitForm)} data-testid=\"form\">\n                    <CheckboxContainer>\n                        {data.map((demographic, index) => {\n                            const demographicIdString = demographic.id.toString();\n                            return (\n                                <FormCheckbox\n                                    key={index}\n                                    taxonomyId={demographic.id}\n                                    type=\"checkbox\"\n                                    label={demographic.name}\n                                    name={demographicIdString}\n                                    register={register}\n                                    value={demographic.id}\n                                />\n                            );\n                        })}\n                        <StyledButton type=\"submit\" label=\"Select filters\" disabled={isLoading} />\n                    </CheckboxContainer>\n                </form>\n            </FilterContainer>\n            <MapPlaceholder />\n            </>\n        )\n    )\n}\n\nexport default SelectDemographics;","import React, { useEffect, useState, useContext, useRef } from \"react\";\nimport AppLoading from \"../../AppLoading\";\nimport UrlContext from \"../../context/UrlContext/UrlContext\";\nimport UrlParamsContext from \"../../context/UrlParamsContext/UrlParamsContext\";\nimport PrevUrlParamsContext from \"../../context/PrevUrlParamsContext/PrevUrlParamsContext\";\nimport history from '../../history';\n\nconst ServiceSearchProcess = () => {\n    const {url, setUrl} = useContext(UrlContext);\n    const {urlParams, setUrlParams} = useContext(UrlParamsContext);\n    const {prevUrlParams, setPrevUrlParams} = useContext(PrevUrlParamsContext);\n    const prevUrlParamsArrayLast = prevUrlParams[prevUrlParams.length - 1];\n    const searchValue = prevUrlParamsArrayLast[\"service_search\"];\n    \n    prevUrlParamsArrayLast[\"service_search\"] = searchValue;\n    let push = \"?\" + new URLSearchParams(prevUrlParamsArrayLast).toString().replace(/%2520/g,\"\");\n    push = push.replaceAll(\"=undefined\", \"\");\n    history.push(push);\n    setUrl(push);\n    setUrlParams(prevUrlParamsArrayLast);\n    \n    return (\n        <AppLoading />\n    );\n}\n\nexport default ServiceSearchProcess;","import React, { useEffect, useState } from 'react';\nimport GetTaxonomies from \"../../services/GetTaxonomies/GetTaxonomies\";\nimport CategoryCard from \"./CategoryCard\";\nimport { CardContainer } from \"../../util/styled-components/CardContainer\";\nimport styled from \"styled-components\";\nimport breakpoint from 'styled-components-breakpoint';\nimport { light } from \"../../settings\";\n\nexport const ListCategoriesContainer = styled.div`\n    ${breakpoint('md')`\n      position: relative;\n      top: 216px;\n      z-index: 2;\n      background: ${light[\"white\"]};\n    `}\n`;\n\nconst ListCategories = ({ categories = [], onClick }) => {\n  const [data, setData] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n\n  useEffect(() => {\n    async function fetchData() {\n      const getCategories = await GetTaxonomies.retrieveTaxonomies({vocabulary: \"category\"});\n      setData(getCategories || []);\n      setIsLoading(false); \n    }\n    fetchData();\n\n  }, [setData, setIsLoading]);\n\n\n  if (isLoading) {\n    return <span>Loading</span>;\n  }\n\n  const select = e => {\n    onClick(e);\n  }\n\n  return(\n    <ListCategoriesContainer id=\"list-categories--container\">\n      {!data.length ? (\n        <h2>No data Found</h2>\n      ) : (\n        <CardContainer>\n          <h3>Explore categories</h3>\n          {data.map(category => {\n            return (\n              <CategoryCard\n                key={category.id}\n                category={category}\n                onClick={select}\n              />\n            );\n          })}\n        </CardContainer>\n      )}\n    </ListCategoriesContainer>\n  );\n\n}\n\nexport default ListCategories;","import React, { useEffect, useState, useContext, useRef } from \"react\";\nimport AppLoading from \"../../AppLoading\";\nimport ListCategories from \"../Category/ListCategories\";\nimport UrlContext from \"../../context/UrlContext/UrlContext\";\nimport PrevUrlContext from \"../../context/PrevUrlContext/PrevUrlContext\";\nimport UrlParamsContext from \"../../context/UrlParamsContext/UrlParamsContext\";\nimport PrevUrlParamsContext from \"../../context/PrevUrlParamsContext/PrevUrlParamsContext\";\nimport FormInput from \"../FormInput/FormInput\";\nimport FormInputSubmit from \"../FormInputSubmit/FormInputSubmit\";\nimport Button from \"../Button/Button\";\nimport { useForm } from \"react-hook-form\";\nimport { useQueryParams, NumberParam } from 'use-query-params';\nimport styled from \"styled-components\";\nimport { postcodeValidator, postcodeValidatorExists } from 'postcode-validator';\nimport history from '../../history';\nimport MapPlaceholder from \"../MapPlaceholder/MapPlaceholder\";\nimport { green, light } from \"../../settings\";\nimport breakpoint from 'styled-components-breakpoint';\n\nconst HomeHeader = styled.div`\n    padding: 25px 15px 10px;\n    background: ${green[\"main\"]};\n    z-index: 1;\n    ${breakpoint('md')`\n        position: absolute;\n    `}\n    h2 {\n        color: ${light[\"white\"]};\n        font-weight: normal;\n        font-size: 36px;\n        letter-spacing: -0.0175em;\n        margin-bottom: 15px;\n    }\n`;\n\nconst Home = () => {\n    const {url, setUrl} = useContext(UrlContext);\n    const {prevUrl, setPrevUrl} = useContext(PrevUrlContext);\n    const {urlParams, setUrlParams} = useContext(UrlParamsContext);\n    const {prevUrlParams, setPrevUrlParams} = useContext(PrevUrlParamsContext);\n    const [{ category_explorer }, setQuery] = useQueryParams({ category_explorer: NumberParam });\n    const [isLoading, setIsLoading] = useState(true);\n    const paramsArray = [\"category_explorer\", \"postcode\", \"service_search\", \"support_service\", \"categories\", \"demographic\"];\n    const { register, handleSubmit, errors, reset } = useForm();\n    const postcodeRef = useRef();\n    const currentSearch = window.location.search;\n    const storedPostcode = localStorage.getItem(\"postcode\");\n    let prevUrlArray = [\"\"];\n    let paramObj = {};\n    let prevUrlParamsArray = [{}];\n\n    function createParamObj(currentSearch, paramsArray) {\n        const queryParts = currentSearch.substring(1).split(/[&;]/g);\n        const arrayLength = queryParts.length;\n        for (let i = 0; i < arrayLength; i++) {\n            const queryKeyValue = queryParts[i].split(\"=\");\n            if (paramsArray.includes(queryKeyValue[0])) {\n                paramObj[queryKeyValue[0]] = queryKeyValue[1];\n            } \n        }\n    }\n\n    const storeQuery = (e) => {\n        const currentSearch = window.location.search;\n        if (currentSearch) {\n            setUrl(currentSearch);\n            createParamObj(currentSearch, paramsArray);\n            \n            setUrlParams(paramObj);\n        }\n        setIsLoading(false);\n    }\n\n    const setPreviousUrls = (currentSearch) => {\n        if (currentSearch) {\n            setUrl(currentSearch);\n\n            // setPrevUrl\n            prevUrlArray.push(currentSearch);\n            setPrevUrl(prevUrlArray);\n\n            // setPrevUrlParams\n            createParamObj(currentSearch, paramsArray);\n            prevUrlParamsArray.push(paramObj);\n            setPrevUrlParams(prevUrlParamsArray);\n            \n        }\n    }\n\n    useEffect(() => {\n        setIsLoading(false);\n    }, [setIsLoading]);\n\n    const handleEvent = e => {\n        setQuery({ category_explorer: ~~ e }, 'pushIn');\n        storeQuery();\n        const currentSearch = window.location.search;\n        setPreviousUrls(currentSearch);\n        \n    };\n\n    async function submitForm({ postcode, service_search }) {\n        if (isLoading) return;\n\n        const postcodeValue = document.forms[\"fss--find-service\"][\"postcode\"].value;\n        const searchValue = document.forms[\"fss--find-service\"][\"service_search\"].value;\n        const validPostcode = postcodeValidator(postcode, 'UK');\n\n        if (postcodeValue !== \"\" && searchValue !== \"\") {\n            if (validPostcode) {\n                history.push(\"?postcode=\" + postcode + \"&service_search=\" + service_search);\n                const currentSearch = window.location.search;   \n                setPreviousUrls(currentSearch);\n                setUrlParams({postcode: postcode, service_search: service_search});\n            } else {\n                let node = document.createElement(\"p\");\n                let textNode = document.createTextNode(\"Please enter a valid postcode\");\n                node.appendChild(textNode);\n                document.getElementById(\"postcode-input-container\").appendChild(node);\n            }\n        } else if (postcodeValue !== \"\") {\n            if (validPostcode) {\n                localStorage.setItem(\"postcode\", postcode);\n                history.push(\"?postcode=\" + postcode + \"&service_search\");\n                const currentSearch = window.location.search;\n                setPreviousUrls(currentSearch);\n                setUrlParams({postcode: postcode, service_search: undefined});\n            } else {\n                let node = document.createElement(\"p\");\n                node.className = \"postcode-validation-error-message\";\n                let textNode = document.createTextNode(\"Please enter a valid postcode\");\n                node.appendChild(textNode);\n\n                let pList = document.getElementsByTagName(\"p\");\n                for(var i=pList.length-1; i>=0; i--){\n                    let p = pList[i];\n                    if(p.className === \"postcode-validation-error-message\"){\n                        p.parentNode.removeChild(p);\n                    }\n                }\n\n                document.getElementById(\"postcode-input-container\").appendChild(node);\n                document.getElementById(\"list-categories--container\").style.top = \"258px\";\n                document.getElementById(\"list-categories--container\").firstChild.style.height = \"calc(100vh - 300px)\";\n            }\n            \n        } else if (searchValue !== \"\") {\n            history.push(\"?postcode&service_search=\" + service_search);\n            const currentSearch = window.location.search;\n            setPreviousUrls(currentSearch);\n            setUrlParams({postcode: undefined, service_search: service_search});\n            localStorage.removeItem('postcode');\n        }\n    }\n\n    return (\n        isLoading ? (\n            <AppLoading />\n        ) : (\n            <>\n            <div className=\"Home\">\n                <HomeHeader>\n                    <h2>Find support services</h2>\n                    <form id=\"fss--find-service\" onSubmit={handleSubmit(submitForm)} data-testid=\"form\">\n                        <div id=\"postcode-input-container\">\n                            <FormInput\n                                id=\"fss--postcode\"\n                                label=\"Enter a postcode\"\n                                placeholder=\"Enter full postcode e.g E8 1DY (optional)\"\n                                name=\"postcode\"\n                                inputRef={postcodeRef}\n                                register={register}\n                                defaultValue={storedPostcode}\n                                autoComplete=\"off\"\n                            />\n                        </div>\n                        <FormInputSubmit\n                            id=\"fss--service-search\"\n                            label=\"Search for a service\"\n                            placeholder=\"Enter keyword or organisation\"\n                            name=\"service_search\"\n                            type=\"text\"\n                            register={register}\n                        />\n                    </form>\n                </HomeHeader>\n                <ListCategories onClick={handleEvent} />\n                <MapPlaceholder />\n            </div>\n            </>\n        )\n    )\n}\n\nexport default Home;\n","import React, { useState, useContext, useEffect, useMemo } from \"react\";\nimport CategoryExplorer from \"../Category/CategoryExplorer\";\nimport ListServices from \"../Service/ListServices\";\nimport ServiceDetail from \"../Service/ServiceDetail\";\nimport SetPostcode from \"../Postcode/SetPostcode\";\nimport SelectCategories from \"../SelectCategories/SelectCategories\";\nimport SelectDemographics from \"../SelectDemographics/SelectDemographics\";\nimport AppLoading from \"../../AppLoading\";\nimport UrlContext from \"../../context/UrlContext/UrlContext\";\nimport PrevUrlContext from \"../../context/PrevUrlContext/PrevUrlContext\";\nimport UrlParamsContext from \"../../context/UrlParamsContext/UrlParamsContext\";\nimport PrevUrlParamsContext from \"../../context/PrevUrlParamsContext/PrevUrlParamsContext\";\nimport ServiceSearchProcess from '../ServiceSearch/ServiceSearchProcess';\nimport Home from \"../Home/Home\";\nimport { useQueryParams, NumberParam } from 'use-query-params';\nimport history from '../../history';\nwindow.FontAwesomeConfig = { searchPseudoElements: true };\n\nconst RouteContainer = (props) => {\n    const {url, setUrl} = useContext(UrlContext);\n    const {prevUrl, setPrevUrl} = useContext(PrevUrlContext);\n    const {urlParams, setUrlParams} = useContext(UrlParamsContext);\n    const {prevUrlParams, setPrevUrlParams} = useContext(PrevUrlParamsContext);\n    const [isLoading, setIsLoading] = useState(true);\n    const [page, setPage] = useState(null);\n    const [{ service }, setQuery] = useQueryParams({ support_service: NumberParam });\n    const removeQuery = [\"category_explorer\", \"postcode\", \"service_search\", \"categories\", \"demographic\"];\n    const paramsArray = [...removeQuery, \"support_service\"];\n\n    useEffect(() => {\n        async function checkQuery() {\n            for (const [key, value] of Object.entries(urlParams)) {\n                if (key == \"category_explorer\" && value !== \"\") {\n                    setPage(\"CategoryExplorer\");\n                } else if (key == \"support_service\" && value !== \"\") {\n                    setPage(\"ServiceDetail\");\n                } else if (key == \"postcode\" && value !== \"\" || key == \"service_search\" && value !== \"\") {\n                    setPage(\"ListServices\");\n                } else if (key == \"service_search_process\" && value == \"true\") {\n                    setPage(\"ServiceSearchProcess\");\n                } else if (key == \"set_postcode\" && value == \"true\") {\n                    setPage(\"SetPostcode\");\n                } else if (key == \"select_categories\" && value == \"true\") {\n                    setPage(\"SelectCategories\");\n                } else if (key == \"select_demographics\" && value == \"true\") {\n                    setPage(\"SelectDemographics\");\n                }\n            }\n        }\n        checkQuery();\n        setIsLoading(false);\n    });\n\n    const ServiceCardEvent = e => {\n        const serviceArray = [];\n        const urlArray = url.substring(1).split(/[&;]/g);\n        let prevUrlArray = prevUrl;\n        let prevUrlParamsArray = prevUrlParams;\n\n        for (const [key, value] of Object.entries(urlParams)) {\n            if (removeQuery.includes(key)) {\n                if (value) {\n                    const urlParamsString = key + \"=\" + value;\n                    serviceArray.push(urlParamsString);\n                } else {\n                    const urlParamsString = key;\n                    serviceArray.push(urlParamsString);\n                }\n            }\n        }\n\n        let newServiceUrl = urlArray.filter(val => !serviceArray.includes(val)).join(\"&\");\n        if (newServiceUrl !== \"\") newServiceUrl = \"&\" + newServiceUrl;\n        const updatedUrl = \"?support_service=\" + e;\n        const newServiceObj = {support_service: e.toString()};\n        history.push(updatedUrl);\n\n        setUrl(updatedUrl);\n        setPage(\"ServiceDetail\");\n        setUrlParams(newServiceObj);\n\n        prevUrlArray.push(updatedUrl);\n        setPrevUrl(prevUrlArray);\n\n        // setPrevUrlParams\n        prevUrlParamsArray.push(newServiceObj);\n        setPrevUrlParams(prevUrlParamsArray);\n    };\n\n    return (\n        isLoading ? ( <AppLoading /> ) :\n        (\n            ( page == \"CategoryExplorer\" ) ? <CategoryExplorer onClick={ ServiceCardEvent} /> :\n            ( page == \"ServiceDetail\" ) ? <ServiceDetail service={service} /> :\n            ( page == \"ServiceSearchProcess\") ? <ServiceSearchProcess /> :\n            ( page == \"ListServices\") ? <ListServices onClick={ ServiceCardEvent} /> :\n            ( page == \"SetPostcode\") ? <SetPostcode /> :\n            ( page == \"SelectCategories\") ? <SelectCategories /> :\n            ( page == \"SelectDemographics\") ? <SelectDemographics /> :\n            <Home />\n        )   \n    )\n}\n\nexport default RouteContainer;","import { createGlobalStyle } from \"styled-components\";\nimport { defaultTheme, blue, green, dark, light, red, category } from \"../../settings\";\nimport { normalize } from \"polished\";\nimport openSansV17Latin700Ttf from \"../../fonts/open-sans-v17-latin/open-sans-v17-latin-700.ttf\";\nimport openSansV17Latin700Woff from \"../../fonts/open-sans-v17-latin/open-sans-v17-latin-700.woff\";\nimport openSansV17Latin700Woff2 from \"../../fonts/open-sans-v17-latin/open-sans-v17-latin-700.woff2\";\nimport openSansV17LatinRegularTtf from \"../../fonts/open-sans-v17-latin/open-sans-v17-latin-regular.ttf\";\nimport openSansV17LatinRegularWoff from \"../../fonts/open-sans-v17-latin/open-sans-v17-latin-regular.woff\";\nimport openSansV17LatinRegularWoff2 from \"../../fonts/open-sans-v17-latin/open-sans-v17-latin-regular.woff2\";\nimport { darken } from \"polished\";\nimport breakpoint from 'styled-components-breakpoint';\nimport \"@fortawesome/fontawesome-pro/js/all\";\n\nexport const GlobalStyle = createGlobalStyle`\n${normalize()}\nhtml {\n  box-sizing: border-box;\n  font-size: 16px;\n}\n*, *:before, *:after {\n  box-sizing: inherit;\n}\nbody {\n  margin: 0;\n  padding: 0;\n  font-family: ${defaultTheme.primaryFont};\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  overflow-x: hidden;\n}\n\n/* erw-root */\n#erw-root {\n  overflow: auto;\n  * {\n\t\tmargin-top: unset;\n\t}\n\tp:not(.card--description) {\n\t\tmargin-bottom: 1em !important;\n\t}\n\tp, h1, h2, h3, h4, h5, h6 {\n\t\tline-height: 1.25;\n\t}\n\tp, button, li {\n\t\tfont-weight: 400;\n\t}\n}\n\n@font-face {\n  font-family: 'Open Sans';\n  font-style: normal;\n  font-weight: 400;\n  src: local('Open Sans Regular'), local('OpenSans-Regular'),\n    url(${openSansV17LatinRegularWoff2}) format('woff2'),\n    url(${openSansV17LatinRegularWoff}) format('woff'),\n    url(${openSansV17LatinRegularTtf}) format('truetype');\n}\n\n@font-face {\n  font-family: 'Open Sans';\n  font-style: normal;\n  font-weight: 700;\n  src: local('Open Sans Regular'), local('OpenSans-Regular'),\n    url(${openSansV17Latin700Woff2}) format('woff2'),\n    url(${openSansV17Latin700Woff}) format('woff'),\n    url(${openSansV17Latin700Ttf}) format('truetype');\n}\n\nh1, h2, h3, h4, h5, h6 {\n  margin-top: 0;\n  margin-bottom: 1em;\n}\n\np {\n  line-height: 1.25 !important;\n  font-weight: normal !important;\n}\n\na {\n  color: ${blue[\"link\"]};\n\n  &:hover {\n    color: ${darken(0.1, blue[\"link\"])};\n  }\n}\n\nul.ul-no-style {\n  list-style: none;\n  padding-left: 0;\n  li {\n    + li {\n      margin-top: 15px !important;\n    }\n    svg {\n      margin-right: 5px;\n    }\n  }\n}\n\nhr {\n  border: 2px solid ${dark[\"black\"]};\n  margin: 30px 0;\n}\n\n.hideVisually {\n  border: 0;\n  clip: rect(0 0 0 0);\n  height: 1px;\n  margin: -1px;\n  overflow: hidden;\n  padding: 0;\n  position: absolute;\n  whiteSpace: nowrap;\n  width: 1px;\n}\n\n@media print {\n  @page {\n    margin: 10mm;\n  }\n  .print-only {\n      display: inline;\n  }\n  .page-break {\n      margin-top: 3.5rem;\n      display: block;\n      page-break-before: always;\n  }\n  .no-print {\n      display: none !important;\n      visibility: hidden !important;\n  }\n}\n\n.App {\n  position: relative;\n  ${breakpoint('sm')`\n      \n  `}\n  ${breakpoint('md')`\n    \n  `}\n}\n\n.no-results {\n\tpadding: 20px;\n\tbackground: ${light[\"white\"]};\n\theight: 100vh;\n\tz-index: 1;\n\tposition: relative;\n}\n\n#postcode-input-container {\n  p {\n    color: ${light[\"white\"]};\n    border-left: 4px solid ${red[\"error\"]};\n    padding-left: 10px;\n  }\n}\n\n.category-icons {\n  i {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    border-radius: 100%;\n    margin-right: 10px;\n    padding: 5px;\n    opacity: 0.75;\n    &::before {\n      display: none;\n      font-family: \"Font Awesome 5 Pro\";\n      font-weight: 900;\n      content: \"\\f086\";\n    }\n    svg {\n      font-size: 30px;\n      color: ${light[\"white\"]};\n    }\n  }\n}\n\n[data-category-icon] {\n  svg.fa-map-marker-alt {\n    color: ${category[\"pink\"]};\n  }\n  i {\n      background-color: ${category[\"pink\"]};\n      &::before {\n          content: \"\\f086\";\n      }\n  }\n}\n[data-category-icon=\"loneliness-or-isolation\"] {\n  svg.fa-map-marker-alt {\n    color: ${category[\"pink\"]};\n  }\n  i {\n      background-color: ${category[\"pink\"]};\n      &::before {\n        content: \"\\f086\";\n      }\n  }\n}\n[data-category-icon=\"anxiety-or-mental-health\"] {\n  svg.fa-map-marker-alt {\n    color: ${category[\"orange\"]};\n  }\n  i {\n      background-color: ${category[\"orange\"]};\n      &::before {\n          content: \"\\f808\";\n      }\n  }\n}\n[data-category-icon=\"safe-and-healthy-body\"] {\n  svg.fa-map-marker-alt {\n    color: ${category[\"greenLight\"]};\n  }\n  i {\n      background-color: ${category[\"greenLight\"]};\n      &::before {\n          content: \"\\f21e\";\n      }\n  }\n}\n[data-category-icon=\"exercise-and-wellbeing\"] {\n  svg.fa-map-marker-alt {\n    color: ${category[\"red\"]};\n  }\n  i {\n      background-color: ${category[\"red\"]};\n      &::before {\n          content: \"\\f554\";\n      }\n  }\n}\n[data-category-icon=\"arts-and-creativity\"] {\n  svg.fa-map-marker-alt {\n    color: ${category[\"blueDark\"]};\n  }\n  i {\n      background-color: ${category[\"blueDark\"]};\n      &::before {\n          content: \"\\f53f\";\n      }\n  }\n}\n[data-category-icon=\"food-or-shopping\"] {\n  svg.fa-map-marker-alt {\n    color: ${category[\"green\"]};\n  }\n  i {\n      background-color: ${category[\"green\"]};\n      &::before {\n          content: \"\\f5d1\";\n      }\n  }\n}\n[data-category-icon=\"faith-led-activities\"] {\n  svg.fa-map-marker-alt {\n    color: ${category[\"blue\"]};\n  }\n  i {\n      background-color: ${category[\"blue\"]};\n      &::before {\n          content: \"\\f4be\";\n      }\n  }\n}\n[data-category-icon=\"money-advice\"] {\n  svg.fa-map-marker-alt {\n    color: ${category[\"brown\"]};\n  }\n  i {\n      background-color: ${category[\"brown\"]};\n      &::before {\n          content: \"\\f154\";\n      }\n  }\n}\n[data-category-icon=\"employment-advice\"] {\n  svg.fa-map-marker-alt {\n    color: ${category[\"purple\"]};\n  }\n  i {\n      background-color: ${category[\"purple\"]};\n      &::before {\n          content: \"\\f0f2\";\n      }\n  }\n}\n[data-category-icon=\"housing-advice\"] {\n  svg.fa-map-marker-alt {\n    color: ${category[\"blueLight\"]};\n  }\n  i {\n      background-color: ${category[\"blueLight\"]};\n      &::before {\n          content: \"\";\n      }\n  }\n}\n[data-category-icon=\"immigration-advice\"] {\n  svg.fa-map-marker-alt {\n    color: ${category[\"greenDark\"]};\n  }\n  i {\n      background-color: ${category[\"greenDark\"]};\n      &::before {\n          content: \"\\f129 \";\n      }\n  }\n}\n\n/**\n * Leafleft core styles\n */\n/* required styles */\n\n.leaflet-pane,\n.leaflet-tile,\n.leaflet-marker-icon,\n.leaflet-marker-shadow,\n.leaflet-tile-container,\n.leaflet-pane > svg,\n.leaflet-pane > canvas,\n.leaflet-zoom-box,\n.leaflet-image-layer,\n.leaflet-layer {\n\tposition: absolute;\n\tleft: 0;\n\ttop: 0;\n\t}\n.leaflet-container {\n\toverflow: hidden;\n\t}\n.leaflet-tile,\n.leaflet-marker-icon,\n.leaflet-marker-shadow {\n\t-webkit-user-select: none;\n\t   -moz-user-select: none;\n\t        user-select: none;\n\t  -webkit-user-drag: none;\n\t}\n/* Prevents IE11 from highlighting tiles in blue */\n.leaflet-tile::selection {\n\tbackground: transparent;\n}\n/* Safari renders non-retina tile on retina better with this, but Chrome is worse */\n.leaflet-safari .leaflet-tile {\n\timage-rendering: -webkit-optimize-contrast;\n\t}\n/* hack that prevents hw layers \"stretching\" when loading new tiles */\n.leaflet-safari .leaflet-tile-container {\n\twidth: 1600px;\n\theight: 1600px;\n\t-webkit-transform-origin: 0 0;\n\t}\n.leaflet-marker-icon,\n.leaflet-marker-shadow {\n\tdisplay: block;\n\t}\n/* .leaflet-container svg: reset svg max-width decleration shipped in Joomla! (joomla.org) 3.x */\n/* .leaflet-container img: map is broken in FF if you have max-width: 100% on tiles */\n.leaflet-container .leaflet-overlay-pane svg,\n.leaflet-container .leaflet-marker-pane img,\n.leaflet-container .leaflet-shadow-pane img,\n.leaflet-container .leaflet-tile-pane img,\n.leaflet-container img.leaflet-image-layer,\n.leaflet-container .leaflet-tile {\n\tmax-width: none !important;\n\tmax-height: none !important;\n\t}\n\n.leaflet-container.leaflet-touch-zoom {\n\t-ms-touch-action: pan-x pan-y;\n\ttouch-action: pan-x pan-y;\n\t}\n.leaflet-container.leaflet-touch-drag {\n\t-ms-touch-action: pinch-zoom;\n\t/* Fallback for FF which doesn't support pinch-zoom */\n\ttouch-action: none;\n\ttouch-action: pinch-zoom;\n}\n.leaflet-container.leaflet-touch-drag.leaflet-touch-zoom {\n\t-ms-touch-action: none;\n\ttouch-action: none;\n}\n.leaflet-container {\n\t-webkit-tap-highlight-color: transparent;\n}\n.leaflet-container a {\n\t-webkit-tap-highlight-color: rgba(51, 181, 229, 0.4);\n}\n.leaflet-tile {\n\tfilter: inherit;\n\tvisibility: hidden;\n\t}\n.leaflet-tile-loaded {\n\tvisibility: inherit;\n\t}\n.leaflet-zoom-box {\n\twidth: 0;\n\theight: 0;\n\t-moz-box-sizing: border-box;\n\t     box-sizing: border-box;\n\tz-index: 8;\n\t}\n/* workaround for https://bugzilla.mozilla.org/show_bug.cgi?id=888319 */\n.leaflet-overlay-pane svg {\n\t-moz-user-select: none;\n\t}\n\n.leaflet-pane         { z-index: 4; }\n\n.leaflet-tile-pane    { z-index: 2; }\n.leaflet-overlay-pane { z-index: 4; }\n.leaflet-shadow-pane  { z-index: 5; }\n.leaflet-marker-pane  { z-index: 6; }\n.leaflet-tooltip-pane   { z-index: 7; }\n.leaflet-popup-pane   { z-index: 8; }\n\n.leaflet-map-pane canvas { z-index: 1; }\n.leaflet-map-pane svg    { z-index: 2; }\n\n.leaflet-vml-shape {\n\twidth: 1px;\n\theight: 1px;\n\t}\n.lvml {\n\tbehavior: url(#default#VML);\n\tdisplay: inline-block;\n\tposition: absolute;\n\t}\n\n\n/* control positioning */\n\n.leaflet-control {\n\tposition: relative;\n\tz-index: 8;\n\tpointer-events: visiblePainted; /* IE 9-10 doesn't have auto */\n\tpointer-events: auto;\n\t}\n.leaflet-top,\n.leaflet-bottom {\n\tposition: absolute;\n\tz-index: 4;\n\tpointer-events: none;\n\t}\n.leaflet-top {\n\ttop: 0;\n\t}\n.leaflet-right {\n\tright: 0;\n\t}\n.leaflet-bottom {\n\tbottom: 0;\n\t}\n.leaflet-left {\n\tleft: 0;\n\t}\n.leaflet-control {\n\tfloat: left;\n\tclear: both;\n\t}\n.leaflet-right .leaflet-control {\n\tfloat: right;\n\t}\n.leaflet-top .leaflet-control {\n\tmargin-top: 10px;\n\t}\n.leaflet-bottom .leaflet-control {\n\tmargin-bottom: 10px;\n\t}\n.leaflet-left .leaflet-control {\n\tmargin-left: 10px;\n\t}\n.leaflet-right .leaflet-control {\n\tmargin-right: 10px;\n\t}\n\n\n/* zoom and fade animations */\n\n.leaflet-fade-anim .leaflet-tile {\n\twill-change: opacity;\n\t}\n.leaflet-fade-anim .leaflet-popup {\n\topacity: 0;\n\t-webkit-transition: opacity 0.2s linear;\n\t   -moz-transition: opacity 0.2s linear;\n\t        transition: opacity 0.2s linear;\n\t}\n.leaflet-fade-anim .leaflet-map-pane .leaflet-popup {\n\topacity: 1;\n\t}\n.leaflet-zoom-animated {\n\t-webkit-transform-origin: 0 0;\n\t    -ms-transform-origin: 0 0;\n\t        transform-origin: 0 0;\n\t}\n.leaflet-zoom-anim .leaflet-zoom-animated {\n\twill-change: transform;\n\t}\n.leaflet-zoom-anim .leaflet-zoom-animated {\n\t-webkit-transition: -webkit-transform 0.25s cubic-bezier(0,0,0.25,1);\n\t   -moz-transition:    -moz-transform 0.25s cubic-bezier(0,0,0.25,1);\n\t        transition:         transform 0.25s cubic-bezier(0,0,0.25,1);\n\t}\n.leaflet-zoom-anim .leaflet-tile,\n.leaflet-pan-anim .leaflet-tile {\n\t-webkit-transition: none;\n\t   -moz-transition: none;\n\t        transition: none;\n\t}\n\n.leaflet-zoom-anim .leaflet-zoom-hide {\n\tvisibility: hidden;\n\t}\n\n\n/* cursors */\n\n.leaflet-interactive {\n\tcursor: pointer;\n\t}\n.leaflet-grab {\n\tcursor: -webkit-grab;\n\tcursor:    -moz-grab;\n\tcursor:         grab;\n\t}\n.leaflet-crosshair,\n.leaflet-crosshair .leaflet-interactive {\n\tcursor: crosshair;\n\t}\n.leaflet-popup-pane,\n.leaflet-control {\n\tcursor: auto;\n\t}\n.leaflet-dragging .leaflet-grab,\n.leaflet-dragging .leaflet-grab .leaflet-interactive,\n.leaflet-dragging .leaflet-marker-draggable {\n\tcursor: move;\n\tcursor: -webkit-grabbing;\n\tcursor:    -moz-grabbing;\n\tcursor:         grabbing;\n\t}\n\n/* marker & overlays interactivity */\n.leaflet-marker-icon,\n.leaflet-marker-shadow,\n.leaflet-image-layer,\n.leaflet-pane > svg path,\n.leaflet-tile-container {\n\tpointer-events: none;\n\t}\n\n.leaflet-marker-icon.leaflet-interactive,\n.leaflet-image-layer.leaflet-interactive,\n.leaflet-pane > svg path.leaflet-interactive,\nsvg.leaflet-image-layer.leaflet-interactive path {\n\tpointer-events: visiblePainted; /* IE 9-10 doesn't have auto */\n\tpointer-events: auto;\n\t}\n\n/* visual tweaks */\n\n.leaflet-container {\n\tbackground: #ddd;\n\toutline: 0;\n\t}\n.leaflet-container a {\n\tcolor: #0078A8;\n\t}\n.leaflet-container a.leaflet-active {\n\toutline: 2px solid orange;\n\t}\n.leaflet-zoom-box {\n\tborder: 2px dotted #38f;\n\tbackground: rgba(255,255,255,0.5);\n\t}\n\n\n/* general typography */\n.leaflet-container {\n\tfont: 12px/1.5 \"Helvetica Neue\", Arial, Helvetica, sans-serif;\n\t}\n\n\n/* general toolbar styles */\n\n.leaflet-bar {\n\tbox-shadow: 0 1px 5px rgba(0,0,0,0.65);\n\tborder-radius: 4px;\n\t}\n.leaflet-bar a,\n.leaflet-bar a:hover {\n\tbackground-color: #fff;\n\tborder-bottom: 1px solid #ccc;\n\twidth: 26px;\n\theight: 26px;\n\tline-height: 26px;\n\tdisplay: block;\n\ttext-align: center;\n\ttext-decoration: none;\n\tcolor: black;\n\t}\n.leaflet-bar a,\n.leaflet-control-layers-toggle {\n\tbackground-position: 50% 50%;\n\tbackground-repeat: no-repeat;\n\tdisplay: block;\n\t}\n.leaflet-bar a:hover {\n\tbackground-color: #f4f4f4;\n\t}\n.leaflet-bar a:first-child {\n\tborder-top-left-radius: 4px;\n\tborder-top-right-radius: 4px;\n\t}\n.leaflet-bar a:last-child {\n\tborder-bottom-left-radius: 4px;\n\tborder-bottom-right-radius: 4px;\n\tborder-bottom: none;\n\t}\n.leaflet-bar a.leaflet-disabled {\n\tcursor: default;\n\tbackground-color: #f4f4f4;\n\tcolor: #bbb;\n\t}\n\n.leaflet-touch .leaflet-bar a {\n\twidth: 30px;\n\theight: 30px;\n\tline-height: 30px;\n\t}\n.leaflet-touch .leaflet-bar a:first-child {\n\tborder-top-left-radius: 2px;\n\tborder-top-right-radius: 2px;\n\t}\n.leaflet-touch .leaflet-bar a:last-child {\n\tborder-bottom-left-radius: 2px;\n\tborder-bottom-right-radius: 2px;\n\t}\n\n/* zoom control */\n\n.leaflet-control-zoom-in,\n.leaflet-control-zoom-out {\n\tfont: bold 18px 'Lucida Console', Monaco, monospace;\n\ttext-indent: 1px;\n\t}\n\n.leaflet-touch .leaflet-control-zoom-in, .leaflet-touch .leaflet-control-zoom-out  {\n\tfont-size: 22px;\n\t}\n\n\n/* layers control */\n\n.leaflet-control-layers {\n\tbox-shadow: 0 1px 5px rgba(0,0,0,0.4);\n\tbackground: #fff;\n\tborder-radius: 5px;\n\t}\n.leaflet-control-layers-toggle {\n\tbackground-image: url(images/layers.png);\n\twidth: 36px;\n\theight: 36px;\n\t}\n.leaflet-retina .leaflet-control-layers-toggle {\n\tbackground-image: url(images/layers-2x.png);\n\tbackground-size: 26px 26px;\n\t}\n.leaflet-touch .leaflet-control-layers-toggle {\n\twidth: 44px;\n\theight: 44px;\n\t}\n.leaflet-control-layers .leaflet-control-layers-list,\n.leaflet-control-layers-expanded .leaflet-control-layers-toggle {\n\tdisplay: none;\n\t}\n.leaflet-control-layers-expanded .leaflet-control-layers-list {\n\tdisplay: block;\n\tposition: relative;\n\t}\n.leaflet-control-layers-expanded {\n\tpadding: 6px 10px 6px 6px;\n\tcolor: #333;\n\tbackground: #fff;\n\t}\n.leaflet-control-layers-scrollbar {\n\toverflow-y: scroll;\n\toverflow-x: hidden;\n\tpadding-right: 5px;\n\t}\n.leaflet-control-layers-selector {\n\tmargin-top: 2px;\n\tposition: relative;\n\ttop: 1px;\n\t}\n.leaflet-control-layers label {\n\tdisplay: block;\n\t}\n.leaflet-control-layers-separator {\n\theight: 0;\n\tborder-top: 1px solid #ddd;\n\tmargin: 5px -10px 5px -6px;\n\t}\n\n/* Default icon URLs */\n.leaflet-default-icon-path {\n\tbackground-image: url(images/marker-icon.png);\n\t}\n\n\n/* attribution and scale controls */\n\n.leaflet-container .leaflet-control-attribution {\n\tbackground: #fff;\n\tbackground: rgba(255, 255, 255, 0.7);\n\tmargin: 0;\n\t}\n.leaflet-control-attribution,\n.leaflet-control-scale-line {\n\tpadding: 0 5px;\n\tcolor: #333;\n\t}\n.leaflet-control-attribution a {\n\ttext-decoration: none;\n\t}\n.leaflet-control-attribution a:hover {\n\ttext-decoration: underline;\n\t}\n.leaflet-container .leaflet-control-attribution,\n.leaflet-container .leaflet-control-scale {\n\tfont-size: 11px;\n\t}\n.leaflet-left .leaflet-control-scale {\n\tmargin-left: 5px;\n\t}\n.leaflet-bottom .leaflet-control-scale {\n\tmargin-bottom: 5px;\n\t}\n.leaflet-control-scale-line {\n\tborder: 2px solid #777;\n\tborder-top: none;\n\tline-height: 1.1;\n\tpadding: 2px 5px 1px;\n\tfont-size: 11px;\n\twhite-space: nowrap;\n\toverflow: hidden;\n\t-moz-box-sizing: border-box;\n\t     box-sizing: border-box;\n\n\tbackground: #fff;\n\tbackground: rgba(255, 255, 255, 0.5);\n\t}\n.leaflet-control-scale-line:not(:first-child) {\n\tborder-top: 2px solid #777;\n\tborder-bottom: none;\n\tmargin-top: -2px;\n\t}\n.leaflet-control-scale-line:not(:first-child):not(:last-child) {\n\tborder-bottom: 2px solid #777;\n\t}\n\n.leaflet-touch .leaflet-control-attribution,\n.leaflet-touch .leaflet-control-layers,\n.leaflet-touch .leaflet-bar {\n\tbox-shadow: none;\n\t}\n.leaflet-touch .leaflet-control-layers,\n.leaflet-touch .leaflet-bar {\n\tborder: 2px solid rgba(0,0,0,0.2);\n\tbackground-clip: padding-box;\n\t}\n\n\n/* popup */\n\n.leaflet-popup {\n\tposition: absolute;\n\ttext-align: center;\n\tmargin-bottom: 20px;\n\t}\n.leaflet-popup-content-wrapper {\n\tpadding: 1px;\n\ttext-align: left;\n\tborder-radius: 12px;\n\t}\n.leaflet-popup-content {\n\tmargin: 13px 19px;\n\tline-height: 1.4;\n\t}\n.leaflet-popup-content p {\n\tmargin: 18px 0;\n\t}\n.leaflet-popup-tip-container {\n\twidth: 40px;\n\theight: 20px;\n\tposition: absolute;\n\tleft: 50%;\n\tmargin-left: -20px;\n\toverflow: hidden;\n\tpointer-events: none;\n\t}\n.leaflet-popup-tip {\n\twidth: 17px;\n\theight: 17px;\n\tpadding: 1px;\n\n\tmargin: -10px auto 0;\n\n\t-webkit-transform: rotate(45deg);\n\t   -moz-transform: rotate(45deg);\n\t    -ms-transform: rotate(45deg);\n\t        transform: rotate(45deg);\n\t}\n.leaflet-popup-content-wrapper,\n.leaflet-popup-tip {\n\tbackground: white;\n\tcolor: #333;\n\tbox-shadow: 0 3px 14px rgba(0,0,0,0.4);\n\t}\n.leaflet-container a.leaflet-popup-close-button {\n\tposition: absolute;\n\ttop: 0;\n\tright: 0;\n\tpadding: 4px 4px 0 0;\n\tborder: none;\n\ttext-align: center;\n\twidth: 18px;\n\theight: 14px;\n\tfont: 16px/14px Tahoma, Verdana, sans-serif;\n\tcolor: #c3c3c3;\n\ttext-decoration: none;\n\tfont-weight: bold;\n\tbackground: transparent;\n\t}\n.leaflet-container a.leaflet-popup-close-button:hover {\n\tcolor: #999;\n\t}\n.leaflet-popup-scrolled {\n\toverflow: auto;\n\tborder-bottom: 1px solid #ddd;\n\tborder-top: 1px solid #ddd;\n\t}\n\n.leaflet-oldie .leaflet-popup-content-wrapper {\n\t-ms-zoom: 1;\n\t}\n.leaflet-oldie .leaflet-popup-tip {\n\twidth: 24px;\n\tmargin: 0 auto;\n\n\t-ms-filter: \"progid:DXImageTransform.Microsoft.Matrix(M11=0.70710678, M12=0.70710678, M21=-0.70710678, M22=0.70710678)\";\n\tfilter: progid:DXImageTransform.Microsoft.Matrix(M11=0.70710678, M12=0.70710678, M21=-0.70710678, M22=0.70710678);\n\t}\n.leaflet-oldie .leaflet-popup-tip-container {\n\tmargin-top: -1px;\n\t}\n\n.leaflet-oldie .leaflet-control-zoom,\n.leaflet-oldie .leaflet-control-layers,\n.leaflet-oldie .leaflet-popup-content-wrapper,\n.leaflet-oldie .leaflet-popup-tip {\n\tborder: 1px solid #999;\n\t}\n\n\t.leaflet-control-zoom {\n\t\tmargin-top: 10px !important;\n\t}\n\n\n/* div icon */\n\n.leaflet-div-icon {\n\tbackground: #fff;\n\tborder: 1px solid #666;\n\t}\n\n\n/* Tooltip */\n/* Base styles for the element that has a tooltip */\n.leaflet-tooltip {\n\tposition: absolute;\n\tpadding: 6px;\n\tbackground-color: #fff;\n\tborder: 1px solid #fff;\n\tborder-radius: 3px;\n\tcolor: #222;\n\twhite-space: nowrap;\n\t-webkit-user-select: none;\n\t-moz-user-select: none;\n\t-ms-user-select: none;\n\tuser-select: none;\n\tpointer-events: none;\n\tbox-shadow: 0 1px 3px rgba(0,0,0,0.4);\n\t}\n.leaflet-tooltip.leaflet-clickable {\n\tcursor: pointer;\n\tpointer-events: auto;\n\t}\n.leaflet-tooltip-top:before,\n.leaflet-tooltip-bottom:before,\n.leaflet-tooltip-left:before,\n.leaflet-tooltip-right:before {\n\tposition: absolute;\n\tpointer-events: none;\n\tborder: 6px solid transparent;\n\tbackground: transparent;\n\tcontent: \"\";\n\t}\n\n/* Directions */\n\n.leaflet-tooltip-bottom {\n\tmargin-top: 6px;\n}\n.leaflet-tooltip-top {\n\tmargin-top: -6px;\n}\n.leaflet-tooltip-bottom:before,\n.leaflet-tooltip-top:before {\n\tleft: 50%;\n\tmargin-left: -6px;\n\t}\n.leaflet-tooltip-top:before {\n\tbottom: 0;\n\tmargin-bottom: -12px;\n\tborder-top-color: #fff;\n\t}\n.leaflet-tooltip-bottom:before {\n\ttop: 0;\n\tmargin-top: -12px;\n\tmargin-left: -6px;\n\tborder-bottom-color: #fff;\n\t}\n.leaflet-tooltip-left {\n\tmargin-left: -6px;\n}\n.leaflet-tooltip-right {\n\tmargin-left: 6px;\n}\n.leaflet-tooltip-left:before,\n.leaflet-tooltip-right:before {\n\ttop: 50%;\n\tmargin-top: -6px;\n\t}\n.leaflet-tooltip-left:before {\n\tright: 0;\n\tmargin-right: -12px;\n\tborder-left-color: #fff;\n\t}\n.leaflet-tooltip-right:before {\n\tleft: 0;\n\tmargin-left: -12px;\n\tborder-right-color: #fff;\n\t}\n\n\n/**\n * Leaflet map styles\n */\n\n.leaflet-container {\n  width: 100%;\n  height: 100vh;\n  .leaflet-div-icon {\n    background: transparent;\n    border: 0;\n  }\n  .hackney-map-marker, .hackney-map-home-marker  {\n    position: relative;\n    left: -10px;\n  }\n  .hackney-map-home-marker {\n    .map-marker--foreground {\n      font-size: 37px;\n      top: -1px;\n      left: 0;\n      color: ${red[\"error\"]} !important;\n    }\n    svg.fa-home {\n      position: absolute;\n      top: 4px;\n      left: 4px;\n      z-index: -1;\n      color: ${light[\"white\"]};\n      font-size: 18px;\n    }\n  }\n  svg.fa-map-marker {\n    position: absolute;\n    top: -3px;\n    left: -2px;\n    z-index: -1;\n    color: ${light[\"white\"]};\n    font-size: 42px;\n  }\n}\n\n.leaflet-popup {\n  .leaflet-popup-content-wrapper {\n    background: transparent;\n    box-shadow: none;\n    padding: 0;\n    border: 0;\n  }\n  .leaflet-popup-content {\n    ${breakpoint('md')`\n      background: transparent;\n      margin: 0 !important;\n      border: 0;\n    `};\n  }\n  .leaflet-popup-tip-container {\n    display: none;\n  }\n  .card {\n    margin-bottom: 0;\n    border: 0;\n  }\n}\n  \n`;","import styled from \"styled-components\";\nimport breakpoint from 'styled-components-breakpoint';\nimport { light } from \"../../settings\";\n\nexport const SidebarContainer = styled.div`\n    background: ${light[\"white\"]};\n    border-radius: 3px;\n    width: 100%;\n    ${breakpoint('md')`\n        margin: 20px !important;\n        max-width: 375px;\n        box-shadow: 4px 4px 4px rgba(0, 0, 0, 0.05);\n        overflow: hidden;\n        height: calc(100vh - 40px);\n        float: left;\n    `}\n`;","import React, { useEffect, useState, useMemo } from 'react';\nimport RouteContainer from \"./components/RouteContainer/RouteContainer\";\nimport Home from \"./components/Home/Home\";\nimport { GlobalStyle } from \"./helpers/GlobalStyle/GlobalStyle\";\nimport UrlContext from \"./context/UrlContext/UrlContext\";\nimport PrevUrlContext from \"./context/PrevUrlContext/PrevUrlContext\";\nimport UrlParamsContext from \"./context/UrlParamsContext/UrlParamsContext\";\nimport PrevUrlParamsContext from \"./context/PrevUrlParamsContext/PrevUrlParamsContext\";\nimport MapToggleContext from \"./context/MapToggleContext/MapToggleContext\";\nimport AppLoading from './AppLoading';\nimport { SidebarContainer } from \"./util/styled-components/SidebarContainer\"\nimport {ThemeProvider} from 'styled-components';\nimport \"react-leaflet-markercluster/dist/styles.min.css\";\n\nfunction App() {\n  const [url, setUrl] = useState(\"\");\n  const urlValue = useMemo(() => ({ url, setUrl }), [url, setUrl]);\n  const [prevUrl, setPrevUrl] = useState([]);\n  const prevUrlValue = useMemo(() => ({ prevUrl, setPrevUrl }), [prevUrl, setPrevUrl]);\n  const [urlParams, setUrlParams] = useState({});\n  const urlParamValue = useMemo(() => ({ urlParams, setUrlParams }), [urlParams, setUrlParams]);\n  const [prevUrlParams, setPrevUrlParams] = useState([]);\n  const prevUrlParamsValue = useMemo(() => ({ prevUrlParams, setPrevUrlParams }), [prevUrlParams, setPrevUrlParams]);\n  const [mapToggle, setMapToggle] = useState(\"false\");\n  const mapToggleValue = useMemo(() => ({ mapToggle, setMapToggle }), [mapToggle, setMapToggle]);\n  const [isLoading, setIsLoading] = useState(true);\n  const paramsArray = [\"category_explorer\", \"postcode\", \"service_search\", \"support_service\", \"categories\", \"demographic\", \"set_postcode\", \"select_categories\", \"select_demographics\", \"map_toggle\"];\n\n  const theme = {\n    breakpoints: { \n      xs: 0,\n      sm: 576,\n      md: 768,\n      lg: 992,\n      xl: 1200\n    }\n  };\n\n  useEffect(() => {\n    async function storeQuery() {\n      let paramObj = {};\n      const currentSearch = window.location.search;\n      if (currentSearch) {\n        setUrl(currentSearch);\n\n        const queryParts = currentSearch.substring(1).split(/[&;]/g);\n        const arrayLength = queryParts.length;\n        for (let i = 0; i < arrayLength; i++) {\n          const queryKeyValue = queryParts[i].split(\"=\");\n          if (paramsArray.includes(queryKeyValue[0])) {\n            paramObj[queryKeyValue[0]] = queryKeyValue[1];\n          }\n        }\n        setUrlParams(paramObj);\n      }\n      setIsLoading(false);\n    }\n    storeQuery();\n  }, [setUrl, setPrevUrl, setUrlParams, setIsLoading]);\n\n  return (\n    isLoading ? <AppLoading /> :\n    (\n      <div className=\"App\">\n        <ThemeProvider theme={theme}>\n          <UrlParamsContext.Provider value={urlParamValue}>\n            <UrlContext.Provider value={urlValue}>\n              <PrevUrlContext.Provider value={prevUrlValue}>\n                <PrevUrlParamsContext.Provider value={prevUrlParamsValue}>\n                  <MapToggleContext.Provider value={mapToggleValue}>\n                    <SidebarContainer>\n                      { (Object.keys(urlParamValue.urlParams).length !== 0) ? <RouteContainer /> : <Home /> }\n                    </SidebarContainer>\n                    <GlobalStyle />\n                  </MapToggleContext.Provider>\n                </PrevUrlParamsContext.Provider>\n              </PrevUrlContext.Provider>\n            </UrlContext.Provider>\n          </UrlParamsContext.Provider>\n        </ThemeProvider>\n      </div>\n    )\n  )\n\n}\n\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { QueryParamProvider } from \"use-query-params\";\nimport history from \"./history\";\n\nconst target = document.getElementById(\"erw-root\");\nif (target) {\n  ReactDOM.render(\n    <QueryParamProvider history={history}>\n      <App />\n    </QueryParamProvider>,\n    target\n  );\n}\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}